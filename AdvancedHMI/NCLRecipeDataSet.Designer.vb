'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("NCLRecipeDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class NCLRecipeDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableBarrel As BarrelDataTable
    
    Private tableBottom_Tumbler As Bottom_TumblerDataTable
    
    Private tableBushing As BushingDataTable
    
    Private tableCharts As ChartsDataTable
    
    Private tableDrill_Pin As Drill_PinDataTable
    
    Private tableKnurl_Pin As Knurl_PinDataTable
    
    Private tableMid_Tumbler As Mid_TumblerDataTable
    
    Private tableRecipe As RecipeDataTable
    
    Private tableSprings As SpringsDataTable
    
    Private tableStation_13_Tooling As Station_13_ToolingDataTable
    
    Private tableStation_14_Tooling As Station_14_ToolingDataTable
    
    Private tableStation_15_Tooling As Station_15_ToolingDataTable
    
    Private tableStation_16_Tooling As Station_16_ToolingDataTable
    
    Private tableStation_2_Tooling As Station_2_ToolingDataTable
    
    Private tableStation_3_Tooling As Station_3_ToolingDataTable
    
    Private tableStation_9_Tooling As Station_9_ToolingDataTable
    
    Private tableTop_Sleeve As Top_SleeveDataTable
    
    Private tableTop_Tumbler As Top_TumblerDataTable
    
    Private tableTumbler_Kit As Tumbler_KitDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Barrel")) Is Nothing) Then
                MyBase.Tables.Add(New BarrelDataTable(ds.Tables("Barrel")))
            End If
            If (Not (ds.Tables("Bottom Tumbler")) Is Nothing) Then
                MyBase.Tables.Add(New Bottom_TumblerDataTable(ds.Tables("Bottom Tumbler")))
            End If
            If (Not (ds.Tables("Bushing")) Is Nothing) Then
                MyBase.Tables.Add(New BushingDataTable(ds.Tables("Bushing")))
            End If
            If (Not (ds.Tables("Charts")) Is Nothing) Then
                MyBase.Tables.Add(New ChartsDataTable(ds.Tables("Charts")))
            End If
            If (Not (ds.Tables("Drill Pin")) Is Nothing) Then
                MyBase.Tables.Add(New Drill_PinDataTable(ds.Tables("Drill Pin")))
            End If
            If (Not (ds.Tables("Knurl Pin")) Is Nothing) Then
                MyBase.Tables.Add(New Knurl_PinDataTable(ds.Tables("Knurl Pin")))
            End If
            If (Not (ds.Tables("Mid Tumbler")) Is Nothing) Then
                MyBase.Tables.Add(New Mid_TumblerDataTable(ds.Tables("Mid Tumbler")))
            End If
            If (Not (ds.Tables("Recipe")) Is Nothing) Then
                MyBase.Tables.Add(New RecipeDataTable(ds.Tables("Recipe")))
            End If
            If (Not (ds.Tables("Springs")) Is Nothing) Then
                MyBase.Tables.Add(New SpringsDataTable(ds.Tables("Springs")))
            End If
            If (Not (ds.Tables("Station 13 Tooling")) Is Nothing) Then
                MyBase.Tables.Add(New Station_13_ToolingDataTable(ds.Tables("Station 13 Tooling")))
            End If
            If (Not (ds.Tables("Station 14 Tooling")) Is Nothing) Then
                MyBase.Tables.Add(New Station_14_ToolingDataTable(ds.Tables("Station 14 Tooling")))
            End If
            If (Not (ds.Tables("Station 15 Tooling")) Is Nothing) Then
                MyBase.Tables.Add(New Station_15_ToolingDataTable(ds.Tables("Station 15 Tooling")))
            End If
            If (Not (ds.Tables("Station 16 Tooling")) Is Nothing) Then
                MyBase.Tables.Add(New Station_16_ToolingDataTable(ds.Tables("Station 16 Tooling")))
            End If
            If (Not (ds.Tables("Station 2 Tooling")) Is Nothing) Then
                MyBase.Tables.Add(New Station_2_ToolingDataTable(ds.Tables("Station 2 Tooling")))
            End If
            If (Not (ds.Tables("Station 3 Tooling")) Is Nothing) Then
                MyBase.Tables.Add(New Station_3_ToolingDataTable(ds.Tables("Station 3 Tooling")))
            End If
            If (Not (ds.Tables("Station 9 Tooling")) Is Nothing) Then
                MyBase.Tables.Add(New Station_9_ToolingDataTable(ds.Tables("Station 9 Tooling")))
            End If
            If (Not (ds.Tables("Top Sleeve")) Is Nothing) Then
                MyBase.Tables.Add(New Top_SleeveDataTable(ds.Tables("Top Sleeve")))
            End If
            If (Not (ds.Tables("Top Tumbler")) Is Nothing) Then
                MyBase.Tables.Add(New Top_TumblerDataTable(ds.Tables("Top Tumbler")))
            End If
            If (Not (ds.Tables("Tumbler Kit")) Is Nothing) Then
                MyBase.Tables.Add(New Tumbler_KitDataTable(ds.Tables("Tumbler Kit")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Barrel() As BarrelDataTable
        Get
            Return Me.tableBarrel
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Bottom_Tumbler() As Bottom_TumblerDataTable
        Get
            Return Me.tableBottom_Tumbler
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Bushing() As BushingDataTable
        Get
            Return Me.tableBushing
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Charts() As ChartsDataTable
        Get
            Return Me.tableCharts
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Drill_Pin() As Drill_PinDataTable
        Get
            Return Me.tableDrill_Pin
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Knurl_Pin() As Knurl_PinDataTable
        Get
            Return Me.tableKnurl_Pin
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Mid_Tumbler() As Mid_TumblerDataTable
        Get
            Return Me.tableMid_Tumbler
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Recipe() As RecipeDataTable
        Get
            Return Me.tableRecipe
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Springs() As SpringsDataTable
        Get
            Return Me.tableSprings
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Station_13_Tooling() As Station_13_ToolingDataTable
        Get
            Return Me.tableStation_13_Tooling
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Station_14_Tooling() As Station_14_ToolingDataTable
        Get
            Return Me.tableStation_14_Tooling
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Station_15_Tooling() As Station_15_ToolingDataTable
        Get
            Return Me.tableStation_15_Tooling
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Station_16_Tooling() As Station_16_ToolingDataTable
        Get
            Return Me.tableStation_16_Tooling
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Station_2_Tooling() As Station_2_ToolingDataTable
        Get
            Return Me.tableStation_2_Tooling
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Station_3_Tooling() As Station_3_ToolingDataTable
        Get
            Return Me.tableStation_3_Tooling
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Station_9_Tooling() As Station_9_ToolingDataTable
        Get
            Return Me.tableStation_9_Tooling
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Top_Sleeve() As Top_SleeveDataTable
        Get
            Return Me.tableTop_Sleeve
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Top_Tumbler() As Top_TumblerDataTable
        Get
            Return Me.tableTop_Tumbler
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Tumbler_Kit() As Tumbler_KitDataTable
        Get
            Return Me.tableTumbler_Kit
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As NCLRecipeDataSet = CType(MyBase.Clone,NCLRecipeDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("Barrel")) Is Nothing) Then
                MyBase.Tables.Add(New BarrelDataTable(ds.Tables("Barrel")))
            End If
            If (Not (ds.Tables("Bottom Tumbler")) Is Nothing) Then
                MyBase.Tables.Add(New Bottom_TumblerDataTable(ds.Tables("Bottom Tumbler")))
            End If
            If (Not (ds.Tables("Bushing")) Is Nothing) Then
                MyBase.Tables.Add(New BushingDataTable(ds.Tables("Bushing")))
            End If
            If (Not (ds.Tables("Charts")) Is Nothing) Then
                MyBase.Tables.Add(New ChartsDataTable(ds.Tables("Charts")))
            End If
            If (Not (ds.Tables("Drill Pin")) Is Nothing) Then
                MyBase.Tables.Add(New Drill_PinDataTable(ds.Tables("Drill Pin")))
            End If
            If (Not (ds.Tables("Knurl Pin")) Is Nothing) Then
                MyBase.Tables.Add(New Knurl_PinDataTable(ds.Tables("Knurl Pin")))
            End If
            If (Not (ds.Tables("Mid Tumbler")) Is Nothing) Then
                MyBase.Tables.Add(New Mid_TumblerDataTable(ds.Tables("Mid Tumbler")))
            End If
            If (Not (ds.Tables("Recipe")) Is Nothing) Then
                MyBase.Tables.Add(New RecipeDataTable(ds.Tables("Recipe")))
            End If
            If (Not (ds.Tables("Springs")) Is Nothing) Then
                MyBase.Tables.Add(New SpringsDataTable(ds.Tables("Springs")))
            End If
            If (Not (ds.Tables("Station 13 Tooling")) Is Nothing) Then
                MyBase.Tables.Add(New Station_13_ToolingDataTable(ds.Tables("Station 13 Tooling")))
            End If
            If (Not (ds.Tables("Station 14 Tooling")) Is Nothing) Then
                MyBase.Tables.Add(New Station_14_ToolingDataTable(ds.Tables("Station 14 Tooling")))
            End If
            If (Not (ds.Tables("Station 15 Tooling")) Is Nothing) Then
                MyBase.Tables.Add(New Station_15_ToolingDataTable(ds.Tables("Station 15 Tooling")))
            End If
            If (Not (ds.Tables("Station 16 Tooling")) Is Nothing) Then
                MyBase.Tables.Add(New Station_16_ToolingDataTable(ds.Tables("Station 16 Tooling")))
            End If
            If (Not (ds.Tables("Station 2 Tooling")) Is Nothing) Then
                MyBase.Tables.Add(New Station_2_ToolingDataTable(ds.Tables("Station 2 Tooling")))
            End If
            If (Not (ds.Tables("Station 3 Tooling")) Is Nothing) Then
                MyBase.Tables.Add(New Station_3_ToolingDataTable(ds.Tables("Station 3 Tooling")))
            End If
            If (Not (ds.Tables("Station 9 Tooling")) Is Nothing) Then
                MyBase.Tables.Add(New Station_9_ToolingDataTable(ds.Tables("Station 9 Tooling")))
            End If
            If (Not (ds.Tables("Top Sleeve")) Is Nothing) Then
                MyBase.Tables.Add(New Top_SleeveDataTable(ds.Tables("Top Sleeve")))
            End If
            If (Not (ds.Tables("Top Tumbler")) Is Nothing) Then
                MyBase.Tables.Add(New Top_TumblerDataTable(ds.Tables("Top Tumbler")))
            End If
            If (Not (ds.Tables("Tumbler Kit")) Is Nothing) Then
                MyBase.Tables.Add(New Tumbler_KitDataTable(ds.Tables("Tumbler Kit")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableBarrel = CType(MyBase.Tables("Barrel"),BarrelDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBarrel) Is Nothing) Then
                Me.tableBarrel.InitVars
            End If
        End If
        Me.tableBottom_Tumbler = CType(MyBase.Tables("Bottom Tumbler"),Bottom_TumblerDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBottom_Tumbler) Is Nothing) Then
                Me.tableBottom_Tumbler.InitVars
            End If
        End If
        Me.tableBushing = CType(MyBase.Tables("Bushing"),BushingDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBushing) Is Nothing) Then
                Me.tableBushing.InitVars
            End If
        End If
        Me.tableCharts = CType(MyBase.Tables("Charts"),ChartsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCharts) Is Nothing) Then
                Me.tableCharts.InitVars
            End If
        End If
        Me.tableDrill_Pin = CType(MyBase.Tables("Drill Pin"),Drill_PinDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDrill_Pin) Is Nothing) Then
                Me.tableDrill_Pin.InitVars
            End If
        End If
        Me.tableKnurl_Pin = CType(MyBase.Tables("Knurl Pin"),Knurl_PinDataTable)
        If (initTable = true) Then
            If (Not (Me.tableKnurl_Pin) Is Nothing) Then
                Me.tableKnurl_Pin.InitVars
            End If
        End If
        Me.tableMid_Tumbler = CType(MyBase.Tables("Mid Tumbler"),Mid_TumblerDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMid_Tumbler) Is Nothing) Then
                Me.tableMid_Tumbler.InitVars
            End If
        End If
        Me.tableRecipe = CType(MyBase.Tables("Recipe"),RecipeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRecipe) Is Nothing) Then
                Me.tableRecipe.InitVars
            End If
        End If
        Me.tableSprings = CType(MyBase.Tables("Springs"),SpringsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSprings) Is Nothing) Then
                Me.tableSprings.InitVars
            End If
        End If
        Me.tableStation_13_Tooling = CType(MyBase.Tables("Station 13 Tooling"),Station_13_ToolingDataTable)
        If (initTable = true) Then
            If (Not (Me.tableStation_13_Tooling) Is Nothing) Then
                Me.tableStation_13_Tooling.InitVars
            End If
        End If
        Me.tableStation_14_Tooling = CType(MyBase.Tables("Station 14 Tooling"),Station_14_ToolingDataTable)
        If (initTable = true) Then
            If (Not (Me.tableStation_14_Tooling) Is Nothing) Then
                Me.tableStation_14_Tooling.InitVars
            End If
        End If
        Me.tableStation_15_Tooling = CType(MyBase.Tables("Station 15 Tooling"),Station_15_ToolingDataTable)
        If (initTable = true) Then
            If (Not (Me.tableStation_15_Tooling) Is Nothing) Then
                Me.tableStation_15_Tooling.InitVars
            End If
        End If
        Me.tableStation_16_Tooling = CType(MyBase.Tables("Station 16 Tooling"),Station_16_ToolingDataTable)
        If (initTable = true) Then
            If (Not (Me.tableStation_16_Tooling) Is Nothing) Then
                Me.tableStation_16_Tooling.InitVars
            End If
        End If
        Me.tableStation_2_Tooling = CType(MyBase.Tables("Station 2 Tooling"),Station_2_ToolingDataTable)
        If (initTable = true) Then
            If (Not (Me.tableStation_2_Tooling) Is Nothing) Then
                Me.tableStation_2_Tooling.InitVars
            End If
        End If
        Me.tableStation_3_Tooling = CType(MyBase.Tables("Station 3 Tooling"),Station_3_ToolingDataTable)
        If (initTable = true) Then
            If (Not (Me.tableStation_3_Tooling) Is Nothing) Then
                Me.tableStation_3_Tooling.InitVars
            End If
        End If
        Me.tableStation_9_Tooling = CType(MyBase.Tables("Station 9 Tooling"),Station_9_ToolingDataTable)
        If (initTable = true) Then
            If (Not (Me.tableStation_9_Tooling) Is Nothing) Then
                Me.tableStation_9_Tooling.InitVars
            End If
        End If
        Me.tableTop_Sleeve = CType(MyBase.Tables("Top Sleeve"),Top_SleeveDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTop_Sleeve) Is Nothing) Then
                Me.tableTop_Sleeve.InitVars
            End If
        End If
        Me.tableTop_Tumbler = CType(MyBase.Tables("Top Tumbler"),Top_TumblerDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTop_Tumbler) Is Nothing) Then
                Me.tableTop_Tumbler.InitVars
            End If
        End If
        Me.tableTumbler_Kit = CType(MyBase.Tables("Tumbler Kit"),Tumbler_KitDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTumbler_Kit) Is Nothing) Then
                Me.tableTumbler_Kit.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "NCLRecipeDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/NCLRecipeDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableBarrel = New BarrelDataTable()
        MyBase.Tables.Add(Me.tableBarrel)
        Me.tableBottom_Tumbler = New Bottom_TumblerDataTable()
        MyBase.Tables.Add(Me.tableBottom_Tumbler)
        Me.tableBushing = New BushingDataTable()
        MyBase.Tables.Add(Me.tableBushing)
        Me.tableCharts = New ChartsDataTable()
        MyBase.Tables.Add(Me.tableCharts)
        Me.tableDrill_Pin = New Drill_PinDataTable()
        MyBase.Tables.Add(Me.tableDrill_Pin)
        Me.tableKnurl_Pin = New Knurl_PinDataTable()
        MyBase.Tables.Add(Me.tableKnurl_Pin)
        Me.tableMid_Tumbler = New Mid_TumblerDataTable()
        MyBase.Tables.Add(Me.tableMid_Tumbler)
        Me.tableRecipe = New RecipeDataTable()
        MyBase.Tables.Add(Me.tableRecipe)
        Me.tableSprings = New SpringsDataTable()
        MyBase.Tables.Add(Me.tableSprings)
        Me.tableStation_13_Tooling = New Station_13_ToolingDataTable()
        MyBase.Tables.Add(Me.tableStation_13_Tooling)
        Me.tableStation_14_Tooling = New Station_14_ToolingDataTable()
        MyBase.Tables.Add(Me.tableStation_14_Tooling)
        Me.tableStation_15_Tooling = New Station_15_ToolingDataTable()
        MyBase.Tables.Add(Me.tableStation_15_Tooling)
        Me.tableStation_16_Tooling = New Station_16_ToolingDataTable()
        MyBase.Tables.Add(Me.tableStation_16_Tooling)
        Me.tableStation_2_Tooling = New Station_2_ToolingDataTable()
        MyBase.Tables.Add(Me.tableStation_2_Tooling)
        Me.tableStation_3_Tooling = New Station_3_ToolingDataTable()
        MyBase.Tables.Add(Me.tableStation_3_Tooling)
        Me.tableStation_9_Tooling = New Station_9_ToolingDataTable()
        MyBase.Tables.Add(Me.tableStation_9_Tooling)
        Me.tableTop_Sleeve = New Top_SleeveDataTable()
        MyBase.Tables.Add(Me.tableTop_Sleeve)
        Me.tableTop_Tumbler = New Top_TumblerDataTable()
        MyBase.Tables.Add(Me.tableTop_Tumbler)
        Me.tableTumbler_Kit = New Tumbler_KitDataTable()
        MyBase.Tables.Add(Me.tableTumbler_Kit)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeBarrel() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeBottom_Tumbler() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeBushing() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeCharts() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeDrill_Pin() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeKnurl_Pin() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeMid_Tumbler() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeRecipe() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeSprings() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeStation_13_Tooling() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeStation_14_Tooling() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeStation_15_Tooling() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeStation_16_Tooling() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeStation_2_Tooling() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeStation_3_Tooling() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeStation_9_Tooling() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTop_Sleeve() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTop_Tumbler() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeTumbler_Kit() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub BarrelRowChangeEventHandler(ByVal sender As Object, ByVal e As BarrelRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub Bottom_TumblerRowChangeEventHandler(ByVal sender As Object, ByVal e As Bottom_TumblerRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub BushingRowChangeEventHandler(ByVal sender As Object, ByVal e As BushingRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub ChartsRowChangeEventHandler(ByVal sender As Object, ByVal e As ChartsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub Drill_PinRowChangeEventHandler(ByVal sender As Object, ByVal e As Drill_PinRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub Knurl_PinRowChangeEventHandler(ByVal sender As Object, ByVal e As Knurl_PinRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub Mid_TumblerRowChangeEventHandler(ByVal sender As Object, ByVal e As Mid_TumblerRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub RecipeRowChangeEventHandler(ByVal sender As Object, ByVal e As RecipeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub SpringsRowChangeEventHandler(ByVal sender As Object, ByVal e As SpringsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub Station_13_ToolingRowChangeEventHandler(ByVal sender As Object, ByVal e As Station_13_ToolingRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub Station_14_ToolingRowChangeEventHandler(ByVal sender As Object, ByVal e As Station_14_ToolingRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub Station_15_ToolingRowChangeEventHandler(ByVal sender As Object, ByVal e As Station_15_ToolingRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub Station_16_ToolingRowChangeEventHandler(ByVal sender As Object, ByVal e As Station_16_ToolingRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub Station_2_ToolingRowChangeEventHandler(ByVal sender As Object, ByVal e As Station_2_ToolingRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub Station_3_ToolingRowChangeEventHandler(ByVal sender As Object, ByVal e As Station_3_ToolingRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub Station_9_ToolingRowChangeEventHandler(ByVal sender As Object, ByVal e As Station_9_ToolingRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub Top_SleeveRowChangeEventHandler(ByVal sender As Object, ByVal e As Top_SleeveRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub Top_TumblerRowChangeEventHandler(ByVal sender As Object, ByVal e As Top_TumblerRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub Tumbler_KitRowChangeEventHandler(ByVal sender As Object, ByVal e As Tumbler_KitRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BarrelDataTable
        Inherits Global.System.Data.TypedTableBase(Of BarrelRow)
        
        Private columnBarrel As Global.System.Data.DataColumn
        
        Private columnBowl As Global.System.Data.DataColumn
        
        Private columnMark_Orient As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Barrel"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BarrelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBarrel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BowlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBowl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mark_OrientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMark_Orient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BarrelRow
            Get
                Return CType(Me.Rows(index),BarrelRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event BarrelRowChanging As BarrelRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event BarrelRowChanged As BarrelRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event BarrelRowDeleting As BarrelRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event BarrelRowDeleted As BarrelRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddBarrelRow(ByVal row As BarrelRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddBarrelRow(ByVal Barrel As String, ByVal Bowl As String, ByVal Mark_Orient As Single) As BarrelRow
            Dim rowBarrelRow As BarrelRow = CType(Me.NewRow,BarrelRow)
            Dim columnValuesArray() As Object = New Object() {Barrel, Bowl, Mark_Orient}
            rowBarrelRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBarrelRow)
            Return rowBarrelRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByBarrel(ByVal Barrel As String) As BarrelRow
            Return CType(Me.Rows.Find(New Object() {Barrel}),BarrelRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BarrelDataTable = CType(MyBase.Clone,BarrelDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BarrelDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBarrel = MyBase.Columns("Barrel")
            Me.columnBowl = MyBase.Columns("Bowl")
            Me.columnMark_Orient = MyBase.Columns("Mark Orient")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBarrel = New Global.System.Data.DataColumn("Barrel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBarrel)
            Me.columnBowl = New Global.System.Data.DataColumn("Bowl", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBowl)
            Me.columnMark_Orient = New Global.System.Data.DataColumn("Mark Orient", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMark_Orient)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnBarrel}, true))
            Me.columnBarrel.AllowDBNull = false
            Me.columnBarrel.Unique = true
            Me.columnBarrel.MaxLength = 255
            Me.columnBowl.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewBarrelRow() As BarrelRow
            Return CType(Me.NewRow,BarrelRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BarrelRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BarrelRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BarrelRowChangedEvent) Is Nothing) Then
                RaiseEvent BarrelRowChanged(Me, New BarrelRowChangeEvent(CType(e.Row,BarrelRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BarrelRowChangingEvent) Is Nothing) Then
                RaiseEvent BarrelRowChanging(Me, New BarrelRowChangeEvent(CType(e.Row,BarrelRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BarrelRowDeletedEvent) Is Nothing) Then
                RaiseEvent BarrelRowDeleted(Me, New BarrelRowChangeEvent(CType(e.Row,BarrelRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BarrelRowDeletingEvent) Is Nothing) Then
                RaiseEvent BarrelRowDeleting(Me, New BarrelRowChangeEvent(CType(e.Row,BarrelRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveBarrelRow(ByVal row As BarrelRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BarrelDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Bottom_TumblerDataTable
        Inherits Global.System.Data.TypedTableBase(Of Bottom_TumblerRow)
        
        Private columnBottom_Tumbler As Global.System.Data.DataColumn
        
        Private columnBowl As Global.System.Data.DataColumn
        
        Private columnStepped As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Bottom Tumbler"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bottom_TumblerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBottom_Tumbler
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BowlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBowl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SteppedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStepped
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Bottom_TumblerRow
            Get
                Return CType(Me.Rows(index),Bottom_TumblerRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Bottom_TumblerRowChanging As Bottom_TumblerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Bottom_TumblerRowChanged As Bottom_TumblerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Bottom_TumblerRowDeleting As Bottom_TumblerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Bottom_TumblerRowDeleted As Bottom_TumblerRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddBottom_TumblerRow(ByVal row As Bottom_TumblerRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddBottom_TumblerRow(ByVal Bottom_Tumbler As String, ByVal Bowl As Single, ByVal Stepped As Integer) As Bottom_TumblerRow
            Dim rowBottom_TumblerRow As Bottom_TumblerRow = CType(Me.NewRow,Bottom_TumblerRow)
            Dim columnValuesArray() As Object = New Object() {Bottom_Tumbler, Bowl, Stepped}
            rowBottom_TumblerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBottom_TumblerRow)
            Return rowBottom_TumblerRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByBottom_Tumbler(ByVal Bottom_Tumbler As String) As Bottom_TumblerRow
            Return CType(Me.Rows.Find(New Object() {Bottom_Tumbler}),Bottom_TumblerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Bottom_TumblerDataTable = CType(MyBase.Clone,Bottom_TumblerDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Bottom_TumblerDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBottom_Tumbler = MyBase.Columns("Bottom Tumbler")
            Me.columnBowl = MyBase.Columns("Bowl")
            Me.columnStepped = MyBase.Columns("Stepped")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBottom_Tumbler = New Global.System.Data.DataColumn("Bottom Tumbler", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBottom_Tumbler)
            Me.columnBowl = New Global.System.Data.DataColumn("Bowl", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBowl)
            Me.columnStepped = New Global.System.Data.DataColumn("Stepped", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStepped)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnBottom_Tumbler}, true))
            Me.columnBottom_Tumbler.AllowDBNull = false
            Me.columnBottom_Tumbler.Unique = true
            Me.columnBottom_Tumbler.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewBottom_TumblerRow() As Bottom_TumblerRow
            Return CType(Me.NewRow,Bottom_TumblerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Bottom_TumblerRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Bottom_TumblerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Bottom_TumblerRowChangedEvent) Is Nothing) Then
                RaiseEvent Bottom_TumblerRowChanged(Me, New Bottom_TumblerRowChangeEvent(CType(e.Row,Bottom_TumblerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Bottom_TumblerRowChangingEvent) Is Nothing) Then
                RaiseEvent Bottom_TumblerRowChanging(Me, New Bottom_TumblerRowChangeEvent(CType(e.Row,Bottom_TumblerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Bottom_TumblerRowDeletedEvent) Is Nothing) Then
                RaiseEvent Bottom_TumblerRowDeleted(Me, New Bottom_TumblerRowChangeEvent(CType(e.Row,Bottom_TumblerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Bottom_TumblerRowDeletingEvent) Is Nothing) Then
                RaiseEvent Bottom_TumblerRowDeleting(Me, New Bottom_TumblerRowChangeEvent(CType(e.Row,Bottom_TumblerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveBottom_TumblerRow(ByVal row As Bottom_TumblerRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Bottom_TumblerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BushingDataTable
        Inherits Global.System.Data.TypedTableBase(Of BushingRow)
        
        Private columnBushing As Global.System.Data.DataColumn
        
        Private columnTooling_Code As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Bushing"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BushingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBushing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Tooling_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTooling_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BushingRow
            Get
                Return CType(Me.Rows(index),BushingRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event BushingRowChanging As BushingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event BushingRowChanged As BushingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event BushingRowDeleting As BushingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event BushingRowDeleted As BushingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddBushingRow(ByVal row As BushingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddBushingRow(ByVal Bushing As String, ByVal Tooling_Code As String) As BushingRow
            Dim rowBushingRow As BushingRow = CType(Me.NewRow,BushingRow)
            Dim columnValuesArray() As Object = New Object() {Bushing, Tooling_Code}
            rowBushingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBushingRow)
            Return rowBushingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByBushing(ByVal Bushing As String) As BushingRow
            Return CType(Me.Rows.Find(New Object() {Bushing}),BushingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BushingDataTable = CType(MyBase.Clone,BushingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BushingDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBushing = MyBase.Columns("Bushing")
            Me.columnTooling_Code = MyBase.Columns("Tooling Code")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBushing = New Global.System.Data.DataColumn("Bushing", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBushing)
            Me.columnTooling_Code = New Global.System.Data.DataColumn("Tooling Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTooling_Code)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnBushing}, true))
            Me.columnBushing.AllowDBNull = false
            Me.columnBushing.Unique = true
            Me.columnBushing.MaxLength = 255
            Me.columnTooling_Code.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewBushingRow() As BushingRow
            Return CType(Me.NewRow,BushingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BushingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BushingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BushingRowChangedEvent) Is Nothing) Then
                RaiseEvent BushingRowChanged(Me, New BushingRowChangeEvent(CType(e.Row,BushingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BushingRowChangingEvent) Is Nothing) Then
                RaiseEvent BushingRowChanging(Me, New BushingRowChangeEvent(CType(e.Row,BushingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BushingRowDeletedEvent) Is Nothing) Then
                RaiseEvent BushingRowDeleted(Me, New BushingRowChangeEvent(CType(e.Row,BushingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BushingRowDeletingEvent) Is Nothing) Then
                RaiseEvent BushingRowDeleting(Me, New BushingRowChangeEvent(CType(e.Row,BushingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveBushingRow(ByVal row As BushingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BushingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ChartsDataTable
        Inherits Global.System.Data.TypedTableBase(Of ChartsRow)
        
        Private columnChart_Name As Global.System.Data.DataColumn
        
        Private columnPart_Type As Global.System.Data.DataColumn
        
        Private columnKeyCode_1 As Global.System.Data.DataColumn
        
        Private _columnPart__1 As Global.System.Data.DataColumn
        
        Private columnKeyCode_2 As Global.System.Data.DataColumn
        
        Private _columnPart__2 As Global.System.Data.DataColumn
        
        Private columnKeyCode_3 As Global.System.Data.DataColumn
        
        Private _columnPart__3 As Global.System.Data.DataColumn
        
        Private columnKeyCode_4 As Global.System.Data.DataColumn
        
        Private _columnPart__4 As Global.System.Data.DataColumn
        
        Private columnKeyCode_5 As Global.System.Data.DataColumn
        
        Private _columnPart__5 As Global.System.Data.DataColumn
        
        Private columnKeyCode_6 As Global.System.Data.DataColumn
        
        Private _columnPart__6 As Global.System.Data.DataColumn
        
        Private columnKeyCode_7 As Global.System.Data.DataColumn
        
        Private _columnPart__7 As Global.System.Data.DataColumn
        
        Private columnKeyCode_8 As Global.System.Data.DataColumn
        
        Private _columnPart__8 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Charts"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Chart_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChart_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Part_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPart_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KeyCode_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyCode_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Part__1Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnPart__1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KeyCode_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyCode_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Part__2Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnPart__2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KeyCode_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyCode_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Part__3Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnPart__3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KeyCode_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyCode_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Part__4Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnPart__4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KeyCode_5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyCode_5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Part__5Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnPart__5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KeyCode_6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyCode_6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Part__6Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnPart__6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KeyCode_7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyCode_7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Part__7Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnPart__7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KeyCode_8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyCode_8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Part__8Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnPart__8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ChartsRow
            Get
                Return CType(Me.Rows(index),ChartsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ChartsRowChanging As ChartsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ChartsRowChanged As ChartsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ChartsRowDeleting As ChartsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event ChartsRowDeleted As ChartsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddChartsRow(ByVal row As ChartsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddChartsRow( _
                    ByVal Chart_Name As String,  _
                    ByVal Part_Type As String,  _
                    ByVal KeyCode_1 As String,  _
                    ByVal _Part__1 As String,  _
                    ByVal KeyCode_2 As String,  _
                    ByVal _Part__2 As String,  _
                    ByVal KeyCode_3 As String,  _
                    ByVal _Part__3 As String,  _
                    ByVal KeyCode_4 As String,  _
                    ByVal _Part__4 As String,  _
                    ByVal KeyCode_5 As String,  _
                    ByVal _Part__5 As String,  _
                    ByVal KeyCode_6 As String,  _
                    ByVal _Part__6 As String,  _
                    ByVal KeyCode_7 As String,  _
                    ByVal _Part__7 As String,  _
                    ByVal KeyCode_8 As String,  _
                    ByVal _Part__8 As String) As ChartsRow
            Dim rowChartsRow As ChartsRow = CType(Me.NewRow,ChartsRow)
            Dim columnValuesArray() As Object = New Object() {Chart_Name, Part_Type, KeyCode_1, _Part__1, KeyCode_2, _Part__2, KeyCode_3, _Part__3, KeyCode_4, _Part__4, KeyCode_5, _Part__5, KeyCode_6, _Part__6, KeyCode_7, _Part__7, KeyCode_8, _Part__8}
            rowChartsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowChartsRow)
            Return rowChartsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByChart_Name(ByVal Chart_Name As String) As ChartsRow
            Return CType(Me.Rows.Find(New Object() {Chart_Name}),ChartsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ChartsDataTable = CType(MyBase.Clone,ChartsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ChartsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnChart_Name = MyBase.Columns("Chart Name")
            Me.columnPart_Type = MyBase.Columns("Part Type")
            Me.columnKeyCode_1 = MyBase.Columns("KeyCode 1")
            Me._columnPart__1 = MyBase.Columns("Part #1")
            Me.columnKeyCode_2 = MyBase.Columns("KeyCode 2")
            Me._columnPart__2 = MyBase.Columns("Part #2")
            Me.columnKeyCode_3 = MyBase.Columns("KeyCode 3")
            Me._columnPart__3 = MyBase.Columns("Part #3")
            Me.columnKeyCode_4 = MyBase.Columns("KeyCode 4")
            Me._columnPart__4 = MyBase.Columns("Part #4")
            Me.columnKeyCode_5 = MyBase.Columns("KeyCode 5")
            Me._columnPart__5 = MyBase.Columns("Part #5")
            Me.columnKeyCode_6 = MyBase.Columns("KeyCode 6")
            Me._columnPart__6 = MyBase.Columns("Part #6")
            Me.columnKeyCode_7 = MyBase.Columns("KeyCode 7")
            Me._columnPart__7 = MyBase.Columns("Part #7")
            Me.columnKeyCode_8 = MyBase.Columns("KeyCode 8")
            Me._columnPart__8 = MyBase.Columns("Part #8")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnChart_Name = New Global.System.Data.DataColumn("Chart Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChart_Name)
            Me.columnPart_Type = New Global.System.Data.DataColumn("Part Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPart_Type)
            Me.columnKeyCode_1 = New Global.System.Data.DataColumn("KeyCode 1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyCode_1)
            Me._columnPart__1 = New Global.System.Data.DataColumn("Part #1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnPart__1.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnPart__1")
            Me._columnPart__1.ExtendedProperties.Add("Generator_UserColumnName", "Part #1")
            MyBase.Columns.Add(Me._columnPart__1)
            Me.columnKeyCode_2 = New Global.System.Data.DataColumn("KeyCode 2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyCode_2)
            Me._columnPart__2 = New Global.System.Data.DataColumn("Part #2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnPart__2.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnPart__2")
            Me._columnPart__2.ExtendedProperties.Add("Generator_UserColumnName", "Part #2")
            MyBase.Columns.Add(Me._columnPart__2)
            Me.columnKeyCode_3 = New Global.System.Data.DataColumn("KeyCode 3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyCode_3)
            Me._columnPart__3 = New Global.System.Data.DataColumn("Part #3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnPart__3.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnPart__3")
            Me._columnPart__3.ExtendedProperties.Add("Generator_UserColumnName", "Part #3")
            MyBase.Columns.Add(Me._columnPart__3)
            Me.columnKeyCode_4 = New Global.System.Data.DataColumn("KeyCode 4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyCode_4)
            Me._columnPart__4 = New Global.System.Data.DataColumn("Part #4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnPart__4.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnPart__4")
            Me._columnPart__4.ExtendedProperties.Add("Generator_UserColumnName", "Part #4")
            MyBase.Columns.Add(Me._columnPart__4)
            Me.columnKeyCode_5 = New Global.System.Data.DataColumn("KeyCode 5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyCode_5)
            Me._columnPart__5 = New Global.System.Data.DataColumn("Part #5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnPart__5.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnPart__5")
            Me._columnPart__5.ExtendedProperties.Add("Generator_UserColumnName", "Part #5")
            MyBase.Columns.Add(Me._columnPart__5)
            Me.columnKeyCode_6 = New Global.System.Data.DataColumn("KeyCode 6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyCode_6)
            Me._columnPart__6 = New Global.System.Data.DataColumn("Part #6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnPart__6.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnPart__6")
            Me._columnPart__6.ExtendedProperties.Add("Generator_UserColumnName", "Part #6")
            MyBase.Columns.Add(Me._columnPart__6)
            Me.columnKeyCode_7 = New Global.System.Data.DataColumn("KeyCode 7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyCode_7)
            Me._columnPart__7 = New Global.System.Data.DataColumn("Part #7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnPart__7.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnPart__7")
            Me._columnPart__7.ExtendedProperties.Add("Generator_UserColumnName", "Part #7")
            MyBase.Columns.Add(Me._columnPart__7)
            Me.columnKeyCode_8 = New Global.System.Data.DataColumn("KeyCode 8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyCode_8)
            Me._columnPart__8 = New Global.System.Data.DataColumn("Part #8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnPart__8.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnPart__8")
            Me._columnPart__8.ExtendedProperties.Add("Generator_UserColumnName", "Part #8")
            MyBase.Columns.Add(Me._columnPart__8)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnChart_Name}, true))
            Me.columnChart_Name.AllowDBNull = false
            Me.columnChart_Name.Unique = true
            Me.columnChart_Name.MaxLength = 255
            Me.columnPart_Type.MaxLength = 50
            Me.columnKeyCode_1.MaxLength = 255
            Me._columnPart__1.MaxLength = 255
            Me.columnKeyCode_2.MaxLength = 255
            Me._columnPart__2.MaxLength = 255
            Me.columnKeyCode_3.MaxLength = 255
            Me._columnPart__3.MaxLength = 255
            Me.columnKeyCode_4.MaxLength = 255
            Me._columnPart__4.MaxLength = 255
            Me.columnKeyCode_5.MaxLength = 255
            Me._columnPart__5.MaxLength = 255
            Me.columnKeyCode_6.MaxLength = 255
            Me._columnPart__6.MaxLength = 255
            Me.columnKeyCode_7.MaxLength = 255
            Me._columnPart__7.MaxLength = 255
            Me.columnKeyCode_8.MaxLength = 255
            Me._columnPart__8.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewChartsRow() As ChartsRow
            Return CType(Me.NewRow,ChartsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ChartsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ChartsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ChartsRowChangedEvent) Is Nothing) Then
                RaiseEvent ChartsRowChanged(Me, New ChartsRowChangeEvent(CType(e.Row,ChartsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ChartsRowChangingEvent) Is Nothing) Then
                RaiseEvent ChartsRowChanging(Me, New ChartsRowChangeEvent(CType(e.Row,ChartsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ChartsRowDeletedEvent) Is Nothing) Then
                RaiseEvent ChartsRowDeleted(Me, New ChartsRowChangeEvent(CType(e.Row,ChartsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ChartsRowDeletingEvent) Is Nothing) Then
                RaiseEvent ChartsRowDeleting(Me, New ChartsRowChangeEvent(CType(e.Row,ChartsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveChartsRow(ByVal row As ChartsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ChartsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Drill_PinDataTable
        Inherits Global.System.Data.TypedTableBase(Of Drill_PinRow)
        
        Private columnDrill_Pin As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Drill Pin"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Drill_PinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDrill_Pin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Drill_PinRow
            Get
                Return CType(Me.Rows(index),Drill_PinRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Drill_PinRowChanging As Drill_PinRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Drill_PinRowChanged As Drill_PinRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Drill_PinRowDeleting As Drill_PinRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Drill_PinRowDeleted As Drill_PinRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddDrill_PinRow(ByVal row As Drill_PinRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddDrill_PinRow(ByVal Drill_Pin As String) As Drill_PinRow
            Dim rowDrill_PinRow As Drill_PinRow = CType(Me.NewRow,Drill_PinRow)
            Dim columnValuesArray() As Object = New Object() {Drill_Pin}
            rowDrill_PinRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDrill_PinRow)
            Return rowDrill_PinRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByDrill_Pin(ByVal Drill_Pin As String) As Drill_PinRow
            Return CType(Me.Rows.Find(New Object() {Drill_Pin}),Drill_PinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Drill_PinDataTable = CType(MyBase.Clone,Drill_PinDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Drill_PinDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDrill_Pin = MyBase.Columns("Drill Pin")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDrill_Pin = New Global.System.Data.DataColumn("Drill Pin", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDrill_Pin)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDrill_Pin}, true))
            Me.columnDrill_Pin.AllowDBNull = false
            Me.columnDrill_Pin.Unique = true
            Me.columnDrill_Pin.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewDrill_PinRow() As Drill_PinRow
            Return CType(Me.NewRow,Drill_PinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Drill_PinRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Drill_PinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Drill_PinRowChangedEvent) Is Nothing) Then
                RaiseEvent Drill_PinRowChanged(Me, New Drill_PinRowChangeEvent(CType(e.Row,Drill_PinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Drill_PinRowChangingEvent) Is Nothing) Then
                RaiseEvent Drill_PinRowChanging(Me, New Drill_PinRowChangeEvent(CType(e.Row,Drill_PinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Drill_PinRowDeletedEvent) Is Nothing) Then
                RaiseEvent Drill_PinRowDeleted(Me, New Drill_PinRowChangeEvent(CType(e.Row,Drill_PinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Drill_PinRowDeletingEvent) Is Nothing) Then
                RaiseEvent Drill_PinRowDeleting(Me, New Drill_PinRowChangeEvent(CType(e.Row,Drill_PinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveDrill_PinRow(ByVal row As Drill_PinRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Drill_PinDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Knurl_PinDataTable
        Inherits Global.System.Data.TypedTableBase(Of Knurl_PinRow)
        
        Private columnKnurl_Pin As Global.System.Data.DataColumn
        
        Private columnTooling_Code As Global.System.Data.DataColumn
        
        Private columnBowl As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Knurl Pin"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Knurl_PinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKnurl_Pin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Tooling_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTooling_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BowlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBowl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Knurl_PinRow
            Get
                Return CType(Me.Rows(index),Knurl_PinRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Knurl_PinRowChanging As Knurl_PinRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Knurl_PinRowChanged As Knurl_PinRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Knurl_PinRowDeleting As Knurl_PinRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Knurl_PinRowDeleted As Knurl_PinRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddKnurl_PinRow(ByVal row As Knurl_PinRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddKnurl_PinRow(ByVal Knurl_Pin As String, ByVal Tooling_Code As String, ByVal Bowl As Single) As Knurl_PinRow
            Dim rowKnurl_PinRow As Knurl_PinRow = CType(Me.NewRow,Knurl_PinRow)
            Dim columnValuesArray() As Object = New Object() {Knurl_Pin, Tooling_Code, Bowl}
            rowKnurl_PinRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowKnurl_PinRow)
            Return rowKnurl_PinRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByKnurl_Pin(ByVal Knurl_Pin As String) As Knurl_PinRow
            Return CType(Me.Rows.Find(New Object() {Knurl_Pin}),Knurl_PinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Knurl_PinDataTable = CType(MyBase.Clone,Knurl_PinDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Knurl_PinDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnKnurl_Pin = MyBase.Columns("Knurl Pin")
            Me.columnTooling_Code = MyBase.Columns("Tooling Code")
            Me.columnBowl = MyBase.Columns("Bowl")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnKnurl_Pin = New Global.System.Data.DataColumn("Knurl Pin", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKnurl_Pin)
            Me.columnTooling_Code = New Global.System.Data.DataColumn("Tooling Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTooling_Code)
            Me.columnBowl = New Global.System.Data.DataColumn("Bowl", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBowl)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnKnurl_Pin}, true))
            Me.columnKnurl_Pin.AllowDBNull = false
            Me.columnKnurl_Pin.Unique = true
            Me.columnKnurl_Pin.MaxLength = 255
            Me.columnTooling_Code.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewKnurl_PinRow() As Knurl_PinRow
            Return CType(Me.NewRow,Knurl_PinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Knurl_PinRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Knurl_PinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Knurl_PinRowChangedEvent) Is Nothing) Then
                RaiseEvent Knurl_PinRowChanged(Me, New Knurl_PinRowChangeEvent(CType(e.Row,Knurl_PinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Knurl_PinRowChangingEvent) Is Nothing) Then
                RaiseEvent Knurl_PinRowChanging(Me, New Knurl_PinRowChangeEvent(CType(e.Row,Knurl_PinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Knurl_PinRowDeletedEvent) Is Nothing) Then
                RaiseEvent Knurl_PinRowDeleted(Me, New Knurl_PinRowChangeEvent(CType(e.Row,Knurl_PinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Knurl_PinRowDeletingEvent) Is Nothing) Then
                RaiseEvent Knurl_PinRowDeleting(Me, New Knurl_PinRowChangeEvent(CType(e.Row,Knurl_PinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveKnurl_PinRow(ByVal row As Knurl_PinRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Knurl_PinDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Mid_TumblerDataTable
        Inherits Global.System.Data.TypedTableBase(Of Mid_TumblerRow)
        
        Private columnMid_Tumbler As Global.System.Data.DataColumn
        
        Private columnBowl As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Mid Tumbler"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid_TumblerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid_Tumbler
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BowlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBowl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Mid_TumblerRow
            Get
                Return CType(Me.Rows(index),Mid_TumblerRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Mid_TumblerRowChanging As Mid_TumblerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Mid_TumblerRowChanged As Mid_TumblerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Mid_TumblerRowDeleting As Mid_TumblerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Mid_TumblerRowDeleted As Mid_TumblerRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddMid_TumblerRow(ByVal row As Mid_TumblerRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddMid_TumblerRow(ByVal Mid_Tumbler As String, ByVal Bowl As Single) As Mid_TumblerRow
            Dim rowMid_TumblerRow As Mid_TumblerRow = CType(Me.NewRow,Mid_TumblerRow)
            Dim columnValuesArray() As Object = New Object() {Mid_Tumbler, Bowl}
            rowMid_TumblerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMid_TumblerRow)
            Return rowMid_TumblerRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByMid_Tumbler(ByVal Mid_Tumbler As String) As Mid_TumblerRow
            Return CType(Me.Rows.Find(New Object() {Mid_Tumbler}),Mid_TumblerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Mid_TumblerDataTable = CType(MyBase.Clone,Mid_TumblerDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Mid_TumblerDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnMid_Tumbler = MyBase.Columns("Mid Tumbler")
            Me.columnBowl = MyBase.Columns("Bowl")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnMid_Tumbler = New Global.System.Data.DataColumn("Mid Tumbler", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid_Tumbler)
            Me.columnBowl = New Global.System.Data.DataColumn("Bowl", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBowl)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnMid_Tumbler}, true))
            Me.columnMid_Tumbler.AllowDBNull = false
            Me.columnMid_Tumbler.Unique = true
            Me.columnMid_Tumbler.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewMid_TumblerRow() As Mid_TumblerRow
            Return CType(Me.NewRow,Mid_TumblerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Mid_TumblerRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Mid_TumblerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Mid_TumblerRowChangedEvent) Is Nothing) Then
                RaiseEvent Mid_TumblerRowChanged(Me, New Mid_TumblerRowChangeEvent(CType(e.Row,Mid_TumblerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Mid_TumblerRowChangingEvent) Is Nothing) Then
                RaiseEvent Mid_TumblerRowChanging(Me, New Mid_TumblerRowChangeEvent(CType(e.Row,Mid_TumblerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Mid_TumblerRowDeletedEvent) Is Nothing) Then
                RaiseEvent Mid_TumblerRowDeleted(Me, New Mid_TumblerRowChangeEvent(CType(e.Row,Mid_TumblerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Mid_TumblerRowDeletingEvent) Is Nothing) Then
                RaiseEvent Mid_TumblerRowDeleting(Me, New Mid_TumblerRowChangeEvent(CType(e.Row,Mid_TumblerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveMid_TumblerRow(ByVal row As Mid_TumblerRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Mid_TumblerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RecipeDataTable
        Inherits Global.System.Data.TypedTableBase(Of RecipeRow)
        
        Private columnRecipe_Name As Global.System.Data.DataColumn
        
        Private columnLock_Family As Global.System.Data.DataColumn
        
        Private columnCompany_Name As Global.System.Data.DataColumn
        
        Private columnDate As Global.System.Data.DataColumn
        
        Private columnTool_Id As Global.System.Data.DataColumn
        
        Private columnSta1_Load_Keys As Global.System.Data.DataColumn
        
        Private columnSta1_Keyed As Global.System.Data.DataColumn
        
        Private columnSta1_Unload As Global.System.Data.DataColumn
        
        Private columnSta2_Enable As Global.System.Data.DataColumn
        
        Private _columnSta3_Part_ As Global.System.Data.DataColumn
        
        Private columnSta4_Enable As Global.System.Data.DataColumn
        
        Private _columnSta5_Part_ As Global.System.Data.DataColumn
        
        Private columnSta5_Vert_Height As Global.System.Data.DataColumn
        
        Private _columnSta6_Part_ As Global.System.Data.DataColumn
        
        Private _columnSta7_Part_ As Global.System.Data.DataColumn
        
        Private _columnSta8_Part_ As Global.System.Data.DataColumn
        
        Private columnSta9_Enable As Global.System.Data.DataColumn
        
        Private columnSta9_Tool As Global.System.Data.DataColumn
        
        Private _columnSta10_Part_ As Global.System.Data.DataColumn
        
        Private _columnSta11_Part_ As Global.System.Data.DataColumn
        
        Private _columnSta12_Part_ As Global.System.Data.DataColumn
        
        Private _columnSta13_Part_ As Global.System.Data.DataColumn
        
        Private columnSta13_Tool As Global.System.Data.DataColumn
        
        Private columnSta14_Enable As Global.System.Data.DataColumn
        
        Private columnSta14_Tool As Global.System.Data.DataColumn
        
        Private columnSta15_Enable As Global.System.Data.DataColumn
        
        Private columnSta15_Insert_Angle As Global.System.Data.DataColumn
        
        Private columnSta15_Test_Angle As Global.System.Data.DataColumn
        
        Private columnSta15_Finish_Angle As Global.System.Data.DataColumn
        
        Private columnSta15_Tool As Global.System.Data.DataColumn
        
        Private _columnSta16_Part_ As Global.System.Data.DataColumn
        
        Private columnSta16_BackSupport As Global.System.Data.DataColumn
        
        Private columnSta17_Enable As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Recipe"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Recipe_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecipe_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Lock_FamilyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLock_Family
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Company_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompany_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Tool_IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTool_Id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta1_Load_KeysColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta1_Load_Keys
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta1_KeyedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta1_Keyed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta1_UnloadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta1_Unload
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta2_EnableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta2_Enable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Sta3_Part_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnSta3_Part_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta4_EnableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta4_Enable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Sta5_Part_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnSta5_Part_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta5_Vert_HeightColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta5_Vert_Height
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Sta6_Part_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnSta6_Part_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Sta7_Part_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnSta7_Part_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Sta8_Part_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnSta8_Part_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta9_EnableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta9_Enable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta9_ToolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta9_Tool
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Sta10_Part_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnSta10_Part_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Sta11_Part_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnSta11_Part_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Sta12_Part_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnSta12_Part_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Sta13_Part_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnSta13_Part_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta13_ToolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta13_Tool
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta14_EnableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta14_Enable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta14_ToolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta14_Tool
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta15_EnableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta15_Enable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta15_Insert_AngleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta15_Insert_Angle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta15_Test_AngleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta15_Test_Angle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta15_Finish_AngleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta15_Finish_Angle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta15_ToolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta15_Tool
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property _Sta16_Part_Column() As Global.System.Data.DataColumn
            Get
                Return Me._columnSta16_Part_
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta16_BackSupportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta16_BackSupport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Sta17_EnableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSta17_Enable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RecipeRow
            Get
                Return CType(Me.Rows(index),RecipeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event RecipeRowChanging As RecipeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event RecipeRowChanged As RecipeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event RecipeRowDeleting As RecipeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event RecipeRowDeleted As RecipeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddRecipeRow(ByVal row As RecipeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddRecipeRow( _
                    ByVal Recipe_Name As String,  _
                    ByVal Lock_Family As String,  _
                    ByVal Company_Name As String,  _
                    ByVal _Date As Date,  _
                    ByVal Tool_Id As String,  _
                    ByVal Sta1_Load_Keys As Single,  _
                    ByVal Sta1_Keyed As Single,  _
                    ByVal Sta1_Unload As Single,  _
                    ByVal Sta2_Enable As Integer,  _
                    ByVal _Sta3_Part_ As String,  _
                    ByVal Sta4_Enable As Single,  _
                    ByVal _Sta5_Part_ As String,  _
                    ByVal Sta5_Vert_Height As Double,  _
                    ByVal _Sta6_Part_ As String,  _
                    ByVal _Sta7_Part_ As String,  _
                    ByVal _Sta8_Part_ As String,  _
                    ByVal Sta9_Enable As Single,  _
                    ByVal Sta9_Tool As String,  _
                    ByVal _Sta10_Part_ As String,  _
                    ByVal _Sta11_Part_ As String,  _
                    ByVal _Sta12_Part_ As String,  _
                    ByVal _Sta13_Part_ As String,  _
                    ByVal Sta13_Tool As String,  _
                    ByVal Sta14_Enable As Single,  _
                    ByVal Sta14_Tool As String,  _
                    ByVal Sta15_Enable As Integer,  _
                    ByVal Sta15_Insert_Angle As Double,  _
                    ByVal Sta15_Test_Angle As Double,  _
                    ByVal Sta15_Finish_Angle As Double,  _
                    ByVal Sta15_Tool As String,  _
                    ByVal _Sta16_Part_ As String,  _
                    ByVal Sta16_BackSupport As Integer,  _
                    ByVal Sta17_Enable As Single) As RecipeRow
            Dim rowRecipeRow As RecipeRow = CType(Me.NewRow,RecipeRow)
            Dim columnValuesArray() As Object = New Object() {Recipe_Name, Lock_Family, Company_Name, _Date, Tool_Id, Sta1_Load_Keys, Sta1_Keyed, Sta1_Unload, Sta2_Enable, _Sta3_Part_, Sta4_Enable, _Sta5_Part_, Sta5_Vert_Height, _Sta6_Part_, _Sta7_Part_, _Sta8_Part_, Sta9_Enable, Sta9_Tool, _Sta10_Part_, _Sta11_Part_, _Sta12_Part_, _Sta13_Part_, Sta13_Tool, Sta14_Enable, Sta14_Tool, Sta15_Enable, Sta15_Insert_Angle, Sta15_Test_Angle, Sta15_Finish_Angle, Sta15_Tool, _Sta16_Part_, Sta16_BackSupport, Sta17_Enable}
            rowRecipeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRecipeRow)
            Return rowRecipeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByRecipe_Name(ByVal Recipe_Name As String) As RecipeRow
            Return CType(Me.Rows.Find(New Object() {Recipe_Name}),RecipeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RecipeDataTable = CType(MyBase.Clone,RecipeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RecipeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRecipe_Name = MyBase.Columns("Recipe Name")
            Me.columnLock_Family = MyBase.Columns("Lock Family")
            Me.columnCompany_Name = MyBase.Columns("Company Name")
            Me.columnDate = MyBase.Columns("Date")
            Me.columnTool_Id = MyBase.Columns("Tool Id")
            Me.columnSta1_Load_Keys = MyBase.Columns("Sta1 Load Keys")
            Me.columnSta1_Keyed = MyBase.Columns("Sta1 Keyed")
            Me.columnSta1_Unload = MyBase.Columns("Sta1 Unload")
            Me.columnSta2_Enable = MyBase.Columns("Sta2 Enable")
            Me._columnSta3_Part_ = MyBase.Columns("Sta3 Part#")
            Me.columnSta4_Enable = MyBase.Columns("Sta4 Enable")
            Me._columnSta5_Part_ = MyBase.Columns("Sta5 Part#")
            Me.columnSta5_Vert_Height = MyBase.Columns("Sta5 Vert Height")
            Me._columnSta6_Part_ = MyBase.Columns("Sta6 Part#")
            Me._columnSta7_Part_ = MyBase.Columns("Sta7 Part#")
            Me._columnSta8_Part_ = MyBase.Columns("Sta8 Part#")
            Me.columnSta9_Enable = MyBase.Columns("Sta9 Enable")
            Me.columnSta9_Tool = MyBase.Columns("Sta9 Tool")
            Me._columnSta10_Part_ = MyBase.Columns("Sta10 Part#")
            Me._columnSta11_Part_ = MyBase.Columns("Sta11 Part#")
            Me._columnSta12_Part_ = MyBase.Columns("Sta12 Part#")
            Me._columnSta13_Part_ = MyBase.Columns("Sta13 Part#")
            Me.columnSta13_Tool = MyBase.Columns("Sta13 Tool")
            Me.columnSta14_Enable = MyBase.Columns("Sta14 Enable")
            Me.columnSta14_Tool = MyBase.Columns("Sta14 Tool")
            Me.columnSta15_Enable = MyBase.Columns("Sta15 Enable")
            Me.columnSta15_Insert_Angle = MyBase.Columns("Sta15 Insert Angle")
            Me.columnSta15_Test_Angle = MyBase.Columns("Sta15 Test Angle")
            Me.columnSta15_Finish_Angle = MyBase.Columns("Sta15 Finish Angle")
            Me.columnSta15_Tool = MyBase.Columns("Sta15 Tool")
            Me._columnSta16_Part_ = MyBase.Columns("Sta16 Part#")
            Me.columnSta16_BackSupport = MyBase.Columns("Sta16 BackSupport")
            Me.columnSta17_Enable = MyBase.Columns("Sta17 Enable")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRecipe_Name = New Global.System.Data.DataColumn("Recipe Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecipe_Name)
            Me.columnLock_Family = New Global.System.Data.DataColumn("Lock Family", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLock_Family)
            Me.columnCompany_Name = New Global.System.Data.DataColumn("Company Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompany_Name)
            Me.columnDate = New Global.System.Data.DataColumn("Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "DateColumn")
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnDate")
            Me.columnDate.ExtendedProperties.Add("Generator_UserColumnName", "Date")
            MyBase.Columns.Add(Me.columnDate)
            Me.columnTool_Id = New Global.System.Data.DataColumn("Tool Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTool_Id)
            Me.columnSta1_Load_Keys = New Global.System.Data.DataColumn("Sta1 Load Keys", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta1_Load_Keys)
            Me.columnSta1_Keyed = New Global.System.Data.DataColumn("Sta1 Keyed", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta1_Keyed)
            Me.columnSta1_Unload = New Global.System.Data.DataColumn("Sta1 Unload", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta1_Unload)
            Me.columnSta2_Enable = New Global.System.Data.DataColumn("Sta2 Enable", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta2_Enable)
            Me._columnSta3_Part_ = New Global.System.Data.DataColumn("Sta3 Part#", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnSta3_Part_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSta3_Part_")
            Me._columnSta3_Part_.ExtendedProperties.Add("Generator_UserColumnName", "Sta3 Part#")
            MyBase.Columns.Add(Me._columnSta3_Part_)
            Me.columnSta4_Enable = New Global.System.Data.DataColumn("Sta4 Enable", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta4_Enable)
            Me._columnSta5_Part_ = New Global.System.Data.DataColumn("Sta5 Part#", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnSta5_Part_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSta5_Part_")
            Me._columnSta5_Part_.ExtendedProperties.Add("Generator_UserColumnName", "Sta5 Part#")
            MyBase.Columns.Add(Me._columnSta5_Part_)
            Me.columnSta5_Vert_Height = New Global.System.Data.DataColumn("Sta5 Vert Height", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta5_Vert_Height)
            Me._columnSta6_Part_ = New Global.System.Data.DataColumn("Sta6 Part#", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnSta6_Part_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSta6_Part_")
            Me._columnSta6_Part_.ExtendedProperties.Add("Generator_UserColumnName", "Sta6 Part#")
            MyBase.Columns.Add(Me._columnSta6_Part_)
            Me._columnSta7_Part_ = New Global.System.Data.DataColumn("Sta7 Part#", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnSta7_Part_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSta7_Part_")
            Me._columnSta7_Part_.ExtendedProperties.Add("Generator_UserColumnName", "Sta7 Part#")
            MyBase.Columns.Add(Me._columnSta7_Part_)
            Me._columnSta8_Part_ = New Global.System.Data.DataColumn("Sta8 Part#", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnSta8_Part_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSta8_Part_")
            Me._columnSta8_Part_.ExtendedProperties.Add("Generator_UserColumnName", "Sta8 Part#")
            MyBase.Columns.Add(Me._columnSta8_Part_)
            Me.columnSta9_Enable = New Global.System.Data.DataColumn("Sta9 Enable", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta9_Enable)
            Me.columnSta9_Tool = New Global.System.Data.DataColumn("Sta9 Tool", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta9_Tool)
            Me._columnSta10_Part_ = New Global.System.Data.DataColumn("Sta10 Part#", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnSta10_Part_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSta10_Part_")
            Me._columnSta10_Part_.ExtendedProperties.Add("Generator_UserColumnName", "Sta10 Part#")
            MyBase.Columns.Add(Me._columnSta10_Part_)
            Me._columnSta11_Part_ = New Global.System.Data.DataColumn("Sta11 Part#", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnSta11_Part_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSta11_Part_")
            Me._columnSta11_Part_.ExtendedProperties.Add("Generator_UserColumnName", "Sta11 Part#")
            MyBase.Columns.Add(Me._columnSta11_Part_)
            Me._columnSta12_Part_ = New Global.System.Data.DataColumn("Sta12 Part#", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnSta12_Part_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSta12_Part_")
            Me._columnSta12_Part_.ExtendedProperties.Add("Generator_UserColumnName", "Sta12 Part#")
            MyBase.Columns.Add(Me._columnSta12_Part_)
            Me._columnSta13_Part_ = New Global.System.Data.DataColumn("Sta13 Part#", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnSta13_Part_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSta13_Part_")
            Me._columnSta13_Part_.ExtendedProperties.Add("Generator_UserColumnName", "Sta13 Part#")
            MyBase.Columns.Add(Me._columnSta13_Part_)
            Me.columnSta13_Tool = New Global.System.Data.DataColumn("Sta13 Tool", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta13_Tool)
            Me.columnSta14_Enable = New Global.System.Data.DataColumn("Sta14 Enable", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta14_Enable)
            Me.columnSta14_Tool = New Global.System.Data.DataColumn("Sta14 Tool", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta14_Tool)
            Me.columnSta15_Enable = New Global.System.Data.DataColumn("Sta15 Enable", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta15_Enable)
            Me.columnSta15_Insert_Angle = New Global.System.Data.DataColumn("Sta15 Insert Angle", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta15_Insert_Angle)
            Me.columnSta15_Test_Angle = New Global.System.Data.DataColumn("Sta15 Test Angle", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta15_Test_Angle)
            Me.columnSta15_Finish_Angle = New Global.System.Data.DataColumn("Sta15 Finish Angle", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta15_Finish_Angle)
            Me.columnSta15_Tool = New Global.System.Data.DataColumn("Sta15 Tool", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta15_Tool)
            Me._columnSta16_Part_ = New Global.System.Data.DataColumn("Sta16 Part#", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnSta16_Part_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnSta16_Part_")
            Me._columnSta16_Part_.ExtendedProperties.Add("Generator_UserColumnName", "Sta16 Part#")
            MyBase.Columns.Add(Me._columnSta16_Part_)
            Me.columnSta16_BackSupport = New Global.System.Data.DataColumn("Sta16 BackSupport", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta16_BackSupport)
            Me.columnSta17_Enable = New Global.System.Data.DataColumn("Sta17 Enable", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSta17_Enable)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnRecipe_Name}, true))
            Me.columnRecipe_Name.AllowDBNull = false
            Me.columnRecipe_Name.Unique = true
            Me.columnRecipe_Name.MaxLength = 255
            Me.columnLock_Family.MaxLength = 255
            Me.columnCompany_Name.MaxLength = 255
            Me.columnTool_Id.MaxLength = 255
            Me._columnSta3_Part_.MaxLength = 255
            Me._columnSta5_Part_.MaxLength = 255
            Me._columnSta6_Part_.MaxLength = 255
            Me._columnSta7_Part_.MaxLength = 255
            Me._columnSta8_Part_.MaxLength = 255
            Me.columnSta9_Tool.MaxLength = 255
            Me._columnSta10_Part_.MaxLength = 255
            Me._columnSta11_Part_.MaxLength = 255
            Me._columnSta12_Part_.MaxLength = 255
            Me._columnSta13_Part_.MaxLength = 255
            Me.columnSta13_Tool.MaxLength = 255
            Me.columnSta14_Tool.MaxLength = 255
            Me.columnSta15_Tool.MaxLength = 255
            Me._columnSta16_Part_.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewRecipeRow() As RecipeRow
            Return CType(Me.NewRow,RecipeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RecipeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RecipeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RecipeRowChangedEvent) Is Nothing) Then
                RaiseEvent RecipeRowChanged(Me, New RecipeRowChangeEvent(CType(e.Row,RecipeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RecipeRowChangingEvent) Is Nothing) Then
                RaiseEvent RecipeRowChanging(Me, New RecipeRowChangeEvent(CType(e.Row,RecipeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RecipeRowDeletedEvent) Is Nothing) Then
                RaiseEvent RecipeRowDeleted(Me, New RecipeRowChangeEvent(CType(e.Row,RecipeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RecipeRowDeletingEvent) Is Nothing) Then
                RaiseEvent RecipeRowDeleting(Me, New RecipeRowChangeEvent(CType(e.Row,RecipeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveRecipeRow(ByVal row As RecipeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RecipeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SpringsDataTable
        Inherits Global.System.Data.TypedTableBase(Of SpringsRow)
        
        Private columnSpring As Global.System.Data.DataColumn
        
        Private columnBowl As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Springs"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SpringColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BowlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBowl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SpringsRow
            Get
                Return CType(Me.Rows(index),SpringsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SpringsRowChanging As SpringsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SpringsRowChanged As SpringsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SpringsRowDeleting As SpringsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event SpringsRowDeleted As SpringsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddSpringsRow(ByVal row As SpringsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddSpringsRow(ByVal Spring As String, ByVal Bowl As Single) As SpringsRow
            Dim rowSpringsRow As SpringsRow = CType(Me.NewRow,SpringsRow)
            Dim columnValuesArray() As Object = New Object() {Spring, Bowl}
            rowSpringsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSpringsRow)
            Return rowSpringsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindBySpring(ByVal Spring As String) As SpringsRow
            Return CType(Me.Rows.Find(New Object() {Spring}),SpringsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SpringsDataTable = CType(MyBase.Clone,SpringsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SpringsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSpring = MyBase.Columns("Spring")
            Me.columnBowl = MyBase.Columns("Bowl")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSpring = New Global.System.Data.DataColumn("Spring", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring)
            Me.columnBowl = New Global.System.Data.DataColumn("Bowl", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBowl)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSpring}, true))
            Me.columnSpring.AllowDBNull = false
            Me.columnSpring.Unique = true
            Me.columnSpring.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewSpringsRow() As SpringsRow
            Return CType(Me.NewRow,SpringsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SpringsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SpringsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SpringsRowChangedEvent) Is Nothing) Then
                RaiseEvent SpringsRowChanged(Me, New SpringsRowChangeEvent(CType(e.Row,SpringsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SpringsRowChangingEvent) Is Nothing) Then
                RaiseEvent SpringsRowChanging(Me, New SpringsRowChangeEvent(CType(e.Row,SpringsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SpringsRowDeletedEvent) Is Nothing) Then
                RaiseEvent SpringsRowDeleted(Me, New SpringsRowChangeEvent(CType(e.Row,SpringsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SpringsRowDeletingEvent) Is Nothing) Then
                RaiseEvent SpringsRowDeleting(Me, New SpringsRowChangeEvent(CType(e.Row,SpringsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveSpringsRow(ByVal row As SpringsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SpringsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Station_13_ToolingDataTable
        Inherits Global.System.Data.TypedTableBase(Of Station_13_ToolingRow)
        
        Private columnTooling_Name As Global.System.Data.DataColumn
        
        Private columnGripper As Global.System.Data.DataColumn
        
        Private columnOrient As Global.System.Data.DataColumn
        
        Private columnShotpin As Global.System.Data.DataColumn
        
        Private columnPlace As Global.System.Data.DataColumn
        
        Private columnReClock_Pos As Global.System.Data.DataColumn
        
        Private columnReClock_Rot As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Station 13 Tooling"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Tooling_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTooling_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GripperColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGripper
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OrientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ShotpinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShotpin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PlaceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlace
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReClock_PosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReClock_Pos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReClock_RotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReClock_Rot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Station_13_ToolingRow
            Get
                Return CType(Me.Rows(index),Station_13_ToolingRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_13_ToolingRowChanging As Station_13_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_13_ToolingRowChanged As Station_13_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_13_ToolingRowDeleting As Station_13_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_13_ToolingRowDeleted As Station_13_ToolingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddStation_13_ToolingRow(ByVal row As Station_13_ToolingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddStation_13_ToolingRow(ByVal Tooling_Name As String, ByVal Gripper As String, ByVal Orient As String, ByVal Shotpin As String, ByVal Place As String, ByVal ReClock_Pos As String, ByVal ReClock_Rot As String) As Station_13_ToolingRow
            Dim rowStation_13_ToolingRow As Station_13_ToolingRow = CType(Me.NewRow,Station_13_ToolingRow)
            Dim columnValuesArray() As Object = New Object() {Tooling_Name, Gripper, Orient, Shotpin, Place, ReClock_Pos, ReClock_Rot}
            rowStation_13_ToolingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowStation_13_ToolingRow)
            Return rowStation_13_ToolingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByTooling_Name(ByVal Tooling_Name As String) As Station_13_ToolingRow
            Return CType(Me.Rows.Find(New Object() {Tooling_Name}),Station_13_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Station_13_ToolingDataTable = CType(MyBase.Clone,Station_13_ToolingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Station_13_ToolingDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTooling_Name = MyBase.Columns("Tooling Name")
            Me.columnGripper = MyBase.Columns("Gripper")
            Me.columnOrient = MyBase.Columns("Orient")
            Me.columnShotpin = MyBase.Columns("Shotpin")
            Me.columnPlace = MyBase.Columns("Place")
            Me.columnReClock_Pos = MyBase.Columns("ReClock Pos")
            Me.columnReClock_Rot = MyBase.Columns("ReClock Rot")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTooling_Name = New Global.System.Data.DataColumn("Tooling Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTooling_Name)
            Me.columnGripper = New Global.System.Data.DataColumn("Gripper", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGripper)
            Me.columnOrient = New Global.System.Data.DataColumn("Orient", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrient)
            Me.columnShotpin = New Global.System.Data.DataColumn("Shotpin", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShotpin)
            Me.columnPlace = New Global.System.Data.DataColumn("Place", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlace)
            Me.columnReClock_Pos = New Global.System.Data.DataColumn("ReClock Pos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReClock_Pos)
            Me.columnReClock_Rot = New Global.System.Data.DataColumn("ReClock Rot", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReClock_Rot)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTooling_Name}, true))
            Me.columnTooling_Name.AllowDBNull = false
            Me.columnTooling_Name.Unique = true
            Me.columnTooling_Name.MaxLength = 255
            Me.columnGripper.MaxLength = 255
            Me.columnOrient.MaxLength = 255
            Me.columnShotpin.MaxLength = 255
            Me.columnPlace.MaxLength = 255
            Me.columnReClock_Pos.MaxLength = 255
            Me.columnReClock_Rot.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewStation_13_ToolingRow() As Station_13_ToolingRow
            Return CType(Me.NewRow,Station_13_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Station_13_ToolingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Station_13_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Station_13_ToolingRowChangedEvent) Is Nothing) Then
                RaiseEvent Station_13_ToolingRowChanged(Me, New Station_13_ToolingRowChangeEvent(CType(e.Row,Station_13_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Station_13_ToolingRowChangingEvent) Is Nothing) Then
                RaiseEvent Station_13_ToolingRowChanging(Me, New Station_13_ToolingRowChangeEvent(CType(e.Row,Station_13_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Station_13_ToolingRowDeletedEvent) Is Nothing) Then
                RaiseEvent Station_13_ToolingRowDeleted(Me, New Station_13_ToolingRowChangeEvent(CType(e.Row,Station_13_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Station_13_ToolingRowDeletingEvent) Is Nothing) Then
                RaiseEvent Station_13_ToolingRowDeleting(Me, New Station_13_ToolingRowChangeEvent(CType(e.Row,Station_13_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveStation_13_ToolingRow(ByVal row As Station_13_ToolingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Station_13_ToolingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Station_14_ToolingDataTable
        Inherits Global.System.Data.TypedTableBase(Of Station_14_ToolingRow)
        
        Private columnTooling_Name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Station 14 Tooling"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Tooling_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTooling_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Station_14_ToolingRow
            Get
                Return CType(Me.Rows(index),Station_14_ToolingRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_14_ToolingRowChanging As Station_14_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_14_ToolingRowChanged As Station_14_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_14_ToolingRowDeleting As Station_14_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_14_ToolingRowDeleted As Station_14_ToolingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddStation_14_ToolingRow(ByVal row As Station_14_ToolingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddStation_14_ToolingRow(ByVal Tooling_Name As String) As Station_14_ToolingRow
            Dim rowStation_14_ToolingRow As Station_14_ToolingRow = CType(Me.NewRow,Station_14_ToolingRow)
            Dim columnValuesArray() As Object = New Object() {Tooling_Name}
            rowStation_14_ToolingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowStation_14_ToolingRow)
            Return rowStation_14_ToolingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByTooling_Name(ByVal Tooling_Name As String) As Station_14_ToolingRow
            Return CType(Me.Rows.Find(New Object() {Tooling_Name}),Station_14_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Station_14_ToolingDataTable = CType(MyBase.Clone,Station_14_ToolingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Station_14_ToolingDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTooling_Name = MyBase.Columns("Tooling Name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTooling_Name = New Global.System.Data.DataColumn("Tooling Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTooling_Name)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTooling_Name}, true))
            Me.columnTooling_Name.AllowDBNull = false
            Me.columnTooling_Name.Unique = true
            Me.columnTooling_Name.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewStation_14_ToolingRow() As Station_14_ToolingRow
            Return CType(Me.NewRow,Station_14_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Station_14_ToolingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Station_14_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Station_14_ToolingRowChangedEvent) Is Nothing) Then
                RaiseEvent Station_14_ToolingRowChanged(Me, New Station_14_ToolingRowChangeEvent(CType(e.Row,Station_14_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Station_14_ToolingRowChangingEvent) Is Nothing) Then
                RaiseEvent Station_14_ToolingRowChanging(Me, New Station_14_ToolingRowChangeEvent(CType(e.Row,Station_14_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Station_14_ToolingRowDeletedEvent) Is Nothing) Then
                RaiseEvent Station_14_ToolingRowDeleted(Me, New Station_14_ToolingRowChangeEvent(CType(e.Row,Station_14_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Station_14_ToolingRowDeletingEvent) Is Nothing) Then
                RaiseEvent Station_14_ToolingRowDeleting(Me, New Station_14_ToolingRowChangeEvent(CType(e.Row,Station_14_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveStation_14_ToolingRow(ByVal row As Station_14_ToolingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Station_14_ToolingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Station_15_ToolingDataTable
        Inherits Global.System.Data.TypedTableBase(Of Station_15_ToolingRow)
        
        Private columnTooling_Name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Station 15 Tooling"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Tooling_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTooling_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Station_15_ToolingRow
            Get
                Return CType(Me.Rows(index),Station_15_ToolingRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_15_ToolingRowChanging As Station_15_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_15_ToolingRowChanged As Station_15_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_15_ToolingRowDeleting As Station_15_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_15_ToolingRowDeleted As Station_15_ToolingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddStation_15_ToolingRow(ByVal row As Station_15_ToolingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddStation_15_ToolingRow(ByVal Tooling_Name As String) As Station_15_ToolingRow
            Dim rowStation_15_ToolingRow As Station_15_ToolingRow = CType(Me.NewRow,Station_15_ToolingRow)
            Dim columnValuesArray() As Object = New Object() {Tooling_Name}
            rowStation_15_ToolingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowStation_15_ToolingRow)
            Return rowStation_15_ToolingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByTooling_Name(ByVal Tooling_Name As String) As Station_15_ToolingRow
            Return CType(Me.Rows.Find(New Object() {Tooling_Name}),Station_15_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Station_15_ToolingDataTable = CType(MyBase.Clone,Station_15_ToolingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Station_15_ToolingDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTooling_Name = MyBase.Columns("Tooling Name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTooling_Name = New Global.System.Data.DataColumn("Tooling Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTooling_Name)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTooling_Name}, true))
            Me.columnTooling_Name.AllowDBNull = false
            Me.columnTooling_Name.Unique = true
            Me.columnTooling_Name.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewStation_15_ToolingRow() As Station_15_ToolingRow
            Return CType(Me.NewRow,Station_15_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Station_15_ToolingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Station_15_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Station_15_ToolingRowChangedEvent) Is Nothing) Then
                RaiseEvent Station_15_ToolingRowChanged(Me, New Station_15_ToolingRowChangeEvent(CType(e.Row,Station_15_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Station_15_ToolingRowChangingEvent) Is Nothing) Then
                RaiseEvent Station_15_ToolingRowChanging(Me, New Station_15_ToolingRowChangeEvent(CType(e.Row,Station_15_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Station_15_ToolingRowDeletedEvent) Is Nothing) Then
                RaiseEvent Station_15_ToolingRowDeleted(Me, New Station_15_ToolingRowChangeEvent(CType(e.Row,Station_15_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Station_15_ToolingRowDeletingEvent) Is Nothing) Then
                RaiseEvent Station_15_ToolingRowDeleting(Me, New Station_15_ToolingRowChangeEvent(CType(e.Row,Station_15_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveStation_15_ToolingRow(ByVal row As Station_15_ToolingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Station_15_ToolingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Station_16_ToolingDataTable
        Inherits Global.System.Data.TypedTableBase(Of Station_16_ToolingRow)
        
        Private columnTooling_Name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Station 16 Tooling"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Tooling_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTooling_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Station_16_ToolingRow
            Get
                Return CType(Me.Rows(index),Station_16_ToolingRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_16_ToolingRowChanging As Station_16_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_16_ToolingRowChanged As Station_16_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_16_ToolingRowDeleting As Station_16_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_16_ToolingRowDeleted As Station_16_ToolingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddStation_16_ToolingRow(ByVal row As Station_16_ToolingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddStation_16_ToolingRow(ByVal Tooling_Name As String) As Station_16_ToolingRow
            Dim rowStation_16_ToolingRow As Station_16_ToolingRow = CType(Me.NewRow,Station_16_ToolingRow)
            Dim columnValuesArray() As Object = New Object() {Tooling_Name}
            rowStation_16_ToolingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowStation_16_ToolingRow)
            Return rowStation_16_ToolingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByTooling_Name(ByVal Tooling_Name As String) As Station_16_ToolingRow
            Return CType(Me.Rows.Find(New Object() {Tooling_Name}),Station_16_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Station_16_ToolingDataTable = CType(MyBase.Clone,Station_16_ToolingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Station_16_ToolingDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTooling_Name = MyBase.Columns("Tooling Name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTooling_Name = New Global.System.Data.DataColumn("Tooling Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTooling_Name)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTooling_Name}, true))
            Me.columnTooling_Name.AllowDBNull = false
            Me.columnTooling_Name.Unique = true
            Me.columnTooling_Name.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewStation_16_ToolingRow() As Station_16_ToolingRow
            Return CType(Me.NewRow,Station_16_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Station_16_ToolingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Station_16_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Station_16_ToolingRowChangedEvent) Is Nothing) Then
                RaiseEvent Station_16_ToolingRowChanged(Me, New Station_16_ToolingRowChangeEvent(CType(e.Row,Station_16_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Station_16_ToolingRowChangingEvent) Is Nothing) Then
                RaiseEvent Station_16_ToolingRowChanging(Me, New Station_16_ToolingRowChangeEvent(CType(e.Row,Station_16_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Station_16_ToolingRowDeletedEvent) Is Nothing) Then
                RaiseEvent Station_16_ToolingRowDeleted(Me, New Station_16_ToolingRowChangeEvent(CType(e.Row,Station_16_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Station_16_ToolingRowDeletingEvent) Is Nothing) Then
                RaiseEvent Station_16_ToolingRowDeleting(Me, New Station_16_ToolingRowChangeEvent(CType(e.Row,Station_16_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveStation_16_ToolingRow(ByVal row As Station_16_ToolingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Station_16_ToolingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Station_2_ToolingDataTable
        Inherits Global.System.Data.TypedTableBase(Of Station_2_ToolingRow)
        
        Private columnTooling_Name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Station 2 Tooling"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Tooling_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTooling_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Station_2_ToolingRow
            Get
                Return CType(Me.Rows(index),Station_2_ToolingRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_2_ToolingRowChanging As Station_2_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_2_ToolingRowChanged As Station_2_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_2_ToolingRowDeleting As Station_2_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_2_ToolingRowDeleted As Station_2_ToolingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddStation_2_ToolingRow(ByVal row As Station_2_ToolingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddStation_2_ToolingRow(ByVal Tooling_Name As String) As Station_2_ToolingRow
            Dim rowStation_2_ToolingRow As Station_2_ToolingRow = CType(Me.NewRow,Station_2_ToolingRow)
            Dim columnValuesArray() As Object = New Object() {Tooling_Name}
            rowStation_2_ToolingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowStation_2_ToolingRow)
            Return rowStation_2_ToolingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByTooling_Name(ByVal Tooling_Name As String) As Station_2_ToolingRow
            Return CType(Me.Rows.Find(New Object() {Tooling_Name}),Station_2_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Station_2_ToolingDataTable = CType(MyBase.Clone,Station_2_ToolingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Station_2_ToolingDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTooling_Name = MyBase.Columns("Tooling Name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTooling_Name = New Global.System.Data.DataColumn("Tooling Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTooling_Name)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTooling_Name}, true))
            Me.columnTooling_Name.AllowDBNull = false
            Me.columnTooling_Name.Unique = true
            Me.columnTooling_Name.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewStation_2_ToolingRow() As Station_2_ToolingRow
            Return CType(Me.NewRow,Station_2_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Station_2_ToolingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Station_2_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Station_2_ToolingRowChangedEvent) Is Nothing) Then
                RaiseEvent Station_2_ToolingRowChanged(Me, New Station_2_ToolingRowChangeEvent(CType(e.Row,Station_2_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Station_2_ToolingRowChangingEvent) Is Nothing) Then
                RaiseEvent Station_2_ToolingRowChanging(Me, New Station_2_ToolingRowChangeEvent(CType(e.Row,Station_2_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Station_2_ToolingRowDeletedEvent) Is Nothing) Then
                RaiseEvent Station_2_ToolingRowDeleted(Me, New Station_2_ToolingRowChangeEvent(CType(e.Row,Station_2_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Station_2_ToolingRowDeletingEvent) Is Nothing) Then
                RaiseEvent Station_2_ToolingRowDeleting(Me, New Station_2_ToolingRowChangeEvent(CType(e.Row,Station_2_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveStation_2_ToolingRow(ByVal row As Station_2_ToolingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Station_2_ToolingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Station_3_ToolingDataTable
        Inherits Global.System.Data.TypedTableBase(Of Station_3_ToolingRow)
        
        Private columnTooling_Name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Station 3 Tooling"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Tooling_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTooling_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Station_3_ToolingRow
            Get
                Return CType(Me.Rows(index),Station_3_ToolingRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_3_ToolingRowChanging As Station_3_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_3_ToolingRowChanged As Station_3_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_3_ToolingRowDeleting As Station_3_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_3_ToolingRowDeleted As Station_3_ToolingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddStation_3_ToolingRow(ByVal row As Station_3_ToolingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddStation_3_ToolingRow(ByVal Tooling_Name As String) As Station_3_ToolingRow
            Dim rowStation_3_ToolingRow As Station_3_ToolingRow = CType(Me.NewRow,Station_3_ToolingRow)
            Dim columnValuesArray() As Object = New Object() {Tooling_Name}
            rowStation_3_ToolingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowStation_3_ToolingRow)
            Return rowStation_3_ToolingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByTooling_Name(ByVal Tooling_Name As String) As Station_3_ToolingRow
            Return CType(Me.Rows.Find(New Object() {Tooling_Name}),Station_3_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Station_3_ToolingDataTable = CType(MyBase.Clone,Station_3_ToolingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Station_3_ToolingDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTooling_Name = MyBase.Columns("Tooling Name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTooling_Name = New Global.System.Data.DataColumn("Tooling Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTooling_Name)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTooling_Name}, true))
            Me.columnTooling_Name.AllowDBNull = false
            Me.columnTooling_Name.Unique = true
            Me.columnTooling_Name.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewStation_3_ToolingRow() As Station_3_ToolingRow
            Return CType(Me.NewRow,Station_3_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Station_3_ToolingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Station_3_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Station_3_ToolingRowChangedEvent) Is Nothing) Then
                RaiseEvent Station_3_ToolingRowChanged(Me, New Station_3_ToolingRowChangeEvent(CType(e.Row,Station_3_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Station_3_ToolingRowChangingEvent) Is Nothing) Then
                RaiseEvent Station_3_ToolingRowChanging(Me, New Station_3_ToolingRowChangeEvent(CType(e.Row,Station_3_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Station_3_ToolingRowDeletedEvent) Is Nothing) Then
                RaiseEvent Station_3_ToolingRowDeleted(Me, New Station_3_ToolingRowChangeEvent(CType(e.Row,Station_3_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Station_3_ToolingRowDeletingEvent) Is Nothing) Then
                RaiseEvent Station_3_ToolingRowDeleting(Me, New Station_3_ToolingRowChangeEvent(CType(e.Row,Station_3_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveStation_3_ToolingRow(ByVal row As Station_3_ToolingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Station_3_ToolingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Station_9_ToolingDataTable
        Inherits Global.System.Data.TypedTableBase(Of Station_9_ToolingRow)
        
        Private columnTooling_Name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Station 9 Tooling"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Tooling_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTooling_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Station_9_ToolingRow
            Get
                Return CType(Me.Rows(index),Station_9_ToolingRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_9_ToolingRowChanging As Station_9_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_9_ToolingRowChanged As Station_9_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_9_ToolingRowDeleting As Station_9_ToolingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Station_9_ToolingRowDeleted As Station_9_ToolingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddStation_9_ToolingRow(ByVal row As Station_9_ToolingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddStation_9_ToolingRow(ByVal Tooling_Name As String) As Station_9_ToolingRow
            Dim rowStation_9_ToolingRow As Station_9_ToolingRow = CType(Me.NewRow,Station_9_ToolingRow)
            Dim columnValuesArray() As Object = New Object() {Tooling_Name}
            rowStation_9_ToolingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowStation_9_ToolingRow)
            Return rowStation_9_ToolingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByTooling_Name(ByVal Tooling_Name As String) As Station_9_ToolingRow
            Return CType(Me.Rows.Find(New Object() {Tooling_Name}),Station_9_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Station_9_ToolingDataTable = CType(MyBase.Clone,Station_9_ToolingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Station_9_ToolingDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTooling_Name = MyBase.Columns("Tooling Name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTooling_Name = New Global.System.Data.DataColumn("Tooling Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTooling_Name)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTooling_Name}, true))
            Me.columnTooling_Name.AllowDBNull = false
            Me.columnTooling_Name.Unique = true
            Me.columnTooling_Name.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewStation_9_ToolingRow() As Station_9_ToolingRow
            Return CType(Me.NewRow,Station_9_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Station_9_ToolingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Station_9_ToolingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Station_9_ToolingRowChangedEvent) Is Nothing) Then
                RaiseEvent Station_9_ToolingRowChanged(Me, New Station_9_ToolingRowChangeEvent(CType(e.Row,Station_9_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Station_9_ToolingRowChangingEvent) Is Nothing) Then
                RaiseEvent Station_9_ToolingRowChanging(Me, New Station_9_ToolingRowChangeEvent(CType(e.Row,Station_9_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Station_9_ToolingRowDeletedEvent) Is Nothing) Then
                RaiseEvent Station_9_ToolingRowDeleted(Me, New Station_9_ToolingRowChangeEvent(CType(e.Row,Station_9_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Station_9_ToolingRowDeletingEvent) Is Nothing) Then
                RaiseEvent Station_9_ToolingRowDeleting(Me, New Station_9_ToolingRowChangeEvent(CType(e.Row,Station_9_ToolingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveStation_9_ToolingRow(ByVal row As Station_9_ToolingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Station_9_ToolingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Top_SleeveDataTable
        Inherits Global.System.Data.TypedTableBase(Of Top_SleeveRow)
        
        Private columnTop_Sleeve As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Top Sleeve"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top_SleeveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop_Sleeve
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Top_SleeveRow
            Get
                Return CType(Me.Rows(index),Top_SleeveRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Top_SleeveRowChanging As Top_SleeveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Top_SleeveRowChanged As Top_SleeveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Top_SleeveRowDeleting As Top_SleeveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Top_SleeveRowDeleted As Top_SleeveRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTop_SleeveRow(ByVal row As Top_SleeveRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTop_SleeveRow(ByVal Top_Sleeve As String) As Top_SleeveRow
            Dim rowTop_SleeveRow As Top_SleeveRow = CType(Me.NewRow,Top_SleeveRow)
            Dim columnValuesArray() As Object = New Object() {Top_Sleeve}
            rowTop_SleeveRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTop_SleeveRow)
            Return rowTop_SleeveRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByTop_Sleeve(ByVal Top_Sleeve As String) As Top_SleeveRow
            Return CType(Me.Rows.Find(New Object() {Top_Sleeve}),Top_SleeveRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Top_SleeveDataTable = CType(MyBase.Clone,Top_SleeveDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Top_SleeveDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTop_Sleeve = MyBase.Columns("Top Sleeve")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTop_Sleeve = New Global.System.Data.DataColumn("Top Sleeve", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop_Sleeve)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTop_Sleeve}, true))
            Me.columnTop_Sleeve.AllowDBNull = false
            Me.columnTop_Sleeve.Unique = true
            Me.columnTop_Sleeve.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTop_SleeveRow() As Top_SleeveRow
            Return CType(Me.NewRow,Top_SleeveRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Top_SleeveRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Top_SleeveRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Top_SleeveRowChangedEvent) Is Nothing) Then
                RaiseEvent Top_SleeveRowChanged(Me, New Top_SleeveRowChangeEvent(CType(e.Row,Top_SleeveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Top_SleeveRowChangingEvent) Is Nothing) Then
                RaiseEvent Top_SleeveRowChanging(Me, New Top_SleeveRowChangeEvent(CType(e.Row,Top_SleeveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Top_SleeveRowDeletedEvent) Is Nothing) Then
                RaiseEvent Top_SleeveRowDeleted(Me, New Top_SleeveRowChangeEvent(CType(e.Row,Top_SleeveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Top_SleeveRowDeletingEvent) Is Nothing) Then
                RaiseEvent Top_SleeveRowDeleting(Me, New Top_SleeveRowChangeEvent(CType(e.Row,Top_SleeveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTop_SleeveRow(ByVal row As Top_SleeveRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Top_SleeveDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Top_TumblerDataTable
        Inherits Global.System.Data.TypedTableBase(Of Top_TumblerRow)
        
        Private columnTop_Tumbler As Global.System.Data.DataColumn
        
        Private columnBowl As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Top Tumbler"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top_TumblerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop_Tumbler
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BowlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBowl
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Top_TumblerRow
            Get
                Return CType(Me.Rows(index),Top_TumblerRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Top_TumblerRowChanging As Top_TumblerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Top_TumblerRowChanged As Top_TumblerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Top_TumblerRowDeleting As Top_TumblerRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Top_TumblerRowDeleted As Top_TumblerRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTop_TumblerRow(ByVal row As Top_TumblerRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTop_TumblerRow(ByVal Top_Tumbler As String, ByVal Bowl As Single) As Top_TumblerRow
            Dim rowTop_TumblerRow As Top_TumblerRow = CType(Me.NewRow,Top_TumblerRow)
            Dim columnValuesArray() As Object = New Object() {Top_Tumbler, Bowl}
            rowTop_TumblerRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTop_TumblerRow)
            Return rowTop_TumblerRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByTop_Tumbler(ByVal Top_Tumbler As String) As Top_TumblerRow
            Return CType(Me.Rows.Find(New Object() {Top_Tumbler}),Top_TumblerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Top_TumblerDataTable = CType(MyBase.Clone,Top_TumblerDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Top_TumblerDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTop_Tumbler = MyBase.Columns("Top Tumbler")
            Me.columnBowl = MyBase.Columns("Bowl")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTop_Tumbler = New Global.System.Data.DataColumn("Top Tumbler", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop_Tumbler)
            Me.columnBowl = New Global.System.Data.DataColumn("Bowl", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBowl)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTop_Tumbler}, true))
            Me.columnTop_Tumbler.AllowDBNull = false
            Me.columnTop_Tumbler.Unique = true
            Me.columnTop_Tumbler.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTop_TumblerRow() As Top_TumblerRow
            Return CType(Me.NewRow,Top_TumblerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Top_TumblerRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Top_TumblerRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Top_TumblerRowChangedEvent) Is Nothing) Then
                RaiseEvent Top_TumblerRowChanged(Me, New Top_TumblerRowChangeEvent(CType(e.Row,Top_TumblerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Top_TumblerRowChangingEvent) Is Nothing) Then
                RaiseEvent Top_TumblerRowChanging(Me, New Top_TumblerRowChangeEvent(CType(e.Row,Top_TumblerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Top_TumblerRowDeletedEvent) Is Nothing) Then
                RaiseEvent Top_TumblerRowDeleted(Me, New Top_TumblerRowChangeEvent(CType(e.Row,Top_TumblerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Top_TumblerRowDeletingEvent) Is Nothing) Then
                RaiseEvent Top_TumblerRowDeleting(Me, New Top_TumblerRowChangeEvent(CType(e.Row,Top_TumblerRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTop_TumblerRow(ByVal row As Top_TumblerRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Top_TumblerDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Tumbler_KitDataTable
        Inherits Global.System.Data.TypedTableBase(Of Tumbler_KitRow)
        
        Private columnTumbler_Kit As Global.System.Data.DataColumn
        
        Private columnSpring1_Type As Global.System.Data.DataColumn
        
        Private columnSpring1_Random1 As Global.System.Data.DataColumn
        
        Private columnSpring1_Random2 As Global.System.Data.DataColumn
        
        Private columnSpring1_Number As Global.System.Data.DataColumn
        
        Private columnSpring1_Chart As Global.System.Data.DataColumn
        
        Private columnSpring2_Type As Global.System.Data.DataColumn
        
        Private columnSpring2_Random1 As Global.System.Data.DataColumn
        
        Private columnSpring2_Random2 As Global.System.Data.DataColumn
        
        Private columnSpring2_Number As Global.System.Data.DataColumn
        
        Private columnSpring2_Chart As Global.System.Data.DataColumn
        
        Private columnSpring3_Type As Global.System.Data.DataColumn
        
        Private columnSpring3_Random1 As Global.System.Data.DataColumn
        
        Private columnSpring3_Random2 As Global.System.Data.DataColumn
        
        Private columnSpring3_Number As Global.System.Data.DataColumn
        
        Private columnSpring3_Chart As Global.System.Data.DataColumn
        
        Private columnSpring4_Type As Global.System.Data.DataColumn
        
        Private columnSpring4_Random1 As Global.System.Data.DataColumn
        
        Private columnSpring4_Random2 As Global.System.Data.DataColumn
        
        Private columnSpring4_Number As Global.System.Data.DataColumn
        
        Private columnSpring4_Chart As Global.System.Data.DataColumn
        
        Private columnSpring5_Type As Global.System.Data.DataColumn
        
        Private columnSpring5_Random1 As Global.System.Data.DataColumn
        
        Private columnSpring5_Random2 As Global.System.Data.DataColumn
        
        Private columnSpring5_Number As Global.System.Data.DataColumn
        
        Private columnSpring5_Chart As Global.System.Data.DataColumn
        
        Private columnSpring6_Type As Global.System.Data.DataColumn
        
        Private columnSpring6_Random1 As Global.System.Data.DataColumn
        
        Private columnSpring6_Random2 As Global.System.Data.DataColumn
        
        Private columnSpring6_Number As Global.System.Data.DataColumn
        
        Private columnSpring6_Chart As Global.System.Data.DataColumn
        
        Private columnSpring7_Type As Global.System.Data.DataColumn
        
        Private columnSpring7_Random1 As Global.System.Data.DataColumn
        
        Private columnSpring7_Random2 As Global.System.Data.DataColumn
        
        Private columnSpring7_Number As Global.System.Data.DataColumn
        
        Private columnSpring7_Chart As Global.System.Data.DataColumn
        
        Private columnTop1_Type As Global.System.Data.DataColumn
        
        Private columnTop1_Random1 As Global.System.Data.DataColumn
        
        Private columnTop1_Random2 As Global.System.Data.DataColumn
        
        Private columnTop1_Number As Global.System.Data.DataColumn
        
        Private columnTop1_Chart As Global.System.Data.DataColumn
        
        Private columnTop2_Type As Global.System.Data.DataColumn
        
        Private columnTop2_Random1 As Global.System.Data.DataColumn
        
        Private columnTop2_Random2 As Global.System.Data.DataColumn
        
        Private columnTop2_Number As Global.System.Data.DataColumn
        
        Private columnTop2_Chart As Global.System.Data.DataColumn
        
        Private columnTop3_Type As Global.System.Data.DataColumn
        
        Private columnTop3_Random1 As Global.System.Data.DataColumn
        
        Private columnTop3_Random2 As Global.System.Data.DataColumn
        
        Private columnTop3_Number As Global.System.Data.DataColumn
        
        Private columnTop3_Chart As Global.System.Data.DataColumn
        
        Private columnTop4_Type As Global.System.Data.DataColumn
        
        Private columnTop4_Random1 As Global.System.Data.DataColumn
        
        Private columnTop4_Random2 As Global.System.Data.DataColumn
        
        Private columnTop4_Number As Global.System.Data.DataColumn
        
        Private columnTop4_Chart As Global.System.Data.DataColumn
        
        Private columnTop5_Type As Global.System.Data.DataColumn
        
        Private columnTop5_Random1 As Global.System.Data.DataColumn
        
        Private columnTop5_Random2 As Global.System.Data.DataColumn
        
        Private columnTop5_Number As Global.System.Data.DataColumn
        
        Private columnTop5_Chart As Global.System.Data.DataColumn
        
        Private columnTop6_Type As Global.System.Data.DataColumn
        
        Private columnTop6_Random1 As Global.System.Data.DataColumn
        
        Private columnTop6_Random2 As Global.System.Data.DataColumn
        
        Private columnTop6_Number As Global.System.Data.DataColumn
        
        Private columnTop6_Chart As Global.System.Data.DataColumn
        
        Private columnTop7_Type As Global.System.Data.DataColumn
        
        Private columnTop7_Random1 As Global.System.Data.DataColumn
        
        Private columnTop7_Random2 As Global.System.Data.DataColumn
        
        Private columnTop7_Number As Global.System.Data.DataColumn
        
        Private columnTop7_Chart As Global.System.Data.DataColumn
        
        Private columnTop8_Type As Global.System.Data.DataColumn
        
        Private columnTop8_Random1 As Global.System.Data.DataColumn
        
        Private columnTop8_Random2 As Global.System.Data.DataColumn
        
        Private columnTop8_Number As Global.System.Data.DataColumn
        
        Private columnTop8_Chart As Global.System.Data.DataColumn
        
        Private columnMid1_Type As Global.System.Data.DataColumn
        
        Private columnMid1_Random1 As Global.System.Data.DataColumn
        
        Private columnMid1_Random2 As Global.System.Data.DataColumn
        
        Private columnMid1_Number As Global.System.Data.DataColumn
        
        Private columnMid1_Chart As Global.System.Data.DataColumn
        
        Private columnMid2_Type As Global.System.Data.DataColumn
        
        Private columnMid2_Random1 As Global.System.Data.DataColumn
        
        Private columnMid2_Random2 As Global.System.Data.DataColumn
        
        Private columnMid2_Number As Global.System.Data.DataColumn
        
        Private columnMid2_Chart As Global.System.Data.DataColumn
        
        Private columnMid3_Type As Global.System.Data.DataColumn
        
        Private columnMid3_Random1 As Global.System.Data.DataColumn
        
        Private columnMid3_Random2 As Global.System.Data.DataColumn
        
        Private columnMid3_Number As Global.System.Data.DataColumn
        
        Private columnMid3_Chart As Global.System.Data.DataColumn
        
        Private columnMid4_Type As Global.System.Data.DataColumn
        
        Private columnMid4_Random1 As Global.System.Data.DataColumn
        
        Private columnMid4_Random2 As Global.System.Data.DataColumn
        
        Private columnMid4_Number As Global.System.Data.DataColumn
        
        Private columnMid4_Chart As Global.System.Data.DataColumn
        
        Private columnMid5_Type As Global.System.Data.DataColumn
        
        Private columnMid5_Random1 As Global.System.Data.DataColumn
        
        Private columnMid5_Random2 As Global.System.Data.DataColumn
        
        Private columnMid5_Number As Global.System.Data.DataColumn
        
        Private columnMid5_Chart As Global.System.Data.DataColumn
        
        Private columnMid6_Type As Global.System.Data.DataColumn
        
        Private columnMid6_Random1 As Global.System.Data.DataColumn
        
        Private columnMid6_Random2 As Global.System.Data.DataColumn
        
        Private columnMid6_Number As Global.System.Data.DataColumn
        
        Private columnMid6_Chart As Global.System.Data.DataColumn
        
        Private columnMid7_Type As Global.System.Data.DataColumn
        
        Private columnMid7_Random1 As Global.System.Data.DataColumn
        
        Private columnMid7_Random2 As Global.System.Data.DataColumn
        
        Private columnMid7_Number As Global.System.Data.DataColumn
        
        Private columnMid7_Chart As Global.System.Data.DataColumn
        
        Private columnBot1_Type As Global.System.Data.DataColumn
        
        Private columnBot1_Random1 As Global.System.Data.DataColumn
        
        Private columnBot1_Random2 As Global.System.Data.DataColumn
        
        Private columnBot1_Number As Global.System.Data.DataColumn
        
        Private columnBot1_Chart As Global.System.Data.DataColumn
        
        Private columnBot2_Type As Global.System.Data.DataColumn
        
        Private columnBot2_Random1 As Global.System.Data.DataColumn
        
        Private columnBot2_Random2 As Global.System.Data.DataColumn
        
        Private columnBot2_Number As Global.System.Data.DataColumn
        
        Private columnBot2_Chart As Global.System.Data.DataColumn
        
        Private columnBot3_Type As Global.System.Data.DataColumn
        
        Private columnBot3_Random1 As Global.System.Data.DataColumn
        
        Private columnBot3_Random2 As Global.System.Data.DataColumn
        
        Private columnBot3_Number As Global.System.Data.DataColumn
        
        Private columnBot3_Chart As Global.System.Data.DataColumn
        
        Private columnBot4_Type As Global.System.Data.DataColumn
        
        Private columnBot4_Random1 As Global.System.Data.DataColumn
        
        Private columnBot4_Random2 As Global.System.Data.DataColumn
        
        Private columnBot4_Number As Global.System.Data.DataColumn
        
        Private columnBot4_Chart As Global.System.Data.DataColumn
        
        Private columnBot5_Type As Global.System.Data.DataColumn
        
        Private columnBot5_Random1 As Global.System.Data.DataColumn
        
        Private columnBot5_Random2 As Global.System.Data.DataColumn
        
        Private columnBot5_Number As Global.System.Data.DataColumn
        
        Private columnBot5_Chart As Global.System.Data.DataColumn
        
        Private columnBot6_Type As Global.System.Data.DataColumn
        
        Private columnBot6_Random1 As Global.System.Data.DataColumn
        
        Private columnBot6_Random2 As Global.System.Data.DataColumn
        
        Private columnBot6_Number As Global.System.Data.DataColumn
        
        Private columnBot6_Chart As Global.System.Data.DataColumn
        
        Private columnBot7_Type As Global.System.Data.DataColumn
        
        Private columnBot7_Random1 As Global.System.Data.DataColumn
        
        Private columnBot7_Random2 As Global.System.Data.DataColumn
        
        Private columnBot7_Number As Global.System.Data.DataColumn
        
        Private columnBot7_Chart As Global.System.Data.DataColumn
        
        Private columnUse_Mid_Tum As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Tumbler Kit"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Tumbler_KitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTumbler_Kit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring1_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring1_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring1_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring1_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring1_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring1_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring1_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring1_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring1_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring1_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring2_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring2_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring2_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring2_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring2_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring2_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring2_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring2_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring2_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring2_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring3_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring3_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring3_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring3_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring3_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring3_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring3_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring3_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring3_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring3_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring4_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring4_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring4_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring4_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring4_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring4_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring4_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring4_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring4_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring4_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring5_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring5_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring5_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring5_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring5_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring5_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring5_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring5_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring5_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring5_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring6_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring6_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring6_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring6_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring6_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring6_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring6_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring6_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring6_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring6_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring7_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring7_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring7_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring7_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring7_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring7_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring7_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring7_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Spring7_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpring7_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top1_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop1_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top1_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop1_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top1_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop1_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top1_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop1_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top1_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop1_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top2_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop2_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top2_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop2_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top2_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop2_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top2_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop2_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top2_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop2_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top3_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop3_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top3_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop3_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top3_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop3_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top3_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop3_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top3_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop3_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top4_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop4_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top4_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop4_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top4_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop4_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top4_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop4_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top4_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop4_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top5_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop5_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top5_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop5_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top5_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop5_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top5_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop5_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top5_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop5_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top6_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop6_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top6_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop6_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top6_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop6_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top6_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop6_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top6_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop6_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top7_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop7_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top7_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop7_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top7_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop7_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top7_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop7_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top7_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop7_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top8_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop8_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top8_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop8_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top8_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop8_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top8_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop8_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Top8_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTop8_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid1_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid1_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid1_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid1_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid1_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid1_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid1_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid1_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid1_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid1_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid2_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid2_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid2_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid2_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid2_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid2_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid2_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid2_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid2_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid2_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid3_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid3_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid3_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid3_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid3_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid3_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid3_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid3_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid3_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid3_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid4_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid4_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid4_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid4_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid4_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid4_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid4_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid4_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid4_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid4_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid5_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid5_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid5_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid5_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid5_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid5_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid5_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid5_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid5_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid5_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid6_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid6_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid6_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid6_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid6_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid6_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid6_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid6_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid6_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid6_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid7_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid7_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid7_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid7_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid7_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid7_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid7_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid7_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Mid7_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMid7_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot1_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot1_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot1_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot1_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot1_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot1_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot1_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot1_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot1_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot1_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot2_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot2_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot2_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot2_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot2_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot2_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot2_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot2_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot2_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot2_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot3_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot3_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot3_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot3_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot3_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot3_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot3_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot3_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot3_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot3_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot4_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot4_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot4_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot4_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot4_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot4_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot4_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot4_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot4_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot4_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot5_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot5_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot5_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot5_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot5_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot5_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot5_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot5_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot5_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot5_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot6_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot6_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot6_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot6_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot6_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot6_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot6_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot6_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot6_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot6_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot7_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot7_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot7_Random1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot7_Random1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot7_Random2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot7_Random2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot7_NumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot7_Number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Bot7_ChartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBot7_Chart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Use_Mid_TumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUse_Mid_Tum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Tumbler_KitRow
            Get
                Return CType(Me.Rows(index),Tumbler_KitRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Tumbler_KitRowChanging As Tumbler_KitRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Tumbler_KitRowChanged As Tumbler_KitRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Tumbler_KitRowDeleting As Tumbler_KitRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Tumbler_KitRowDeleted As Tumbler_KitRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddTumbler_KitRow(ByVal row As Tumbler_KitRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddTumbler_KitRow( _
                    ByVal Tumbler_Kit As String,  _
                    ByVal Spring1_Type As String,  _
                    ByVal Spring1_Random1 As String,  _
                    ByVal Spring1_Random2 As String,  _
                    ByVal Spring1_Number As String,  _
                    ByVal Spring1_Chart As String,  _
                    ByVal Spring2_Type As String,  _
                    ByVal Spring2_Random1 As String,  _
                    ByVal Spring2_Random2 As String,  _
                    ByVal Spring2_Number As String,  _
                    ByVal Spring2_Chart As String,  _
                    ByVal Spring3_Type As String,  _
                    ByVal Spring3_Random1 As String,  _
                    ByVal Spring3_Random2 As String,  _
                    ByVal Spring3_Number As String,  _
                    ByVal Spring3_Chart As String,  _
                    ByVal Spring4_Type As String,  _
                    ByVal Spring4_Random1 As String,  _
                    ByVal Spring4_Random2 As String,  _
                    ByVal Spring4_Number As String,  _
                    ByVal Spring4_Chart As String,  _
                    ByVal Spring5_Type As String,  _
                    ByVal Spring5_Random1 As String,  _
                    ByVal Spring5_Random2 As String,  _
                    ByVal Spring5_Number As String,  _
                    ByVal Spring5_Chart As String,  _
                    ByVal Spring6_Type As String,  _
                    ByVal Spring6_Random1 As String,  _
                    ByVal Spring6_Random2 As String,  _
                    ByVal Spring6_Number As String,  _
                    ByVal Spring6_Chart As String,  _
                    ByVal Spring7_Type As String,  _
                    ByVal Spring7_Random1 As String,  _
                    ByVal Spring7_Random2 As String,  _
                    ByVal Spring7_Number As String,  _
                    ByVal Spring7_Chart As String,  _
                    ByVal Top1_Type As String,  _
                    ByVal Top1_Random1 As String,  _
                    ByVal Top1_Random2 As String,  _
                    ByVal Top1_Number As String,  _
                    ByVal Top1_Chart As String,  _
                    ByVal Top2_Type As String,  _
                    ByVal Top2_Random1 As String,  _
                    ByVal Top2_Random2 As String,  _
                    ByVal Top2_Number As String,  _
                    ByVal Top2_Chart As String,  _
                    ByVal Top3_Type As String,  _
                    ByVal Top3_Random1 As String,  _
                    ByVal Top3_Random2 As String,  _
                    ByVal Top3_Number As String,  _
                    ByVal Top3_Chart As String,  _
                    ByVal Top4_Type As String,  _
                    ByVal Top4_Random1 As String,  _
                    ByVal Top4_Random2 As String,  _
                    ByVal Top4_Number As String,  _
                    ByVal Top4_Chart As String,  _
                    ByVal Top5_Type As String,  _
                    ByVal Top5_Random1 As String,  _
                    ByVal Top5_Random2 As String,  _
                    ByVal Top5_Number As String,  _
                    ByVal Top5_Chart As String,  _
                    ByVal Top6_Type As String,  _
                    ByVal Top6_Random1 As String,  _
                    ByVal Top6_Random2 As String,  _
                    ByVal Top6_Number As String,  _
                    ByVal Top6_Chart As String,  _
                    ByVal Top7_Type As String,  _
                    ByVal Top7_Random1 As String,  _
                    ByVal Top7_Random2 As String,  _
                    ByVal Top7_Number As String,  _
                    ByVal Top7_Chart As String,  _
                    ByVal Top8_Type As String,  _
                    ByVal Top8_Random1 As String,  _
                    ByVal Top8_Random2 As String,  _
                    ByVal Top8_Number As String,  _
                    ByVal Top8_Chart As String,  _
                    ByVal Mid1_Type As String,  _
                    ByVal Mid1_Random1 As String,  _
                    ByVal Mid1_Random2 As String,  _
                    ByVal Mid1_Number As String,  _
                    ByVal Mid1_Chart As String,  _
                    ByVal Mid2_Type As String,  _
                    ByVal Mid2_Random1 As String,  _
                    ByVal Mid2_Random2 As String,  _
                    ByVal Mid2_Number As String,  _
                    ByVal Mid2_Chart As String,  _
                    ByVal Mid3_Type As String,  _
                    ByVal Mid3_Random1 As String,  _
                    ByVal Mid3_Random2 As String,  _
                    ByVal Mid3_Number As String,  _
                    ByVal Mid3_Chart As String,  _
                    ByVal Mid4_Type As String,  _
                    ByVal Mid4_Random1 As String,  _
                    ByVal Mid4_Random2 As String,  _
                    ByVal Mid4_Number As String,  _
                    ByVal Mid4_Chart As String,  _
                    ByVal Mid5_Type As String,  _
                    ByVal Mid5_Random1 As String,  _
                    ByVal Mid5_Random2 As String,  _
                    ByVal Mid5_Number As String,  _
                    ByVal Mid5_Chart As String,  _
                    ByVal Mid6_Type As String,  _
                    ByVal Mid6_Random1 As String,  _
                    ByVal Mid6_Random2 As String,  _
                    ByVal Mid6_Number As String,  _
                    ByVal Mid6_Chart As String,  _
                    ByVal Mid7_Type As String,  _
                    ByVal Mid7_Random1 As String,  _
                    ByVal Mid7_Random2 As String,  _
                    ByVal Mid7_Number As String,  _
                    ByVal Mid7_Chart As String,  _
                    ByVal Bot1_Type As String,  _
                    ByVal Bot1_Random1 As String,  _
                    ByVal Bot1_Random2 As String,  _
                    ByVal Bot1_Number As String,  _
                    ByVal Bot1_Chart As String,  _
                    ByVal Bot2_Type As String,  _
                    ByVal Bot2_Random1 As String,  _
                    ByVal Bot2_Random2 As String,  _
                    ByVal Bot2_Number As String,  _
                    ByVal Bot2_Chart As String,  _
                    ByVal Bot3_Type As String,  _
                    ByVal Bot3_Random1 As String,  _
                    ByVal Bot3_Random2 As String,  _
                    ByVal Bot3_Number As String,  _
                    ByVal Bot3_Chart As String,  _
                    ByVal Bot4_Type As String,  _
                    ByVal Bot4_Random1 As String,  _
                    ByVal Bot4_Random2 As String,  _
                    ByVal Bot4_Number As String,  _
                    ByVal Bot4_Chart As String,  _
                    ByVal Bot5_Type As String,  _
                    ByVal Bot5_Random1 As String,  _
                    ByVal Bot5_Random2 As String,  _
                    ByVal Bot5_Number As String,  _
                    ByVal Bot5_Chart As String,  _
                    ByVal Bot6_Type As String,  _
                    ByVal Bot6_Random1 As String,  _
                    ByVal Bot6_Random2 As String,  _
                    ByVal Bot6_Number As String,  _
                    ByVal Bot6_Chart As String,  _
                    ByVal Bot7_Type As String,  _
                    ByVal Bot7_Random1 As String,  _
                    ByVal Bot7_Random2 As String,  _
                    ByVal Bot7_Number As String,  _
                    ByVal Bot7_Chart As String,  _
                    ByVal Use_Mid_Tum As Single) As Tumbler_KitRow
            Dim rowTumbler_KitRow As Tumbler_KitRow = CType(Me.NewRow,Tumbler_KitRow)
            Dim columnValuesArray() As Object = New Object() {Tumbler_Kit, Spring1_Type, Spring1_Random1, Spring1_Random2, Spring1_Number, Spring1_Chart, Spring2_Type, Spring2_Random1, Spring2_Random2, Spring2_Number, Spring2_Chart, Spring3_Type, Spring3_Random1, Spring3_Random2, Spring3_Number, Spring3_Chart, Spring4_Type, Spring4_Random1, Spring4_Random2, Spring4_Number, Spring4_Chart, Spring5_Type, Spring5_Random1, Spring5_Random2, Spring5_Number, Spring5_Chart, Spring6_Type, Spring6_Random1, Spring6_Random2, Spring6_Number, Spring6_Chart, Spring7_Type, Spring7_Random1, Spring7_Random2, Spring7_Number, Spring7_Chart, Top1_Type, Top1_Random1, Top1_Random2, Top1_Number, Top1_Chart, Top2_Type, Top2_Random1, Top2_Random2, Top2_Number, Top2_Chart, Top3_Type, Top3_Random1, Top3_Random2, Top3_Number, Top3_Chart, Top4_Type, Top4_Random1, Top4_Random2, Top4_Number, Top4_Chart, Top5_Type, Top5_Random1, Top5_Random2, Top5_Number, Top5_Chart, Top6_Type, Top6_Random1, Top6_Random2, Top6_Number, Top6_Chart, Top7_Type, Top7_Random1, Top7_Random2, Top7_Number, Top7_Chart, Top8_Type, Top8_Random1, Top8_Random2, Top8_Number, Top8_Chart, Mid1_Type, Mid1_Random1, Mid1_Random2, Mid1_Number, Mid1_Chart, Mid2_Type, Mid2_Random1, Mid2_Random2, Mid2_Number, Mid2_Chart, Mid3_Type, Mid3_Random1, Mid3_Random2, Mid3_Number, Mid3_Chart, Mid4_Type, Mid4_Random1, Mid4_Random2, Mid4_Number, Mid4_Chart, Mid5_Type, Mid5_Random1, Mid5_Random2, Mid5_Number, Mid5_Chart, Mid6_Type, Mid6_Random1, Mid6_Random2, Mid6_Number, Mid6_Chart, Mid7_Type, Mid7_Random1, Mid7_Random2, Mid7_Number, Mid7_Chart, Bot1_Type, Bot1_Random1, Bot1_Random2, Bot1_Number, Bot1_Chart, Bot2_Type, Bot2_Random1, Bot2_Random2, Bot2_Number, Bot2_Chart, Bot3_Type, Bot3_Random1, Bot3_Random2, Bot3_Number, Bot3_Chart, Bot4_Type, Bot4_Random1, Bot4_Random2, Bot4_Number, Bot4_Chart, Bot5_Type, Bot5_Random1, Bot5_Random2, Bot5_Number, Bot5_Chart, Bot6_Type, Bot6_Random1, Bot6_Random2, Bot6_Number, Bot6_Chart, Bot7_Type, Bot7_Random1, Bot7_Random2, Bot7_Number, Bot7_Chart, Use_Mid_Tum}
            rowTumbler_KitRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTumbler_KitRow)
            Return rowTumbler_KitRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindByTumbler_Kit(ByVal Tumbler_Kit As String) As Tumbler_KitRow
            Return CType(Me.Rows.Find(New Object() {Tumbler_Kit}),Tumbler_KitRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Tumbler_KitDataTable = CType(MyBase.Clone,Tumbler_KitDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Tumbler_KitDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTumbler_Kit = MyBase.Columns("Tumbler Kit")
            Me.columnSpring1_Type = MyBase.Columns("Spring1 Type")
            Me.columnSpring1_Random1 = MyBase.Columns("Spring1 Random1")
            Me.columnSpring1_Random2 = MyBase.Columns("Spring1 Random2")
            Me.columnSpring1_Number = MyBase.Columns("Spring1 Number")
            Me.columnSpring1_Chart = MyBase.Columns("Spring1 Chart")
            Me.columnSpring2_Type = MyBase.Columns("Spring2 Type")
            Me.columnSpring2_Random1 = MyBase.Columns("Spring2 Random1")
            Me.columnSpring2_Random2 = MyBase.Columns("Spring2 Random2")
            Me.columnSpring2_Number = MyBase.Columns("Spring2 Number")
            Me.columnSpring2_Chart = MyBase.Columns("Spring2 Chart")
            Me.columnSpring3_Type = MyBase.Columns("Spring3 Type")
            Me.columnSpring3_Random1 = MyBase.Columns("Spring3 Random1")
            Me.columnSpring3_Random2 = MyBase.Columns("Spring3 Random2")
            Me.columnSpring3_Number = MyBase.Columns("Spring3 Number")
            Me.columnSpring3_Chart = MyBase.Columns("Spring3 Chart")
            Me.columnSpring4_Type = MyBase.Columns("Spring4 Type")
            Me.columnSpring4_Random1 = MyBase.Columns("Spring4 Random1")
            Me.columnSpring4_Random2 = MyBase.Columns("Spring4 Random2")
            Me.columnSpring4_Number = MyBase.Columns("Spring4 Number")
            Me.columnSpring4_Chart = MyBase.Columns("Spring4 Chart")
            Me.columnSpring5_Type = MyBase.Columns("Spring5 Type")
            Me.columnSpring5_Random1 = MyBase.Columns("Spring5 Random1")
            Me.columnSpring5_Random2 = MyBase.Columns("Spring5 Random2")
            Me.columnSpring5_Number = MyBase.Columns("Spring5 Number")
            Me.columnSpring5_Chart = MyBase.Columns("Spring5 Chart")
            Me.columnSpring6_Type = MyBase.Columns("Spring6 Type")
            Me.columnSpring6_Random1 = MyBase.Columns("Spring6 Random1")
            Me.columnSpring6_Random2 = MyBase.Columns("Spring6 Random2")
            Me.columnSpring6_Number = MyBase.Columns("Spring6 Number")
            Me.columnSpring6_Chart = MyBase.Columns("Spring6 Chart")
            Me.columnSpring7_Type = MyBase.Columns("Spring7 Type")
            Me.columnSpring7_Random1 = MyBase.Columns("Spring7 Random1")
            Me.columnSpring7_Random2 = MyBase.Columns("Spring7 Random2")
            Me.columnSpring7_Number = MyBase.Columns("Spring7 Number")
            Me.columnSpring7_Chart = MyBase.Columns("Spring7 Chart")
            Me.columnTop1_Type = MyBase.Columns("Top1 Type")
            Me.columnTop1_Random1 = MyBase.Columns("Top1 Random1")
            Me.columnTop1_Random2 = MyBase.Columns("Top1 Random2")
            Me.columnTop1_Number = MyBase.Columns("Top1 Number")
            Me.columnTop1_Chart = MyBase.Columns("Top1 Chart")
            Me.columnTop2_Type = MyBase.Columns("Top2 Type")
            Me.columnTop2_Random1 = MyBase.Columns("Top2 Random1")
            Me.columnTop2_Random2 = MyBase.Columns("Top2 Random2")
            Me.columnTop2_Number = MyBase.Columns("Top2 Number")
            Me.columnTop2_Chart = MyBase.Columns("Top2 Chart")
            Me.columnTop3_Type = MyBase.Columns("Top3 Type")
            Me.columnTop3_Random1 = MyBase.Columns("Top3 Random1")
            Me.columnTop3_Random2 = MyBase.Columns("Top3 Random2")
            Me.columnTop3_Number = MyBase.Columns("Top3 Number")
            Me.columnTop3_Chart = MyBase.Columns("Top3 Chart")
            Me.columnTop4_Type = MyBase.Columns("Top4 Type")
            Me.columnTop4_Random1 = MyBase.Columns("Top4 Random1")
            Me.columnTop4_Random2 = MyBase.Columns("Top4 Random2")
            Me.columnTop4_Number = MyBase.Columns("Top4 Number")
            Me.columnTop4_Chart = MyBase.Columns("Top4 Chart")
            Me.columnTop5_Type = MyBase.Columns("Top5 Type")
            Me.columnTop5_Random1 = MyBase.Columns("Top5 Random1")
            Me.columnTop5_Random2 = MyBase.Columns("Top5 Random2")
            Me.columnTop5_Number = MyBase.Columns("Top5 Number")
            Me.columnTop5_Chart = MyBase.Columns("Top5 Chart")
            Me.columnTop6_Type = MyBase.Columns("Top6 Type")
            Me.columnTop6_Random1 = MyBase.Columns("Top6 Random1")
            Me.columnTop6_Random2 = MyBase.Columns("Top6 Random2")
            Me.columnTop6_Number = MyBase.Columns("Top6 Number")
            Me.columnTop6_Chart = MyBase.Columns("Top6 Chart")
            Me.columnTop7_Type = MyBase.Columns("Top7 Type")
            Me.columnTop7_Random1 = MyBase.Columns("Top7 Random1")
            Me.columnTop7_Random2 = MyBase.Columns("Top7 Random2")
            Me.columnTop7_Number = MyBase.Columns("Top7 Number")
            Me.columnTop7_Chart = MyBase.Columns("Top7 Chart")
            Me.columnTop8_Type = MyBase.Columns("Top8 Type")
            Me.columnTop8_Random1 = MyBase.Columns("Top8 Random1")
            Me.columnTop8_Random2 = MyBase.Columns("Top8 Random2")
            Me.columnTop8_Number = MyBase.Columns("Top8 Number")
            Me.columnTop8_Chart = MyBase.Columns("Top8 Chart")
            Me.columnMid1_Type = MyBase.Columns("Mid1 Type")
            Me.columnMid1_Random1 = MyBase.Columns("Mid1 Random1")
            Me.columnMid1_Random2 = MyBase.Columns("Mid1 Random2")
            Me.columnMid1_Number = MyBase.Columns("Mid1 Number")
            Me.columnMid1_Chart = MyBase.Columns("Mid1 Chart")
            Me.columnMid2_Type = MyBase.Columns("Mid2 Type")
            Me.columnMid2_Random1 = MyBase.Columns("Mid2 Random1")
            Me.columnMid2_Random2 = MyBase.Columns("Mid2 Random2")
            Me.columnMid2_Number = MyBase.Columns("Mid2 Number")
            Me.columnMid2_Chart = MyBase.Columns("Mid2 Chart")
            Me.columnMid3_Type = MyBase.Columns("Mid3 Type")
            Me.columnMid3_Random1 = MyBase.Columns("Mid3 Random1")
            Me.columnMid3_Random2 = MyBase.Columns("Mid3 Random2")
            Me.columnMid3_Number = MyBase.Columns("Mid3 Number")
            Me.columnMid3_Chart = MyBase.Columns("Mid3 Chart")
            Me.columnMid4_Type = MyBase.Columns("Mid4 Type")
            Me.columnMid4_Random1 = MyBase.Columns("Mid4 Random1")
            Me.columnMid4_Random2 = MyBase.Columns("Mid4 Random2")
            Me.columnMid4_Number = MyBase.Columns("Mid4 Number")
            Me.columnMid4_Chart = MyBase.Columns("Mid4 Chart")
            Me.columnMid5_Type = MyBase.Columns("Mid5 Type")
            Me.columnMid5_Random1 = MyBase.Columns("Mid5 Random1")
            Me.columnMid5_Random2 = MyBase.Columns("Mid5 Random2")
            Me.columnMid5_Number = MyBase.Columns("Mid5 Number")
            Me.columnMid5_Chart = MyBase.Columns("Mid5 Chart")
            Me.columnMid6_Type = MyBase.Columns("Mid6 Type")
            Me.columnMid6_Random1 = MyBase.Columns("Mid6 Random1")
            Me.columnMid6_Random2 = MyBase.Columns("Mid6 Random2")
            Me.columnMid6_Number = MyBase.Columns("Mid6 Number")
            Me.columnMid6_Chart = MyBase.Columns("Mid6 Chart")
            Me.columnMid7_Type = MyBase.Columns("Mid7 Type")
            Me.columnMid7_Random1 = MyBase.Columns("Mid7 Random1")
            Me.columnMid7_Random2 = MyBase.Columns("Mid7 Random2")
            Me.columnMid7_Number = MyBase.Columns("Mid7 Number")
            Me.columnMid7_Chart = MyBase.Columns("Mid7 Chart")
            Me.columnBot1_Type = MyBase.Columns("Bot1 Type")
            Me.columnBot1_Random1 = MyBase.Columns("Bot1 Random1")
            Me.columnBot1_Random2 = MyBase.Columns("Bot1 Random2")
            Me.columnBot1_Number = MyBase.Columns("Bot1 Number")
            Me.columnBot1_Chart = MyBase.Columns("Bot1 Chart")
            Me.columnBot2_Type = MyBase.Columns("Bot2 Type")
            Me.columnBot2_Random1 = MyBase.Columns("Bot2 Random1")
            Me.columnBot2_Random2 = MyBase.Columns("Bot2 Random2")
            Me.columnBot2_Number = MyBase.Columns("Bot2 Number")
            Me.columnBot2_Chart = MyBase.Columns("Bot2 Chart")
            Me.columnBot3_Type = MyBase.Columns("Bot3 Type")
            Me.columnBot3_Random1 = MyBase.Columns("Bot3 Random1")
            Me.columnBot3_Random2 = MyBase.Columns("Bot3 Random2")
            Me.columnBot3_Number = MyBase.Columns("Bot3 Number")
            Me.columnBot3_Chart = MyBase.Columns("Bot3 Chart")
            Me.columnBot4_Type = MyBase.Columns("Bot4 Type")
            Me.columnBot4_Random1 = MyBase.Columns("Bot4 Random1")
            Me.columnBot4_Random2 = MyBase.Columns("Bot4 Random2")
            Me.columnBot4_Number = MyBase.Columns("Bot4 Number")
            Me.columnBot4_Chart = MyBase.Columns("Bot4 Chart")
            Me.columnBot5_Type = MyBase.Columns("Bot5 Type")
            Me.columnBot5_Random1 = MyBase.Columns("Bot5 Random1")
            Me.columnBot5_Random2 = MyBase.Columns("Bot5 Random2")
            Me.columnBot5_Number = MyBase.Columns("Bot5 Number")
            Me.columnBot5_Chart = MyBase.Columns("Bot5 Chart")
            Me.columnBot6_Type = MyBase.Columns("Bot6 Type")
            Me.columnBot6_Random1 = MyBase.Columns("Bot6 Random1")
            Me.columnBot6_Random2 = MyBase.Columns("Bot6 Random2")
            Me.columnBot6_Number = MyBase.Columns("Bot6 Number")
            Me.columnBot6_Chart = MyBase.Columns("Bot6 Chart")
            Me.columnBot7_Type = MyBase.Columns("Bot7 Type")
            Me.columnBot7_Random1 = MyBase.Columns("Bot7 Random1")
            Me.columnBot7_Random2 = MyBase.Columns("Bot7 Random2")
            Me.columnBot7_Number = MyBase.Columns("Bot7 Number")
            Me.columnBot7_Chart = MyBase.Columns("Bot7 Chart")
            Me.columnUse_Mid_Tum = MyBase.Columns("Use Mid Tum")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTumbler_Kit = New Global.System.Data.DataColumn("Tumbler Kit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTumbler_Kit)
            Me.columnSpring1_Type = New Global.System.Data.DataColumn("Spring1 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring1_Type)
            Me.columnSpring1_Random1 = New Global.System.Data.DataColumn("Spring1 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring1_Random1)
            Me.columnSpring1_Random2 = New Global.System.Data.DataColumn("Spring1 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring1_Random2)
            Me.columnSpring1_Number = New Global.System.Data.DataColumn("Spring1 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring1_Number)
            Me.columnSpring1_Chart = New Global.System.Data.DataColumn("Spring1 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring1_Chart)
            Me.columnSpring2_Type = New Global.System.Data.DataColumn("Spring2 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring2_Type)
            Me.columnSpring2_Random1 = New Global.System.Data.DataColumn("Spring2 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring2_Random1)
            Me.columnSpring2_Random2 = New Global.System.Data.DataColumn("Spring2 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring2_Random2)
            Me.columnSpring2_Number = New Global.System.Data.DataColumn("Spring2 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring2_Number)
            Me.columnSpring2_Chart = New Global.System.Data.DataColumn("Spring2 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring2_Chart)
            Me.columnSpring3_Type = New Global.System.Data.DataColumn("Spring3 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring3_Type)
            Me.columnSpring3_Random1 = New Global.System.Data.DataColumn("Spring3 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring3_Random1)
            Me.columnSpring3_Random2 = New Global.System.Data.DataColumn("Spring3 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring3_Random2)
            Me.columnSpring3_Number = New Global.System.Data.DataColumn("Spring3 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring3_Number)
            Me.columnSpring3_Chart = New Global.System.Data.DataColumn("Spring3 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring3_Chart)
            Me.columnSpring4_Type = New Global.System.Data.DataColumn("Spring4 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring4_Type)
            Me.columnSpring4_Random1 = New Global.System.Data.DataColumn("Spring4 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring4_Random1)
            Me.columnSpring4_Random2 = New Global.System.Data.DataColumn("Spring4 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring4_Random2)
            Me.columnSpring4_Number = New Global.System.Data.DataColumn("Spring4 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring4_Number)
            Me.columnSpring4_Chart = New Global.System.Data.DataColumn("Spring4 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring4_Chart)
            Me.columnSpring5_Type = New Global.System.Data.DataColumn("Spring5 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring5_Type)
            Me.columnSpring5_Random1 = New Global.System.Data.DataColumn("Spring5 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring5_Random1)
            Me.columnSpring5_Random2 = New Global.System.Data.DataColumn("Spring5 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring5_Random2)
            Me.columnSpring5_Number = New Global.System.Data.DataColumn("Spring5 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring5_Number)
            Me.columnSpring5_Chart = New Global.System.Data.DataColumn("Spring5 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring5_Chart)
            Me.columnSpring6_Type = New Global.System.Data.DataColumn("Spring6 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring6_Type)
            Me.columnSpring6_Random1 = New Global.System.Data.DataColumn("Spring6 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring6_Random1)
            Me.columnSpring6_Random2 = New Global.System.Data.DataColumn("Spring6 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring6_Random2)
            Me.columnSpring6_Number = New Global.System.Data.DataColumn("Spring6 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring6_Number)
            Me.columnSpring6_Chart = New Global.System.Data.DataColumn("Spring6 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring6_Chart)
            Me.columnSpring7_Type = New Global.System.Data.DataColumn("Spring7 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring7_Type)
            Me.columnSpring7_Random1 = New Global.System.Data.DataColumn("Spring7 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring7_Random1)
            Me.columnSpring7_Random2 = New Global.System.Data.DataColumn("Spring7 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring7_Random2)
            Me.columnSpring7_Number = New Global.System.Data.DataColumn("Spring7 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring7_Number)
            Me.columnSpring7_Chart = New Global.System.Data.DataColumn("Spring7 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpring7_Chart)
            Me.columnTop1_Type = New Global.System.Data.DataColumn("Top1 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop1_Type)
            Me.columnTop1_Random1 = New Global.System.Data.DataColumn("Top1 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop1_Random1)
            Me.columnTop1_Random2 = New Global.System.Data.DataColumn("Top1 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop1_Random2)
            Me.columnTop1_Number = New Global.System.Data.DataColumn("Top1 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop1_Number)
            Me.columnTop1_Chart = New Global.System.Data.DataColumn("Top1 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop1_Chart)
            Me.columnTop2_Type = New Global.System.Data.DataColumn("Top2 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop2_Type)
            Me.columnTop2_Random1 = New Global.System.Data.DataColumn("Top2 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop2_Random1)
            Me.columnTop2_Random2 = New Global.System.Data.DataColumn("Top2 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop2_Random2)
            Me.columnTop2_Number = New Global.System.Data.DataColumn("Top2 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop2_Number)
            Me.columnTop2_Chart = New Global.System.Data.DataColumn("Top2 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop2_Chart)
            Me.columnTop3_Type = New Global.System.Data.DataColumn("Top3 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop3_Type)
            Me.columnTop3_Random1 = New Global.System.Data.DataColumn("Top3 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop3_Random1)
            Me.columnTop3_Random2 = New Global.System.Data.DataColumn("Top3 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop3_Random2)
            Me.columnTop3_Number = New Global.System.Data.DataColumn("Top3 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop3_Number)
            Me.columnTop3_Chart = New Global.System.Data.DataColumn("Top3 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop3_Chart)
            Me.columnTop4_Type = New Global.System.Data.DataColumn("Top4 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop4_Type)
            Me.columnTop4_Random1 = New Global.System.Data.DataColumn("Top4 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop4_Random1)
            Me.columnTop4_Random2 = New Global.System.Data.DataColumn("Top4 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop4_Random2)
            Me.columnTop4_Number = New Global.System.Data.DataColumn("Top4 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop4_Number)
            Me.columnTop4_Chart = New Global.System.Data.DataColumn("Top4 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop4_Chart)
            Me.columnTop5_Type = New Global.System.Data.DataColumn("Top5 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop5_Type)
            Me.columnTop5_Random1 = New Global.System.Data.DataColumn("Top5 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop5_Random1)
            Me.columnTop5_Random2 = New Global.System.Data.DataColumn("Top5 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop5_Random2)
            Me.columnTop5_Number = New Global.System.Data.DataColumn("Top5 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop5_Number)
            Me.columnTop5_Chart = New Global.System.Data.DataColumn("Top5 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop5_Chart)
            Me.columnTop6_Type = New Global.System.Data.DataColumn("Top6 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop6_Type)
            Me.columnTop6_Random1 = New Global.System.Data.DataColumn("Top6 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop6_Random1)
            Me.columnTop6_Random2 = New Global.System.Data.DataColumn("Top6 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop6_Random2)
            Me.columnTop6_Number = New Global.System.Data.DataColumn("Top6 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop6_Number)
            Me.columnTop6_Chart = New Global.System.Data.DataColumn("Top6 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop6_Chart)
            Me.columnTop7_Type = New Global.System.Data.DataColumn("Top7 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop7_Type)
            Me.columnTop7_Random1 = New Global.System.Data.DataColumn("Top7 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop7_Random1)
            Me.columnTop7_Random2 = New Global.System.Data.DataColumn("Top7 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop7_Random2)
            Me.columnTop7_Number = New Global.System.Data.DataColumn("Top7 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop7_Number)
            Me.columnTop7_Chart = New Global.System.Data.DataColumn("Top7 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop7_Chart)
            Me.columnTop8_Type = New Global.System.Data.DataColumn("Top8 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop8_Type)
            Me.columnTop8_Random1 = New Global.System.Data.DataColumn("Top8 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop8_Random1)
            Me.columnTop8_Random2 = New Global.System.Data.DataColumn("Top8 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop8_Random2)
            Me.columnTop8_Number = New Global.System.Data.DataColumn("Top8 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop8_Number)
            Me.columnTop8_Chart = New Global.System.Data.DataColumn("Top8 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTop8_Chart)
            Me.columnMid1_Type = New Global.System.Data.DataColumn("Mid1 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid1_Type)
            Me.columnMid1_Random1 = New Global.System.Data.DataColumn("Mid1 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid1_Random1)
            Me.columnMid1_Random2 = New Global.System.Data.DataColumn("Mid1 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid1_Random2)
            Me.columnMid1_Number = New Global.System.Data.DataColumn("Mid1 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid1_Number)
            Me.columnMid1_Chart = New Global.System.Data.DataColumn("Mid1 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid1_Chart)
            Me.columnMid2_Type = New Global.System.Data.DataColumn("Mid2 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid2_Type)
            Me.columnMid2_Random1 = New Global.System.Data.DataColumn("Mid2 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid2_Random1)
            Me.columnMid2_Random2 = New Global.System.Data.DataColumn("Mid2 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid2_Random2)
            Me.columnMid2_Number = New Global.System.Data.DataColumn("Mid2 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid2_Number)
            Me.columnMid2_Chart = New Global.System.Data.DataColumn("Mid2 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid2_Chart)
            Me.columnMid3_Type = New Global.System.Data.DataColumn("Mid3 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid3_Type)
            Me.columnMid3_Random1 = New Global.System.Data.DataColumn("Mid3 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid3_Random1)
            Me.columnMid3_Random2 = New Global.System.Data.DataColumn("Mid3 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid3_Random2)
            Me.columnMid3_Number = New Global.System.Data.DataColumn("Mid3 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid3_Number)
            Me.columnMid3_Chart = New Global.System.Data.DataColumn("Mid3 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid3_Chart)
            Me.columnMid4_Type = New Global.System.Data.DataColumn("Mid4 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid4_Type)
            Me.columnMid4_Random1 = New Global.System.Data.DataColumn("Mid4 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid4_Random1)
            Me.columnMid4_Random2 = New Global.System.Data.DataColumn("Mid4 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid4_Random2)
            Me.columnMid4_Number = New Global.System.Data.DataColumn("Mid4 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid4_Number)
            Me.columnMid4_Chart = New Global.System.Data.DataColumn("Mid4 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid4_Chart)
            Me.columnMid5_Type = New Global.System.Data.DataColumn("Mid5 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid5_Type)
            Me.columnMid5_Random1 = New Global.System.Data.DataColumn("Mid5 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid5_Random1)
            Me.columnMid5_Random2 = New Global.System.Data.DataColumn("Mid5 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid5_Random2)
            Me.columnMid5_Number = New Global.System.Data.DataColumn("Mid5 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid5_Number)
            Me.columnMid5_Chart = New Global.System.Data.DataColumn("Mid5 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid5_Chart)
            Me.columnMid6_Type = New Global.System.Data.DataColumn("Mid6 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid6_Type)
            Me.columnMid6_Random1 = New Global.System.Data.DataColumn("Mid6 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid6_Random1)
            Me.columnMid6_Random2 = New Global.System.Data.DataColumn("Mid6 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid6_Random2)
            Me.columnMid6_Number = New Global.System.Data.DataColumn("Mid6 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid6_Number)
            Me.columnMid6_Chart = New Global.System.Data.DataColumn("Mid6 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid6_Chart)
            Me.columnMid7_Type = New Global.System.Data.DataColumn("Mid7 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid7_Type)
            Me.columnMid7_Random1 = New Global.System.Data.DataColumn("Mid7 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid7_Random1)
            Me.columnMid7_Random2 = New Global.System.Data.DataColumn("Mid7 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid7_Random2)
            Me.columnMid7_Number = New Global.System.Data.DataColumn("Mid7 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid7_Number)
            Me.columnMid7_Chart = New Global.System.Data.DataColumn("Mid7 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMid7_Chart)
            Me.columnBot1_Type = New Global.System.Data.DataColumn("Bot1 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot1_Type)
            Me.columnBot1_Random1 = New Global.System.Data.DataColumn("Bot1 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot1_Random1)
            Me.columnBot1_Random2 = New Global.System.Data.DataColumn("Bot1 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot1_Random2)
            Me.columnBot1_Number = New Global.System.Data.DataColumn("Bot1 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot1_Number)
            Me.columnBot1_Chart = New Global.System.Data.DataColumn("Bot1 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot1_Chart)
            Me.columnBot2_Type = New Global.System.Data.DataColumn("Bot2 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot2_Type)
            Me.columnBot2_Random1 = New Global.System.Data.DataColumn("Bot2 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot2_Random1)
            Me.columnBot2_Random2 = New Global.System.Data.DataColumn("Bot2 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot2_Random2)
            Me.columnBot2_Number = New Global.System.Data.DataColumn("Bot2 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot2_Number)
            Me.columnBot2_Chart = New Global.System.Data.DataColumn("Bot2 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot2_Chart)
            Me.columnBot3_Type = New Global.System.Data.DataColumn("Bot3 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot3_Type)
            Me.columnBot3_Random1 = New Global.System.Data.DataColumn("Bot3 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot3_Random1)
            Me.columnBot3_Random2 = New Global.System.Data.DataColumn("Bot3 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot3_Random2)
            Me.columnBot3_Number = New Global.System.Data.DataColumn("Bot3 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot3_Number)
            Me.columnBot3_Chart = New Global.System.Data.DataColumn("Bot3 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot3_Chart)
            Me.columnBot4_Type = New Global.System.Data.DataColumn("Bot4 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot4_Type)
            Me.columnBot4_Random1 = New Global.System.Data.DataColumn("Bot4 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot4_Random1)
            Me.columnBot4_Random2 = New Global.System.Data.DataColumn("Bot4 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot4_Random2)
            Me.columnBot4_Number = New Global.System.Data.DataColumn("Bot4 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot4_Number)
            Me.columnBot4_Chart = New Global.System.Data.DataColumn("Bot4 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot4_Chart)
            Me.columnBot5_Type = New Global.System.Data.DataColumn("Bot5 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot5_Type)
            Me.columnBot5_Random1 = New Global.System.Data.DataColumn("Bot5 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot5_Random1)
            Me.columnBot5_Random2 = New Global.System.Data.DataColumn("Bot5 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot5_Random2)
            Me.columnBot5_Number = New Global.System.Data.DataColumn("Bot5 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot5_Number)
            Me.columnBot5_Chart = New Global.System.Data.DataColumn("Bot5 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot5_Chart)
            Me.columnBot6_Type = New Global.System.Data.DataColumn("Bot6 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot6_Type)
            Me.columnBot6_Random1 = New Global.System.Data.DataColumn("Bot6 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot6_Random1)
            Me.columnBot6_Random2 = New Global.System.Data.DataColumn("Bot6 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot6_Random2)
            Me.columnBot6_Number = New Global.System.Data.DataColumn("Bot6 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot6_Number)
            Me.columnBot6_Chart = New Global.System.Data.DataColumn("Bot6 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot6_Chart)
            Me.columnBot7_Type = New Global.System.Data.DataColumn("Bot7 Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot7_Type)
            Me.columnBot7_Random1 = New Global.System.Data.DataColumn("Bot7 Random1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot7_Random1)
            Me.columnBot7_Random2 = New Global.System.Data.DataColumn("Bot7 Random2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot7_Random2)
            Me.columnBot7_Number = New Global.System.Data.DataColumn("Bot7 Number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot7_Number)
            Me.columnBot7_Chart = New Global.System.Data.DataColumn("Bot7 Chart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBot7_Chart)
            Me.columnUse_Mid_Tum = New Global.System.Data.DataColumn("Use Mid Tum", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUse_Mid_Tum)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTumbler_Kit}, true))
            Me.columnTumbler_Kit.AllowDBNull = false
            Me.columnTumbler_Kit.Unique = true
            Me.columnTumbler_Kit.MaxLength = 255
            Me.columnSpring1_Type.MaxLength = 255
            Me.columnSpring1_Random1.MaxLength = 255
            Me.columnSpring1_Random2.MaxLength = 255
            Me.columnSpring1_Number.MaxLength = 255
            Me.columnSpring1_Chart.MaxLength = 255
            Me.columnSpring2_Type.MaxLength = 255
            Me.columnSpring2_Random1.MaxLength = 255
            Me.columnSpring2_Random2.MaxLength = 255
            Me.columnSpring2_Number.MaxLength = 255
            Me.columnSpring2_Chart.MaxLength = 255
            Me.columnSpring3_Type.MaxLength = 255
            Me.columnSpring3_Random1.MaxLength = 255
            Me.columnSpring3_Random2.MaxLength = 255
            Me.columnSpring3_Number.MaxLength = 255
            Me.columnSpring3_Chart.MaxLength = 255
            Me.columnSpring4_Type.MaxLength = 255
            Me.columnSpring4_Random1.MaxLength = 255
            Me.columnSpring4_Random2.MaxLength = 255
            Me.columnSpring4_Number.MaxLength = 255
            Me.columnSpring4_Chart.MaxLength = 255
            Me.columnSpring5_Type.MaxLength = 255
            Me.columnSpring5_Random1.MaxLength = 255
            Me.columnSpring5_Random2.MaxLength = 255
            Me.columnSpring5_Number.MaxLength = 255
            Me.columnSpring5_Chart.MaxLength = 255
            Me.columnSpring6_Type.MaxLength = 255
            Me.columnSpring6_Random1.MaxLength = 255
            Me.columnSpring6_Random2.MaxLength = 255
            Me.columnSpring6_Number.MaxLength = 255
            Me.columnSpring6_Chart.MaxLength = 255
            Me.columnSpring7_Type.MaxLength = 255
            Me.columnSpring7_Random1.MaxLength = 255
            Me.columnSpring7_Random2.MaxLength = 255
            Me.columnSpring7_Number.MaxLength = 255
            Me.columnSpring7_Chart.MaxLength = 255
            Me.columnTop1_Type.MaxLength = 255
            Me.columnTop1_Random1.MaxLength = 255
            Me.columnTop1_Random2.MaxLength = 255
            Me.columnTop1_Number.MaxLength = 50
            Me.columnTop1_Chart.MaxLength = 255
            Me.columnTop2_Type.MaxLength = 255
            Me.columnTop2_Random1.MaxLength = 255
            Me.columnTop2_Random2.MaxLength = 255
            Me.columnTop2_Number.MaxLength = 50
            Me.columnTop2_Chart.MaxLength = 255
            Me.columnTop3_Type.MaxLength = 255
            Me.columnTop3_Random1.MaxLength = 255
            Me.columnTop3_Random2.MaxLength = 255
            Me.columnTop3_Number.MaxLength = 50
            Me.columnTop3_Chart.MaxLength = 255
            Me.columnTop4_Type.MaxLength = 255
            Me.columnTop4_Random1.MaxLength = 255
            Me.columnTop4_Random2.MaxLength = 255
            Me.columnTop4_Number.MaxLength = 50
            Me.columnTop4_Chart.MaxLength = 255
            Me.columnTop5_Type.MaxLength = 255
            Me.columnTop5_Random1.MaxLength = 255
            Me.columnTop5_Random2.MaxLength = 255
            Me.columnTop5_Number.MaxLength = 50
            Me.columnTop5_Chart.MaxLength = 255
            Me.columnTop6_Type.MaxLength = 255
            Me.columnTop6_Random1.MaxLength = 255
            Me.columnTop6_Random2.MaxLength = 255
            Me.columnTop6_Number.MaxLength = 50
            Me.columnTop6_Chart.MaxLength = 255
            Me.columnTop7_Type.MaxLength = 255
            Me.columnTop7_Random1.MaxLength = 255
            Me.columnTop7_Random2.MaxLength = 255
            Me.columnTop7_Number.MaxLength = 50
            Me.columnTop7_Chart.MaxLength = 255
            Me.columnTop8_Type.MaxLength = 255
            Me.columnTop8_Random1.MaxLength = 255
            Me.columnTop8_Random2.MaxLength = 255
            Me.columnTop8_Number.MaxLength = 50
            Me.columnTop8_Chart.MaxLength = 255
            Me.columnMid1_Type.MaxLength = 255
            Me.columnMid1_Random1.MaxLength = 255
            Me.columnMid1_Random2.MaxLength = 255
            Me.columnMid1_Number.MaxLength = 50
            Me.columnMid1_Chart.MaxLength = 255
            Me.columnMid2_Type.MaxLength = 255
            Me.columnMid2_Random1.MaxLength = 255
            Me.columnMid2_Random2.MaxLength = 255
            Me.columnMid2_Number.MaxLength = 50
            Me.columnMid2_Chart.MaxLength = 255
            Me.columnMid3_Type.MaxLength = 255
            Me.columnMid3_Random1.MaxLength = 255
            Me.columnMid3_Random2.MaxLength = 255
            Me.columnMid3_Number.MaxLength = 50
            Me.columnMid3_Chart.MaxLength = 255
            Me.columnMid4_Type.MaxLength = 255
            Me.columnMid4_Random1.MaxLength = 255
            Me.columnMid4_Random2.MaxLength = 255
            Me.columnMid4_Number.MaxLength = 50
            Me.columnMid4_Chart.MaxLength = 255
            Me.columnMid5_Type.MaxLength = 255
            Me.columnMid5_Random1.MaxLength = 255
            Me.columnMid5_Random2.MaxLength = 255
            Me.columnMid5_Number.MaxLength = 50
            Me.columnMid5_Chart.MaxLength = 255
            Me.columnMid6_Type.MaxLength = 255
            Me.columnMid6_Random1.MaxLength = 255
            Me.columnMid6_Random2.MaxLength = 255
            Me.columnMid6_Number.MaxLength = 50
            Me.columnMid6_Chart.MaxLength = 255
            Me.columnMid7_Type.MaxLength = 255
            Me.columnMid7_Random1.MaxLength = 255
            Me.columnMid7_Random2.MaxLength = 255
            Me.columnMid7_Number.MaxLength = 50
            Me.columnMid7_Chart.MaxLength = 255
            Me.columnBot1_Type.MaxLength = 255
            Me.columnBot1_Random1.MaxLength = 255
            Me.columnBot1_Random2.MaxLength = 255
            Me.columnBot1_Number.MaxLength = 50
            Me.columnBot1_Chart.MaxLength = 255
            Me.columnBot2_Type.MaxLength = 255
            Me.columnBot2_Random1.MaxLength = 255
            Me.columnBot2_Random2.MaxLength = 255
            Me.columnBot2_Number.MaxLength = 50
            Me.columnBot2_Chart.MaxLength = 255
            Me.columnBot3_Type.MaxLength = 255
            Me.columnBot3_Random1.MaxLength = 255
            Me.columnBot3_Random2.MaxLength = 255
            Me.columnBot3_Number.MaxLength = 50
            Me.columnBot3_Chart.MaxLength = 255
            Me.columnBot4_Type.MaxLength = 255
            Me.columnBot4_Random1.MaxLength = 255
            Me.columnBot4_Random2.MaxLength = 255
            Me.columnBot4_Number.MaxLength = 50
            Me.columnBot4_Chart.MaxLength = 255
            Me.columnBot5_Type.MaxLength = 255
            Me.columnBot5_Random1.MaxLength = 255
            Me.columnBot5_Random2.MaxLength = 255
            Me.columnBot5_Number.MaxLength = 50
            Me.columnBot5_Chart.MaxLength = 255
            Me.columnBot6_Type.MaxLength = 255
            Me.columnBot6_Random1.MaxLength = 255
            Me.columnBot6_Random2.MaxLength = 255
            Me.columnBot6_Number.MaxLength = 50
            Me.columnBot6_Chart.MaxLength = 255
            Me.columnBot7_Type.MaxLength = 255
            Me.columnBot7_Random1.MaxLength = 255
            Me.columnBot7_Random2.MaxLength = 255
            Me.columnBot7_Number.MaxLength = 50
            Me.columnBot7_Chart.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewTumbler_KitRow() As Tumbler_KitRow
            Return CType(Me.NewRow,Tumbler_KitRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Tumbler_KitRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Tumbler_KitRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Tumbler_KitRowChangedEvent) Is Nothing) Then
                RaiseEvent Tumbler_KitRowChanged(Me, New Tumbler_KitRowChangeEvent(CType(e.Row,Tumbler_KitRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Tumbler_KitRowChangingEvent) Is Nothing) Then
                RaiseEvent Tumbler_KitRowChanging(Me, New Tumbler_KitRowChangeEvent(CType(e.Row,Tumbler_KitRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Tumbler_KitRowDeletedEvent) Is Nothing) Then
                RaiseEvent Tumbler_KitRowDeleted(Me, New Tumbler_KitRowChangeEvent(CType(e.Row,Tumbler_KitRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Tumbler_KitRowDeletingEvent) Is Nothing) Then
                RaiseEvent Tumbler_KitRowDeleting(Me, New Tumbler_KitRowChangeEvent(CType(e.Row,Tumbler_KitRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveTumbler_KitRow(ByVal row As Tumbler_KitRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NCLRecipeDataSet = New NCLRecipeDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Tumbler_KitDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BarrelRow
        Inherits Global.System.Data.DataRow
        
        Private tableBarrel As BarrelDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBarrel = CType(Me.Table,BarrelDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Barrel() As String
            Get
                Return CType(Me(Me.tableBarrel.BarrelColumn),String)
            End Get
            Set
                Me(Me.tableBarrel.BarrelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bowl() As String
            Get
                Try 
                    Return CType(Me(Me.tableBarrel.BowlColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bowl' in table 'Barrel' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBarrel.BowlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mark_Orient() As Single
            Get
                Try 
                    Return CType(Me(Me.tableBarrel.Mark_OrientColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mark Orient' in table 'Barrel' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBarrel.Mark_OrientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBowlNull() As Boolean
            Return Me.IsNull(Me.tableBarrel.BowlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBowlNull()
            Me(Me.tableBarrel.BowlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMark_OrientNull() As Boolean
            Return Me.IsNull(Me.tableBarrel.Mark_OrientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMark_OrientNull()
            Me(Me.tableBarrel.Mark_OrientColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Bottom_TumblerRow
        Inherits Global.System.Data.DataRow
        
        Private tableBottom_Tumbler As Bottom_TumblerDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBottom_Tumbler = CType(Me.Table,Bottom_TumblerDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bottom_Tumbler() As String
            Get
                Return CType(Me(Me.tableBottom_Tumbler.Bottom_TumblerColumn),String)
            End Get
            Set
                Me(Me.tableBottom_Tumbler.Bottom_TumblerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bowl() As Single
            Get
                Try 
                    Return CType(Me(Me.tableBottom_Tumbler.BowlColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bowl' in table 'Bottom Tumbler' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBottom_Tumbler.BowlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Stepped() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBottom_Tumbler.SteppedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Stepped' in table 'Bottom Tumbler' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBottom_Tumbler.SteppedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBowlNull() As Boolean
            Return Me.IsNull(Me.tableBottom_Tumbler.BowlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBowlNull()
            Me(Me.tableBottom_Tumbler.BowlColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSteppedNull() As Boolean
            Return Me.IsNull(Me.tableBottom_Tumbler.SteppedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSteppedNull()
            Me(Me.tableBottom_Tumbler.SteppedColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BushingRow
        Inherits Global.System.Data.DataRow
        
        Private tableBushing As BushingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBushing = CType(Me.Table,BushingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bushing() As String
            Get
                Return CType(Me(Me.tableBushing.BushingColumn),String)
            End Get
            Set
                Me(Me.tableBushing.BushingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tooling_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableBushing.Tooling_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tooling Code' in table 'Bushing' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBushing.Tooling_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTooling_CodeNull() As Boolean
            Return Me.IsNull(Me.tableBushing.Tooling_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTooling_CodeNull()
            Me(Me.tableBushing.Tooling_CodeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ChartsRow
        Inherits Global.System.Data.DataRow
        
        Private tableCharts As ChartsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCharts = CType(Me.Table,ChartsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Chart_Name() As String
            Get
                Return CType(Me(Me.tableCharts.Chart_NameColumn),String)
            End Get
            Set
                Me(Me.tableCharts.Chart_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Part_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts.Part_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Part Type' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts.Part_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KeyCode_1() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts.KeyCode_1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyCode 1' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts.KeyCode_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Part__1() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts._Part__1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Part #1' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts._Part__1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KeyCode_2() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts.KeyCode_2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyCode 2' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts.KeyCode_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Part__2() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts._Part__2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Part #2' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts._Part__2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KeyCode_3() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts.KeyCode_3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyCode 3' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts.KeyCode_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Part__3() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts._Part__3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Part #3' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts._Part__3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KeyCode_4() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts.KeyCode_4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyCode 4' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts.KeyCode_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Part__4() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts._Part__4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Part #4' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts._Part__4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KeyCode_5() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts.KeyCode_5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyCode 5' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts.KeyCode_5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Part__5() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts._Part__5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Part #5' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts._Part__5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KeyCode_6() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts.KeyCode_6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyCode 6' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts.KeyCode_6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Part__6() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts._Part__6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Part #6' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts._Part__6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KeyCode_7() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts.KeyCode_7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyCode 7' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts.KeyCode_7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Part__7() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts._Part__7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Part #7' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts._Part__7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KeyCode_8() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts.KeyCode_8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyCode 8' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts.KeyCode_8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Part__8() As String
            Get
                Try 
                    Return CType(Me(Me.tableCharts._Part__8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Part #8' in table 'Charts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCharts._Part__8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPart_TypeNull() As Boolean
            Return Me.IsNull(Me.tableCharts.Part_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPart_TypeNull()
            Me(Me.tableCharts.Part_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsKeyCode_1Null() As Boolean
            Return Me.IsNull(Me.tableCharts.KeyCode_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetKeyCode_1Null()
            Me(Me.tableCharts.KeyCode_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Part__1Null() As Boolean
            Return Me.IsNull(Me.tableCharts._Part__1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Part__1Null()
            Me(Me.tableCharts._Part__1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsKeyCode_2Null() As Boolean
            Return Me.IsNull(Me.tableCharts.KeyCode_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetKeyCode_2Null()
            Me(Me.tableCharts.KeyCode_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Part__2Null() As Boolean
            Return Me.IsNull(Me.tableCharts._Part__2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Part__2Null()
            Me(Me.tableCharts._Part__2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsKeyCode_3Null() As Boolean
            Return Me.IsNull(Me.tableCharts.KeyCode_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetKeyCode_3Null()
            Me(Me.tableCharts.KeyCode_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Part__3Null() As Boolean
            Return Me.IsNull(Me.tableCharts._Part__3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Part__3Null()
            Me(Me.tableCharts._Part__3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsKeyCode_4Null() As Boolean
            Return Me.IsNull(Me.tableCharts.KeyCode_4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetKeyCode_4Null()
            Me(Me.tableCharts.KeyCode_4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Part__4Null() As Boolean
            Return Me.IsNull(Me.tableCharts._Part__4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Part__4Null()
            Me(Me.tableCharts._Part__4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsKeyCode_5Null() As Boolean
            Return Me.IsNull(Me.tableCharts.KeyCode_5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetKeyCode_5Null()
            Me(Me.tableCharts.KeyCode_5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Part__5Null() As Boolean
            Return Me.IsNull(Me.tableCharts._Part__5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Part__5Null()
            Me(Me.tableCharts._Part__5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsKeyCode_6Null() As Boolean
            Return Me.IsNull(Me.tableCharts.KeyCode_6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetKeyCode_6Null()
            Me(Me.tableCharts.KeyCode_6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Part__6Null() As Boolean
            Return Me.IsNull(Me.tableCharts._Part__6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Part__6Null()
            Me(Me.tableCharts._Part__6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsKeyCode_7Null() As Boolean
            Return Me.IsNull(Me.tableCharts.KeyCode_7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetKeyCode_7Null()
            Me(Me.tableCharts.KeyCode_7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Part__7Null() As Boolean
            Return Me.IsNull(Me.tableCharts._Part__7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Part__7Null()
            Me(Me.tableCharts._Part__7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsKeyCode_8Null() As Boolean
            Return Me.IsNull(Me.tableCharts.KeyCode_8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetKeyCode_8Null()
            Me(Me.tableCharts.KeyCode_8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Part__8Null() As Boolean
            Return Me.IsNull(Me.tableCharts._Part__8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Part__8Null()
            Me(Me.tableCharts._Part__8Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Drill_PinRow
        Inherits Global.System.Data.DataRow
        
        Private tableDrill_Pin As Drill_PinDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDrill_Pin = CType(Me.Table,Drill_PinDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Drill_Pin() As String
            Get
                Return CType(Me(Me.tableDrill_Pin.Drill_PinColumn),String)
            End Get
            Set
                Me(Me.tableDrill_Pin.Drill_PinColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Knurl_PinRow
        Inherits Global.System.Data.DataRow
        
        Private tableKnurl_Pin As Knurl_PinDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableKnurl_Pin = CType(Me.Table,Knurl_PinDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Knurl_Pin() As String
            Get
                Return CType(Me(Me.tableKnurl_Pin.Knurl_PinColumn),String)
            End Get
            Set
                Me(Me.tableKnurl_Pin.Knurl_PinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tooling_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableKnurl_Pin.Tooling_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tooling Code' in table 'Knurl Pin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKnurl_Pin.Tooling_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bowl() As Single
            Get
                Try 
                    Return CType(Me(Me.tableKnurl_Pin.BowlColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bowl' in table 'Knurl Pin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKnurl_Pin.BowlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTooling_CodeNull() As Boolean
            Return Me.IsNull(Me.tableKnurl_Pin.Tooling_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTooling_CodeNull()
            Me(Me.tableKnurl_Pin.Tooling_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBowlNull() As Boolean
            Return Me.IsNull(Me.tableKnurl_Pin.BowlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBowlNull()
            Me(Me.tableKnurl_Pin.BowlColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Mid_TumblerRow
        Inherits Global.System.Data.DataRow
        
        Private tableMid_Tumbler As Mid_TumblerDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMid_Tumbler = CType(Me.Table,Mid_TumblerDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid_Tumbler() As String
            Get
                Return CType(Me(Me.tableMid_Tumbler.Mid_TumblerColumn),String)
            End Get
            Set
                Me(Me.tableMid_Tumbler.Mid_TumblerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bowl() As Single
            Get
                Try 
                    Return CType(Me(Me.tableMid_Tumbler.BowlColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bowl' in table 'Mid Tumbler' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMid_Tumbler.BowlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBowlNull() As Boolean
            Return Me.IsNull(Me.tableMid_Tumbler.BowlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBowlNull()
            Me(Me.tableMid_Tumbler.BowlColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RecipeRow
        Inherits Global.System.Data.DataRow
        
        Private tableRecipe As RecipeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRecipe = CType(Me.Table,RecipeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Recipe_Name() As String
            Get
                Return CType(Me(Me.tableRecipe.Recipe_NameColumn),String)
            End Get
            Set
                Me(Me.tableRecipe.Recipe_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Lock_Family() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Lock_FamilyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Lock Family' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Lock_FamilyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Company_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Company_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Company Name' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Company_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tool_Id() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Tool_IdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tool Id' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Tool_IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta1_Load_Keys() As Single
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta1_Load_KeysColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta1 Load Keys' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta1_Load_KeysColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta1_Keyed() As Single
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta1_KeyedColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta1 Keyed' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta1_KeyedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta1_Unload() As Single
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta1_UnloadColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta1 Unload' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta1_UnloadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta2_Enable() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta2_EnableColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta2 Enable' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta2_EnableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Sta3_Part_() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe._Sta3_Part_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta3 Part#' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe._Sta3_Part_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta4_Enable() As Single
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta4_EnableColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta4 Enable' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta4_EnableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Sta5_Part_() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe._Sta5_Part_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta5 Part#' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe._Sta5_Part_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta5_Vert_Height() As Double
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta5_Vert_HeightColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta5 Vert Height' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta5_Vert_HeightColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Sta6_Part_() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe._Sta6_Part_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta6 Part#' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe._Sta6_Part_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Sta7_Part_() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe._Sta7_Part_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta7 Part#' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe._Sta7_Part_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Sta8_Part_() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe._Sta8_Part_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta8 Part#' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe._Sta8_Part_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta9_Enable() As Single
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta9_EnableColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta9 Enable' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta9_EnableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta9_Tool() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta9_ToolColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta9 Tool' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta9_ToolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Sta10_Part_() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe._Sta10_Part_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta10 Part#' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe._Sta10_Part_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Sta11_Part_() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe._Sta11_Part_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta11 Part#' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe._Sta11_Part_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Sta12_Part_() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe._Sta12_Part_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta12 Part#' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe._Sta12_Part_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Sta13_Part_() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe._Sta13_Part_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta13 Part#' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe._Sta13_Part_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta13_Tool() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta13_ToolColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta13 Tool' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta13_ToolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta14_Enable() As Single
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta14_EnableColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta14 Enable' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta14_EnableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta14_Tool() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta14_ToolColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta14 Tool' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta14_ToolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta15_Enable() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta15_EnableColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta15 Enable' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta15_EnableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta15_Insert_Angle() As Double
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta15_Insert_AngleColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta15 Insert Angle' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta15_Insert_AngleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta15_Test_Angle() As Double
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta15_Test_AngleColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta15 Test Angle' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta15_Test_AngleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta15_Finish_Angle() As Double
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta15_Finish_AngleColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta15 Finish Angle' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta15_Finish_AngleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta15_Tool() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta15_ToolColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta15 Tool' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta15_ToolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property _Sta16_Part_() As String
            Get
                Try 
                    Return CType(Me(Me.tableRecipe._Sta16_Part_Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta16 Part#' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe._Sta16_Part_Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta16_BackSupport() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta16_BackSupportColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta16 BackSupport' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta16_BackSupportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sta17_Enable() As Single
            Get
                Try 
                    Return CType(Me(Me.tableRecipe.Sta17_EnableColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sta17 Enable' in table 'Recipe' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRecipe.Sta17_EnableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLock_FamilyNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Lock_FamilyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLock_FamilyNull()
            Me(Me.tableRecipe.Lock_FamilyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompany_NameNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Company_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompany_NameNull()
            Me(Me.tableRecipe.Company_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_DateNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_DateNull()
            Me(Me.tableRecipe.DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTool_IdNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Tool_IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTool_IdNull()
            Me(Me.tableRecipe.Tool_IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta1_Load_KeysNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta1_Load_KeysColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta1_Load_KeysNull()
            Me(Me.tableRecipe.Sta1_Load_KeysColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta1_KeyedNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta1_KeyedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta1_KeyedNull()
            Me(Me.tableRecipe.Sta1_KeyedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta1_UnloadNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta1_UnloadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta1_UnloadNull()
            Me(Me.tableRecipe.Sta1_UnloadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta2_EnableNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta2_EnableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta2_EnableNull()
            Me(Me.tableRecipe.Sta2_EnableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Sta3_Part_Null() As Boolean
            Return Me.IsNull(Me.tableRecipe._Sta3_Part_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Sta3_Part_Null()
            Me(Me.tableRecipe._Sta3_Part_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta4_EnableNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta4_EnableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta4_EnableNull()
            Me(Me.tableRecipe.Sta4_EnableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Sta5_Part_Null() As Boolean
            Return Me.IsNull(Me.tableRecipe._Sta5_Part_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Sta5_Part_Null()
            Me(Me.tableRecipe._Sta5_Part_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta5_Vert_HeightNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta5_Vert_HeightColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta5_Vert_HeightNull()
            Me(Me.tableRecipe.Sta5_Vert_HeightColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Sta6_Part_Null() As Boolean
            Return Me.IsNull(Me.tableRecipe._Sta6_Part_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Sta6_Part_Null()
            Me(Me.tableRecipe._Sta6_Part_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Sta7_Part_Null() As Boolean
            Return Me.IsNull(Me.tableRecipe._Sta7_Part_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Sta7_Part_Null()
            Me(Me.tableRecipe._Sta7_Part_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Sta8_Part_Null() As Boolean
            Return Me.IsNull(Me.tableRecipe._Sta8_Part_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Sta8_Part_Null()
            Me(Me.tableRecipe._Sta8_Part_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta9_EnableNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta9_EnableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta9_EnableNull()
            Me(Me.tableRecipe.Sta9_EnableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta9_ToolNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta9_ToolColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta9_ToolNull()
            Me(Me.tableRecipe.Sta9_ToolColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Sta10_Part_Null() As Boolean
            Return Me.IsNull(Me.tableRecipe._Sta10_Part_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Sta10_Part_Null()
            Me(Me.tableRecipe._Sta10_Part_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Sta11_Part_Null() As Boolean
            Return Me.IsNull(Me.tableRecipe._Sta11_Part_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Sta11_Part_Null()
            Me(Me.tableRecipe._Sta11_Part_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Sta12_Part_Null() As Boolean
            Return Me.IsNull(Me.tableRecipe._Sta12_Part_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Sta12_Part_Null()
            Me(Me.tableRecipe._Sta12_Part_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Sta13_Part_Null() As Boolean
            Return Me.IsNull(Me.tableRecipe._Sta13_Part_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Sta13_Part_Null()
            Me(Me.tableRecipe._Sta13_Part_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta13_ToolNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta13_ToolColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta13_ToolNull()
            Me(Me.tableRecipe.Sta13_ToolColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta14_EnableNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta14_EnableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta14_EnableNull()
            Me(Me.tableRecipe.Sta14_EnableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta14_ToolNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta14_ToolColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta14_ToolNull()
            Me(Me.tableRecipe.Sta14_ToolColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta15_EnableNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta15_EnableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta15_EnableNull()
            Me(Me.tableRecipe.Sta15_EnableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta15_Insert_AngleNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta15_Insert_AngleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta15_Insert_AngleNull()
            Me(Me.tableRecipe.Sta15_Insert_AngleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta15_Test_AngleNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta15_Test_AngleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta15_Test_AngleNull()
            Me(Me.tableRecipe.Sta15_Test_AngleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta15_Finish_AngleNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta15_Finish_AngleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta15_Finish_AngleNull()
            Me(Me.tableRecipe.Sta15_Finish_AngleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta15_ToolNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta15_ToolColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta15_ToolNull()
            Me(Me.tableRecipe.Sta15_ToolColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function Is_Sta16_Part_Null() As Boolean
            Return Me.IsNull(Me.tableRecipe._Sta16_Part_Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub Set_Sta16_Part_Null()
            Me(Me.tableRecipe._Sta16_Part_Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta16_BackSupportNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta16_BackSupportColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta16_BackSupportNull()
            Me(Me.tableRecipe.Sta16_BackSupportColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSta17_EnableNull() As Boolean
            Return Me.IsNull(Me.tableRecipe.Sta17_EnableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSta17_EnableNull()
            Me(Me.tableRecipe.Sta17_EnableColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SpringsRow
        Inherits Global.System.Data.DataRow
        
        Private tableSprings As SpringsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSprings = CType(Me.Table,SpringsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring() As String
            Get
                Return CType(Me(Me.tableSprings.SpringColumn),String)
            End Get
            Set
                Me(Me.tableSprings.SpringColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bowl() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSprings.BowlColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bowl' in table 'Springs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSprings.BowlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBowlNull() As Boolean
            Return Me.IsNull(Me.tableSprings.BowlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBowlNull()
            Me(Me.tableSprings.BowlColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Station_13_ToolingRow
        Inherits Global.System.Data.DataRow
        
        Private tableStation_13_Tooling As Station_13_ToolingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableStation_13_Tooling = CType(Me.Table,Station_13_ToolingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tooling_Name() As String
            Get
                Return CType(Me(Me.tableStation_13_Tooling.Tooling_NameColumn),String)
            End Get
            Set
                Me(Me.tableStation_13_Tooling.Tooling_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Gripper() As String
            Get
                Try 
                    Return CType(Me(Me.tableStation_13_Tooling.GripperColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Gripper' in table 'Station 13 Tooling' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStation_13_Tooling.GripperColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Orient() As String
            Get
                Try 
                    Return CType(Me(Me.tableStation_13_Tooling.OrientColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Orient' in table 'Station 13 Tooling' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStation_13_Tooling.OrientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Shotpin() As String
            Get
                Try 
                    Return CType(Me(Me.tableStation_13_Tooling.ShotpinColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shotpin' in table 'Station 13 Tooling' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStation_13_Tooling.ShotpinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Place() As String
            Get
                Try 
                    Return CType(Me(Me.tableStation_13_Tooling.PlaceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Place' in table 'Station 13 Tooling' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStation_13_Tooling.PlaceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReClock_Pos() As String
            Get
                Try 
                    Return CType(Me(Me.tableStation_13_Tooling.ReClock_PosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReClock Pos' in table 'Station 13 Tooling' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStation_13_Tooling.ReClock_PosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReClock_Rot() As String
            Get
                Try 
                    Return CType(Me(Me.tableStation_13_Tooling.ReClock_RotColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReClock Rot' in table 'Station 13 Tooling' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStation_13_Tooling.ReClock_RotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGripperNull() As Boolean
            Return Me.IsNull(Me.tableStation_13_Tooling.GripperColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGripperNull()
            Me(Me.tableStation_13_Tooling.GripperColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOrientNull() As Boolean
            Return Me.IsNull(Me.tableStation_13_Tooling.OrientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOrientNull()
            Me(Me.tableStation_13_Tooling.OrientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsShotpinNull() As Boolean
            Return Me.IsNull(Me.tableStation_13_Tooling.ShotpinColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetShotpinNull()
            Me(Me.tableStation_13_Tooling.ShotpinColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPlaceNull() As Boolean
            Return Me.IsNull(Me.tableStation_13_Tooling.PlaceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPlaceNull()
            Me(Me.tableStation_13_Tooling.PlaceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReClock_PosNull() As Boolean
            Return Me.IsNull(Me.tableStation_13_Tooling.ReClock_PosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReClock_PosNull()
            Me(Me.tableStation_13_Tooling.ReClock_PosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReClock_RotNull() As Boolean
            Return Me.IsNull(Me.tableStation_13_Tooling.ReClock_RotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReClock_RotNull()
            Me(Me.tableStation_13_Tooling.ReClock_RotColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Station_14_ToolingRow
        Inherits Global.System.Data.DataRow
        
        Private tableStation_14_Tooling As Station_14_ToolingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableStation_14_Tooling = CType(Me.Table,Station_14_ToolingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tooling_Name() As String
            Get
                Return CType(Me(Me.tableStation_14_Tooling.Tooling_NameColumn),String)
            End Get
            Set
                Me(Me.tableStation_14_Tooling.Tooling_NameColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Station_15_ToolingRow
        Inherits Global.System.Data.DataRow
        
        Private tableStation_15_Tooling As Station_15_ToolingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableStation_15_Tooling = CType(Me.Table,Station_15_ToolingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tooling_Name() As String
            Get
                Return CType(Me(Me.tableStation_15_Tooling.Tooling_NameColumn),String)
            End Get
            Set
                Me(Me.tableStation_15_Tooling.Tooling_NameColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Station_16_ToolingRow
        Inherits Global.System.Data.DataRow
        
        Private tableStation_16_Tooling As Station_16_ToolingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableStation_16_Tooling = CType(Me.Table,Station_16_ToolingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tooling_Name() As String
            Get
                Return CType(Me(Me.tableStation_16_Tooling.Tooling_NameColumn),String)
            End Get
            Set
                Me(Me.tableStation_16_Tooling.Tooling_NameColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Station_2_ToolingRow
        Inherits Global.System.Data.DataRow
        
        Private tableStation_2_Tooling As Station_2_ToolingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableStation_2_Tooling = CType(Me.Table,Station_2_ToolingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tooling_Name() As String
            Get
                Return CType(Me(Me.tableStation_2_Tooling.Tooling_NameColumn),String)
            End Get
            Set
                Me(Me.tableStation_2_Tooling.Tooling_NameColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Station_3_ToolingRow
        Inherits Global.System.Data.DataRow
        
        Private tableStation_3_Tooling As Station_3_ToolingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableStation_3_Tooling = CType(Me.Table,Station_3_ToolingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tooling_Name() As String
            Get
                Return CType(Me(Me.tableStation_3_Tooling.Tooling_NameColumn),String)
            End Get
            Set
                Me(Me.tableStation_3_Tooling.Tooling_NameColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Station_9_ToolingRow
        Inherits Global.System.Data.DataRow
        
        Private tableStation_9_Tooling As Station_9_ToolingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableStation_9_Tooling = CType(Me.Table,Station_9_ToolingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tooling_Name() As String
            Get
                Return CType(Me(Me.tableStation_9_Tooling.Tooling_NameColumn),String)
            End Get
            Set
                Me(Me.tableStation_9_Tooling.Tooling_NameColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Top_SleeveRow
        Inherits Global.System.Data.DataRow
        
        Private tableTop_Sleeve As Top_SleeveDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTop_Sleeve = CType(Me.Table,Top_SleeveDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top_Sleeve() As String
            Get
                Return CType(Me(Me.tableTop_Sleeve.Top_SleeveColumn),String)
            End Get
            Set
                Me(Me.tableTop_Sleeve.Top_SleeveColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Top_TumblerRow
        Inherits Global.System.Data.DataRow
        
        Private tableTop_Tumbler As Top_TumblerDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTop_Tumbler = CType(Me.Table,Top_TumblerDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top_Tumbler() As String
            Get
                Return CType(Me(Me.tableTop_Tumbler.Top_TumblerColumn),String)
            End Get
            Set
                Me(Me.tableTop_Tumbler.Top_TumblerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bowl() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTop_Tumbler.BowlColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bowl' in table 'Top Tumbler' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTop_Tumbler.BowlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBowlNull() As Boolean
            Return Me.IsNull(Me.tableTop_Tumbler.BowlColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBowlNull()
            Me(Me.tableTop_Tumbler.BowlColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Tumbler_KitRow
        Inherits Global.System.Data.DataRow
        
        Private tableTumbler_Kit As Tumbler_KitDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTumbler_Kit = CType(Me.Table,Tumbler_KitDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Tumbler_Kit() As String
            Get
                Return CType(Me(Me.tableTumbler_Kit.Tumbler_KitColumn),String)
            End Get
            Set
                Me(Me.tableTumbler_Kit.Tumbler_KitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring1_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring1_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring1 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring1_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring1_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring1_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring1 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring1_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring1_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring1_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring1 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring1_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring1_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring1_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring1 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring1_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring1_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring1_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring1 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring1_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring2_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring2_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring2 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring2_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring2_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring2_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring2 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring2_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring2_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring2_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring2 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring2_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring2_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring2_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring2 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring2_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring2_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring2_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring2 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring2_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring3_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring3_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring3 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring3_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring3_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring3_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring3 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring3_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring3_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring3_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring3 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring3_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring3_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring3_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring3 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring3_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring3_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring3_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring3 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring3_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring4_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring4_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring4 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring4_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring4_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring4_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring4 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring4_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring4_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring4_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring4 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring4_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring4_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring4_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring4 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring4_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring4_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring4_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring4 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring4_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring5_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring5_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring5 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring5_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring5_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring5_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring5 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring5_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring5_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring5_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring5 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring5_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring5_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring5_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring5 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring5_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring5_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring5_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring5 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring5_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring6_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring6_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring6 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring6_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring6_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring6_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring6 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring6_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring6_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring6_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring6 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring6_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring6_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring6_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring6 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring6_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring6_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring6_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring6 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring6_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring7_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring7_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring7 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring7_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring7_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring7_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring7 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring7_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring7_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring7_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring7 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring7_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring7_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring7_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring7 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring7_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Spring7_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Spring7_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Spring7 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Spring7_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top1_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top1_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top1 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top1_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top1_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top1_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top1 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top1_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top1_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top1_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top1 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top1_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top1_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top1_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top1 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top1_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top1_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top1_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top1 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top1_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top2_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top2_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top2 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top2_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top2_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top2_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top2 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top2_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top2_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top2_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top2 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top2_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top2_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top2_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top2 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top2_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top2_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top2_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top2 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top2_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top3_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top3_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top3 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top3_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top3_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top3_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top3 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top3_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top3_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top3_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top3 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top3_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top3_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top3_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top3 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top3_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top3_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top3_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top3 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top3_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top4_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top4_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top4 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top4_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top4_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top4_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top4 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top4_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top4_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top4_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top4 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top4_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top4_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top4_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top4 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top4_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top4_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top4_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top4 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top4_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top5_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top5_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top5 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top5_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top5_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top5_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top5 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top5_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top5_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top5_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top5 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top5_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top5_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top5_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top5 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top5_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top5_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top5_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top5 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top5_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top6_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top6_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top6 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top6_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top6_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top6_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top6 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top6_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top6_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top6_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top6 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top6_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top6_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top6_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top6 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top6_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top6_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top6_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top6 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top6_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top7_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top7_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top7 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top7_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top7_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top7_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top7 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top7_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top7_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top7_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top7 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top7_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top7_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top7_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top7 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top7_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top7_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top7_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top7 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top7_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top8_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top8_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top8 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top8_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top8_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top8_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top8 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top8_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top8_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top8_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top8 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top8_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top8_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top8_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top8 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top8_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Top8_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Top8_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Top8 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Top8_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid1_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid1_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid1 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid1_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid1_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid1_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid1 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid1_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid1_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid1_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid1 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid1_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid1_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid1_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid1 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid1_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid1_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid1_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid1 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid1_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid2_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid2_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid2 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid2_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid2_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid2_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid2 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid2_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid2_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid2_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid2 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid2_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid2_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid2_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid2 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid2_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid2_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid2_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid2 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid2_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid3_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid3_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid3 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid3_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid3_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid3_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid3 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid3_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid3_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid3_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid3 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid3_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid3_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid3_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid3 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid3_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid3_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid3_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid3 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid3_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid4_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid4_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid4 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid4_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid4_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid4_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid4 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid4_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid4_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid4_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid4 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid4_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid4_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid4_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid4 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid4_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid4_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid4_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid4 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid4_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid5_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid5_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid5 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid5_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid5_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid5_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid5 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid5_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid5_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid5_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid5 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid5_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid5_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid5_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid5 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid5_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid5_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid5_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid5 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid5_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid6_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid6_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid6 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid6_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid6_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid6_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid6 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid6_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid6_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid6_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid6 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid6_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid6_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid6_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid6 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid6_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid6_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid6_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid6 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid6_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid7_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid7_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid7 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid7_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid7_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid7_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid7 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid7_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid7_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid7_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid7 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid7_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid7_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid7_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid7 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid7_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Mid7_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Mid7_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mid7 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Mid7_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot1_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot1_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot1 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot1_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot1_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot1_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot1 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot1_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot1_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot1_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot1 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot1_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot1_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot1_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot1 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot1_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot1_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot1_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot1 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot1_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot2_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot2_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot2 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot2_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot2_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot2_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot2 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot2_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot2_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot2_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot2 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot2_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot2_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot2_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot2 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot2_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot2_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot2_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot2 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot2_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot3_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot3_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot3 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot3_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot3_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot3_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot3 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot3_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot3_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot3_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot3 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot3_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot3_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot3_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot3 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot3_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot3_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot3_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot3 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot3_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot4_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot4_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot4 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot4_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot4_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot4_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot4 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot4_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot4_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot4_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot4 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot4_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot4_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot4_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot4 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot4_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot4_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot4_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot4 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot4_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot5_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot5_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot5 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot5_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot5_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot5_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot5 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot5_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot5_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot5_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot5 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot5_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot5_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot5_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot5 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot5_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot5_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot5_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot5 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot5_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot6_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot6_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot6 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot6_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot6_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot6_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot6 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot6_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot6_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot6_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot6 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot6_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot6_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot6_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot6 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot6_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot6_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot6_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot6 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot6_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot7_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot7_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot7 Type' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot7_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot7_Random1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot7_Random1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot7 Random1' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot7_Random1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot7_Random2() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot7_Random2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot7 Random2' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot7_Random2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot7_Number() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot7_NumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot7 Number' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot7_NumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Bot7_Chart() As String
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Bot7_ChartColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bot7 Chart' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Bot7_ChartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Use_Mid_Tum() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTumbler_Kit.Use_Mid_TumColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Use Mid Tum' in table 'Tumbler Kit' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTumbler_Kit.Use_Mid_TumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring1_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring1_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring1_TypeNull()
            Me(Me.tableTumbler_Kit.Spring1_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring1_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring1_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring1_Random1Null()
            Me(Me.tableTumbler_Kit.Spring1_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring1_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring1_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring1_Random2Null()
            Me(Me.tableTumbler_Kit.Spring1_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring1_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring1_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring1_NumberNull()
            Me(Me.tableTumbler_Kit.Spring1_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring1_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring1_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring1_ChartNull()
            Me(Me.tableTumbler_Kit.Spring1_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring2_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring2_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring2_TypeNull()
            Me(Me.tableTumbler_Kit.Spring2_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring2_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring2_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring2_Random1Null()
            Me(Me.tableTumbler_Kit.Spring2_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring2_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring2_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring2_Random2Null()
            Me(Me.tableTumbler_Kit.Spring2_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring2_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring2_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring2_NumberNull()
            Me(Me.tableTumbler_Kit.Spring2_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring2_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring2_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring2_ChartNull()
            Me(Me.tableTumbler_Kit.Spring2_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring3_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring3_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring3_TypeNull()
            Me(Me.tableTumbler_Kit.Spring3_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring3_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring3_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring3_Random1Null()
            Me(Me.tableTumbler_Kit.Spring3_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring3_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring3_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring3_Random2Null()
            Me(Me.tableTumbler_Kit.Spring3_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring3_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring3_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring3_NumberNull()
            Me(Me.tableTumbler_Kit.Spring3_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring3_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring3_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring3_ChartNull()
            Me(Me.tableTumbler_Kit.Spring3_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring4_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring4_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring4_TypeNull()
            Me(Me.tableTumbler_Kit.Spring4_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring4_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring4_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring4_Random1Null()
            Me(Me.tableTumbler_Kit.Spring4_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring4_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring4_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring4_Random2Null()
            Me(Me.tableTumbler_Kit.Spring4_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring4_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring4_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring4_NumberNull()
            Me(Me.tableTumbler_Kit.Spring4_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring4_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring4_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring4_ChartNull()
            Me(Me.tableTumbler_Kit.Spring4_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring5_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring5_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring5_TypeNull()
            Me(Me.tableTumbler_Kit.Spring5_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring5_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring5_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring5_Random1Null()
            Me(Me.tableTumbler_Kit.Spring5_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring5_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring5_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring5_Random2Null()
            Me(Me.tableTumbler_Kit.Spring5_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring5_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring5_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring5_NumberNull()
            Me(Me.tableTumbler_Kit.Spring5_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring5_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring5_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring5_ChartNull()
            Me(Me.tableTumbler_Kit.Spring5_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring6_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring6_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring6_TypeNull()
            Me(Me.tableTumbler_Kit.Spring6_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring6_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring6_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring6_Random1Null()
            Me(Me.tableTumbler_Kit.Spring6_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring6_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring6_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring6_Random2Null()
            Me(Me.tableTumbler_Kit.Spring6_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring6_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring6_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring6_NumberNull()
            Me(Me.tableTumbler_Kit.Spring6_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring6_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring6_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring6_ChartNull()
            Me(Me.tableTumbler_Kit.Spring6_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring7_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring7_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring7_TypeNull()
            Me(Me.tableTumbler_Kit.Spring7_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring7_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring7_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring7_Random1Null()
            Me(Me.tableTumbler_Kit.Spring7_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring7_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring7_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring7_Random2Null()
            Me(Me.tableTumbler_Kit.Spring7_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring7_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring7_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring7_NumberNull()
            Me(Me.tableTumbler_Kit.Spring7_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSpring7_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Spring7_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSpring7_ChartNull()
            Me(Me.tableTumbler_Kit.Spring7_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop1_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top1_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop1_TypeNull()
            Me(Me.tableTumbler_Kit.Top1_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop1_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top1_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop1_Random1Null()
            Me(Me.tableTumbler_Kit.Top1_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop1_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top1_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop1_Random2Null()
            Me(Me.tableTumbler_Kit.Top1_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop1_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top1_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop1_NumberNull()
            Me(Me.tableTumbler_Kit.Top1_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop1_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top1_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop1_ChartNull()
            Me(Me.tableTumbler_Kit.Top1_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop2_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top2_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop2_TypeNull()
            Me(Me.tableTumbler_Kit.Top2_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop2_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top2_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop2_Random1Null()
            Me(Me.tableTumbler_Kit.Top2_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop2_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top2_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop2_Random2Null()
            Me(Me.tableTumbler_Kit.Top2_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop2_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top2_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop2_NumberNull()
            Me(Me.tableTumbler_Kit.Top2_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop2_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top2_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop2_ChartNull()
            Me(Me.tableTumbler_Kit.Top2_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop3_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top3_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop3_TypeNull()
            Me(Me.tableTumbler_Kit.Top3_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop3_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top3_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop3_Random1Null()
            Me(Me.tableTumbler_Kit.Top3_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop3_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top3_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop3_Random2Null()
            Me(Me.tableTumbler_Kit.Top3_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop3_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top3_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop3_NumberNull()
            Me(Me.tableTumbler_Kit.Top3_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop3_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top3_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop3_ChartNull()
            Me(Me.tableTumbler_Kit.Top3_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop4_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top4_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop4_TypeNull()
            Me(Me.tableTumbler_Kit.Top4_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop4_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top4_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop4_Random1Null()
            Me(Me.tableTumbler_Kit.Top4_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop4_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top4_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop4_Random2Null()
            Me(Me.tableTumbler_Kit.Top4_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop4_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top4_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop4_NumberNull()
            Me(Me.tableTumbler_Kit.Top4_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop4_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top4_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop4_ChartNull()
            Me(Me.tableTumbler_Kit.Top4_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop5_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top5_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop5_TypeNull()
            Me(Me.tableTumbler_Kit.Top5_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop5_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top5_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop5_Random1Null()
            Me(Me.tableTumbler_Kit.Top5_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop5_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top5_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop5_Random2Null()
            Me(Me.tableTumbler_Kit.Top5_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop5_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top5_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop5_NumberNull()
            Me(Me.tableTumbler_Kit.Top5_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop5_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top5_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop5_ChartNull()
            Me(Me.tableTumbler_Kit.Top5_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop6_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top6_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop6_TypeNull()
            Me(Me.tableTumbler_Kit.Top6_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop6_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top6_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop6_Random1Null()
            Me(Me.tableTumbler_Kit.Top6_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop6_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top6_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop6_Random2Null()
            Me(Me.tableTumbler_Kit.Top6_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop6_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top6_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop6_NumberNull()
            Me(Me.tableTumbler_Kit.Top6_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop6_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top6_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop6_ChartNull()
            Me(Me.tableTumbler_Kit.Top6_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop7_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top7_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop7_TypeNull()
            Me(Me.tableTumbler_Kit.Top7_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop7_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top7_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop7_Random1Null()
            Me(Me.tableTumbler_Kit.Top7_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop7_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top7_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop7_Random2Null()
            Me(Me.tableTumbler_Kit.Top7_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop7_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top7_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop7_NumberNull()
            Me(Me.tableTumbler_Kit.Top7_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop7_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top7_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop7_ChartNull()
            Me(Me.tableTumbler_Kit.Top7_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop8_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top8_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop8_TypeNull()
            Me(Me.tableTumbler_Kit.Top8_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop8_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top8_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop8_Random1Null()
            Me(Me.tableTumbler_Kit.Top8_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop8_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top8_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop8_Random2Null()
            Me(Me.tableTumbler_Kit.Top8_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop8_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top8_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop8_NumberNull()
            Me(Me.tableTumbler_Kit.Top8_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTop8_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Top8_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTop8_ChartNull()
            Me(Me.tableTumbler_Kit.Top8_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid1_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid1_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid1_TypeNull()
            Me(Me.tableTumbler_Kit.Mid1_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid1_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid1_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid1_Random1Null()
            Me(Me.tableTumbler_Kit.Mid1_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid1_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid1_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid1_Random2Null()
            Me(Me.tableTumbler_Kit.Mid1_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid1_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid1_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid1_NumberNull()
            Me(Me.tableTumbler_Kit.Mid1_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid1_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid1_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid1_ChartNull()
            Me(Me.tableTumbler_Kit.Mid1_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid2_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid2_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid2_TypeNull()
            Me(Me.tableTumbler_Kit.Mid2_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid2_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid2_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid2_Random1Null()
            Me(Me.tableTumbler_Kit.Mid2_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid2_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid2_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid2_Random2Null()
            Me(Me.tableTumbler_Kit.Mid2_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid2_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid2_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid2_NumberNull()
            Me(Me.tableTumbler_Kit.Mid2_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid2_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid2_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid2_ChartNull()
            Me(Me.tableTumbler_Kit.Mid2_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid3_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid3_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid3_TypeNull()
            Me(Me.tableTumbler_Kit.Mid3_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid3_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid3_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid3_Random1Null()
            Me(Me.tableTumbler_Kit.Mid3_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid3_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid3_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid3_Random2Null()
            Me(Me.tableTumbler_Kit.Mid3_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid3_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid3_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid3_NumberNull()
            Me(Me.tableTumbler_Kit.Mid3_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid3_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid3_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid3_ChartNull()
            Me(Me.tableTumbler_Kit.Mid3_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid4_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid4_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid4_TypeNull()
            Me(Me.tableTumbler_Kit.Mid4_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid4_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid4_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid4_Random1Null()
            Me(Me.tableTumbler_Kit.Mid4_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid4_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid4_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid4_Random2Null()
            Me(Me.tableTumbler_Kit.Mid4_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid4_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid4_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid4_NumberNull()
            Me(Me.tableTumbler_Kit.Mid4_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid4_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid4_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid4_ChartNull()
            Me(Me.tableTumbler_Kit.Mid4_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid5_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid5_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid5_TypeNull()
            Me(Me.tableTumbler_Kit.Mid5_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid5_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid5_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid5_Random1Null()
            Me(Me.tableTumbler_Kit.Mid5_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid5_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid5_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid5_Random2Null()
            Me(Me.tableTumbler_Kit.Mid5_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid5_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid5_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid5_NumberNull()
            Me(Me.tableTumbler_Kit.Mid5_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid5_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid5_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid5_ChartNull()
            Me(Me.tableTumbler_Kit.Mid5_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid6_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid6_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid6_TypeNull()
            Me(Me.tableTumbler_Kit.Mid6_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid6_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid6_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid6_Random1Null()
            Me(Me.tableTumbler_Kit.Mid6_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid6_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid6_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid6_Random2Null()
            Me(Me.tableTumbler_Kit.Mid6_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid6_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid6_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid6_NumberNull()
            Me(Me.tableTumbler_Kit.Mid6_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid6_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid6_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid6_ChartNull()
            Me(Me.tableTumbler_Kit.Mid6_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid7_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid7_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid7_TypeNull()
            Me(Me.tableTumbler_Kit.Mid7_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid7_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid7_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid7_Random1Null()
            Me(Me.tableTumbler_Kit.Mid7_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid7_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid7_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid7_Random2Null()
            Me(Me.tableTumbler_Kit.Mid7_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid7_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid7_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid7_NumberNull()
            Me(Me.tableTumbler_Kit.Mid7_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMid7_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Mid7_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMid7_ChartNull()
            Me(Me.tableTumbler_Kit.Mid7_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot1_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot1_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot1_TypeNull()
            Me(Me.tableTumbler_Kit.Bot1_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot1_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot1_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot1_Random1Null()
            Me(Me.tableTumbler_Kit.Bot1_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot1_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot1_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot1_Random2Null()
            Me(Me.tableTumbler_Kit.Bot1_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot1_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot1_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot1_NumberNull()
            Me(Me.tableTumbler_Kit.Bot1_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot1_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot1_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot1_ChartNull()
            Me(Me.tableTumbler_Kit.Bot1_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot2_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot2_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot2_TypeNull()
            Me(Me.tableTumbler_Kit.Bot2_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot2_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot2_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot2_Random1Null()
            Me(Me.tableTumbler_Kit.Bot2_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot2_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot2_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot2_Random2Null()
            Me(Me.tableTumbler_Kit.Bot2_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot2_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot2_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot2_NumberNull()
            Me(Me.tableTumbler_Kit.Bot2_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot2_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot2_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot2_ChartNull()
            Me(Me.tableTumbler_Kit.Bot2_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot3_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot3_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot3_TypeNull()
            Me(Me.tableTumbler_Kit.Bot3_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot3_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot3_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot3_Random1Null()
            Me(Me.tableTumbler_Kit.Bot3_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot3_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot3_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot3_Random2Null()
            Me(Me.tableTumbler_Kit.Bot3_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot3_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot3_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot3_NumberNull()
            Me(Me.tableTumbler_Kit.Bot3_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot3_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot3_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot3_ChartNull()
            Me(Me.tableTumbler_Kit.Bot3_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot4_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot4_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot4_TypeNull()
            Me(Me.tableTumbler_Kit.Bot4_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot4_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot4_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot4_Random1Null()
            Me(Me.tableTumbler_Kit.Bot4_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot4_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot4_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot4_Random2Null()
            Me(Me.tableTumbler_Kit.Bot4_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot4_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot4_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot4_NumberNull()
            Me(Me.tableTumbler_Kit.Bot4_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot4_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot4_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot4_ChartNull()
            Me(Me.tableTumbler_Kit.Bot4_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot5_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot5_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot5_TypeNull()
            Me(Me.tableTumbler_Kit.Bot5_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot5_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot5_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot5_Random1Null()
            Me(Me.tableTumbler_Kit.Bot5_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot5_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot5_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot5_Random2Null()
            Me(Me.tableTumbler_Kit.Bot5_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot5_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot5_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot5_NumberNull()
            Me(Me.tableTumbler_Kit.Bot5_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot5_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot5_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot5_ChartNull()
            Me(Me.tableTumbler_Kit.Bot5_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot6_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot6_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot6_TypeNull()
            Me(Me.tableTumbler_Kit.Bot6_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot6_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot6_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot6_Random1Null()
            Me(Me.tableTumbler_Kit.Bot6_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot6_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot6_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot6_Random2Null()
            Me(Me.tableTumbler_Kit.Bot6_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot6_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot6_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot6_NumberNull()
            Me(Me.tableTumbler_Kit.Bot6_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot6_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot6_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot6_ChartNull()
            Me(Me.tableTumbler_Kit.Bot6_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot7_TypeNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot7_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot7_TypeNull()
            Me(Me.tableTumbler_Kit.Bot7_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot7_Random1Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot7_Random1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot7_Random1Null()
            Me(Me.tableTumbler_Kit.Bot7_Random1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot7_Random2Null() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot7_Random2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot7_Random2Null()
            Me(Me.tableTumbler_Kit.Bot7_Random2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot7_NumberNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot7_NumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot7_NumberNull()
            Me(Me.tableTumbler_Kit.Bot7_NumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBot7_ChartNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Bot7_ChartColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBot7_ChartNull()
            Me(Me.tableTumbler_Kit.Bot7_ChartColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUse_Mid_TumNull() As Boolean
            Return Me.IsNull(Me.tableTumbler_Kit.Use_Mid_TumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUse_Mid_TumNull()
            Me(Me.tableTumbler_Kit.Use_Mid_TumColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class BarrelRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BarrelRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As BarrelRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As BarrelRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class Bottom_TumblerRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Bottom_TumblerRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As Bottom_TumblerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As Bottom_TumblerRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class BushingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BushingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As BushingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As BushingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class ChartsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ChartsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As ChartsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As ChartsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class Drill_PinRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Drill_PinRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As Drill_PinRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As Drill_PinRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class Knurl_PinRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Knurl_PinRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As Knurl_PinRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As Knurl_PinRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class Mid_TumblerRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Mid_TumblerRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As Mid_TumblerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As Mid_TumblerRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class RecipeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RecipeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As RecipeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As RecipeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class SpringsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SpringsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As SpringsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As SpringsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class Station_13_ToolingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Station_13_ToolingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As Station_13_ToolingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As Station_13_ToolingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class Station_14_ToolingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Station_14_ToolingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As Station_14_ToolingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As Station_14_ToolingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class Station_15_ToolingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Station_15_ToolingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As Station_15_ToolingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As Station_15_ToolingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class Station_16_ToolingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Station_16_ToolingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As Station_16_ToolingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As Station_16_ToolingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class Station_2_ToolingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Station_2_ToolingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As Station_2_ToolingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As Station_2_ToolingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class Station_3_ToolingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Station_3_ToolingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As Station_3_ToolingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As Station_3_ToolingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class Station_9_ToolingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Station_9_ToolingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As Station_9_ToolingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As Station_9_ToolingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class Top_SleeveRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Top_SleeveRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As Top_SleeveRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As Top_SleeveRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class Top_TumblerRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Top_TumblerRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As Top_TumblerRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As Top_TumblerRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class Tumbler_KitRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Tumbler_KitRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As Tumbler_KitRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As Tumbler_KitRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace NCLRecipeDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BarrelTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Barrel"
            tableMapping.ColumnMappings.Add("Barrel", "Barrel")
            tableMapping.ColumnMappings.Add("Bowl", "Bowl")
            tableMapping.ColumnMappings.Add("Mark Orient", "Mark Orient")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Barrel` WHERE ((`Barrel` = ?) AND ((? = 1 AND `Bowl` IS NULL) OR (`B"& _ 
                "owl` = ?)) AND ((? = 1 AND `Mark Orient` IS NULL) OR (`Mark Orient` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Barrel", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Barrel", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bowl", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bowl", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mark_Orient", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mark Orient", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mark_Orient", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mark Orient", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Barrel` (`Barrel`, `Bowl`, `Mark Orient`) VALUES (?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Barrel", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Barrel", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bowl", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mark_Orient", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mark Orient", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Barrel` SET `Barrel` = ?, `Bowl` = ?, `Mark Orient` = ? WHERE ((`Barrel` "& _ 
                "= ?) AND ((? = 1 AND `Bowl` IS NULL) OR (`Bowl` = ?)) AND ((? = 1 AND `Mark Orie"& _ 
                "nt` IS NULL) OR (`Mark Orient` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Barrel", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Barrel", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bowl", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mark_Orient", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mark Orient", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Barrel", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Barrel", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bowl", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bowl", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mark_Orient", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mark Orient", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mark_Orient", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mark Orient", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Barrel, Bowl, [Mark Orient] FROM Barrel"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT [Barrel].[Bowl] FROM [Barrel] where [Barrel].[Barrel] = ?"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Barrel", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Barrel", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT [Barrel].[Mark Orient] FROM [Barrel] where [Barrel].[Barrel] = ?"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Barrel", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Barrel", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.BarrelDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.BarrelDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.BarrelDataTable = New NCLRecipeDataSet.BarrelDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.BarrelDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Barrel")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Barrel As String, ByVal Original_Bowl As String, ByVal Original_Mark_Orient As Single) As Integer
            If (Original_Barrel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Barrel")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Barrel,String)
            End If
            If (Original_Bowl Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Bowl")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Bowl,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Mark_Orient,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Barrel As String, ByVal Bowl As String, ByVal Mark_Orient As Single) As Integer
            If (Barrel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Barrel")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Barrel,String)
            End If
            If (Bowl Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Bowl")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Bowl,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Mark_Orient,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Barrel As String, ByVal Bowl As String, ByVal Mark_Orient As Single, ByVal Original_Barrel As String, ByVal Original_Bowl As String, ByVal Original_Mark_Orient As Single) As Integer
            If (Barrel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Barrel")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Barrel,String)
            End If
            If (Bowl Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Bowl")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Bowl,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Mark_Orient,Single)
            If (Original_Barrel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Barrel")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_Barrel,String)
            End If
            If (Original_Bowl Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Bowl")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_Bowl,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Mark_Orient,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Bowl As String, ByVal Mark_Orient As Single, ByVal Original_Barrel As String, ByVal Original_Bowl As String, ByVal Original_Mark_Orient As Single) As Integer
            Return Me.Update(Original_Barrel, Bowl, Mark_Orient, Original_Barrel, Original_Bowl, Original_Mark_Orient)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBowl(ByVal Barrel As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(1)
            If (Barrel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Barrel")
            Else
                command.Parameters(0).Value = CType(Barrel,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMarkOrient(ByVal Barrel As String) As Global.System.Nullable(Of Single)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(2)
            If (Barrel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Barrel")
            Else
                command.Parameters(0).Value = CType(Barrel,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Single)()
            Else
                Return New Global.System.Nullable(Of Single)(CType(returnValue,Single))
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Bottom_TumblerTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Bottom Tumbler"
            tableMapping.ColumnMappings.Add("Bottom Tumbler", "Bottom Tumbler")
            tableMapping.ColumnMappings.Add("Bowl", "Bowl")
            tableMapping.ColumnMappings.Add("Stepped", "Stepped")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Bottom Tumbler` WHERE ((`Bottom Tumbler` = ?) AND ((? = 1 AND `Bowl`"& _ 
                " IS NULL) OR (`Bowl` = ?)) AND ((? = 1 AND `Stepped` IS NULL) OR (`Stepped` = ?)"& _ 
                "))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bottom_Tumbler", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bottom Tumbler", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bowl", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Stepped", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Stepped", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Stepped", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Stepped", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Bottom Tumbler` (`Bottom Tumbler`, `Bowl`, `Stepped`) VALUES (?, ?, "& _ 
                "?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bottom_Tumbler", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bottom Tumbler", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Stepped", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Stepped", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Bottom Tumbler` SET `Bottom Tumbler` = ?, `Bowl` = ?, `Stepped` = ? WHERE"& _ 
                " ((`Bottom Tumbler` = ?) AND ((? = 1 AND `Bowl` IS NULL) OR (`Bowl` = ?)) AND (("& _ 
                "? = 1 AND `Stepped` IS NULL) OR (`Stepped` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bottom_Tumbler", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bottom Tumbler", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Stepped", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Stepped", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bottom_Tumbler", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bottom Tumbler", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bowl", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Stepped", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Stepped", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Stepped", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Stepped", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT [Bottom Tumbler], Bowl, Stepped FROM [Bottom Tumbler]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT [Bottom Tumbler], Bowl, Stepped FROM [Bottom Tumbler] WHERE ([Bottom Tumbl"& _ 
                "er] = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bottom_Tumbler", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bottom Tumbler", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT TRIM([Bottom Tumbler].[Bowl]) FROM [Bottom Tumbler] WHERE ([Bottom Tumbler"& _ 
                "].[Bottom Tumbler] = ?)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bottom_Tumbler", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bottom Tumbler", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT TRIM([Bottom Tumbler].[Stepped]) FROM [Bottom Tumbler] WHERE ([Bottom Tumb"& _ 
                "ler].[Bottom Tumbler] = ?)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bottom_Tumbler", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bottom Tumbler", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.Bottom_TumblerDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.Bottom_TumblerDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.Bottom_TumblerDataTable = New NCLRecipeDataSet.Bottom_TumblerDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As NCLRecipeDataSet.Bottom_TumblerDataTable, ByVal Bottom_Tumbler As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Bottom_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Bottom_Tumbler")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Bottom_Tumbler,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal Bottom_Tumbler As String) As NCLRecipeDataSet.Bottom_TumblerDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Bottom_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Bottom_Tumbler")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Bottom_Tumbler,String)
            End If
            Dim dataTable As NCLRecipeDataSet.Bottom_TumblerDataTable = New NCLRecipeDataSet.Bottom_TumblerDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.Bottom_TumblerDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Bottom Tumbler")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Bottom_Tumbler As String, ByVal Original_Bowl As Single, ByVal Original_Stepped As Integer) As Integer
            If (Original_Bottom_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Bottom_Tumbler")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Bottom_Tumbler,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Bowl,Single)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Stepped,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Bottom_Tumbler As String, ByVal Bowl As Single, ByVal Stepped As Integer) As Integer
            If (Bottom_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Bottom_Tumbler")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Bottom_Tumbler,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Bowl,Single)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Stepped,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Bottom_Tumbler As String, ByVal Bowl As Single, ByVal Stepped As Integer, ByVal Original_Bottom_Tumbler As String, ByVal Original_Bowl As Single, ByVal Original_Stepped As Integer) As Integer
            If (Bottom_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Bottom_Tumbler")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Bottom_Tumbler,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Bowl,Single)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Stepped,Integer)
            If (Original_Bottom_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Bottom_Tumbler")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_Bottom_Tumbler,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_Bowl,Single)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Stepped,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Bowl As Single, ByVal Stepped As Integer, ByVal Original_Bottom_Tumbler As String, ByVal Original_Bowl As Single, ByVal Original_Stepped As Integer) As Integer
            Return Me.Update(Original_Bottom_Tumbler, Bowl, Stepped, Original_Bottom_Tumbler, Original_Bowl, Original_Stepped)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBowl(ByVal Bottom_Tumbler As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(2)
            If (Bottom_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Bottom_Tumbler")
            Else
                command.Parameters(0).Value = CType(Bottom_Tumbler,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetStepped(ByVal Bottom_Tumbler As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(3)
            If (Bottom_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Bottom_Tumbler")
            Else
                command.Parameters(0).Value = CType(Bottom_Tumbler,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BushingTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Bushing"
            tableMapping.ColumnMappings.Add("Bushing", "Bushing")
            tableMapping.ColumnMappings.Add("Tooling Code", "Tooling Code")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Bushing` WHERE ((`Bushing` = ?) AND ((? = 1 AND `Tooling Code` IS NU"& _ 
                "LL) OR (`Tooling Code` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bushing", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bushing", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Tooling_Code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Code", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Code", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Code", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Bushing` (`Bushing`, `Tooling Code`) VALUES (?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bushing", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bushing", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Code", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Bushing` SET `Bushing` = ?, `Tooling Code` = ? WHERE ((`Bushing` = ?) AND"& _ 
                " ((? = 1 AND `Tooling Code` IS NULL) OR (`Tooling Code` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bushing", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bushing", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Code", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bushing", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bushing", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Tooling_Code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Code", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Code", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Code", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Bushing, [Tooling Code] FROM Bushing"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT TRIM([Bushing].[Tooling Code]) FROM [Bushing] WHERE ([Bushing].[Bushing] ="& _ 
                " ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bushing", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bushing", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.BushingDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.BushingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.BushingDataTable = New NCLRecipeDataSet.BushingDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.BushingDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Bushing")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Bushing As String, ByVal Original_Tooling_Code As String) As Integer
            If (Original_Bushing Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Bushing")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Bushing,String)
            End If
            If (Original_Tooling_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Code")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Tooling_Code,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Bushing As String, ByVal Tooling_Code As String) As Integer
            If (Bushing Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Bushing")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Bushing,String)
            End If
            If (Tooling_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Code")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Tooling_Code,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Bushing As String, ByVal Tooling_Code As String, ByVal Original_Bushing As String, ByVal Original_Tooling_Code As String) As Integer
            If (Bushing Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Bushing")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Bushing,String)
            End If
            If (Tooling_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Tooling_Code,String)
            End If
            If (Original_Bushing Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Bushing")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_Bushing,String)
            End If
            If (Original_Tooling_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_Tooling_Code,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Tooling_Code As String, ByVal Original_Bushing As String, ByVal Original_Tooling_Code As String) As Integer
            Return Me.Update(Original_Bushing, Tooling_Code, Original_Bushing, Original_Tooling_Code)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetToolingCode(ByVal Bushing As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(1)
            If (Bushing Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Bushing")
            Else
                command.Parameters(0).Value = CType(Bushing,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ChartsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Charts"
            tableMapping.ColumnMappings.Add("Chart Name", "Chart Name")
            tableMapping.ColumnMappings.Add("Part Type", "Part Type")
            tableMapping.ColumnMappings.Add("KeyCode 1", "KeyCode 1")
            tableMapping.ColumnMappings.Add("Part #1", "Part #1")
            tableMapping.ColumnMappings.Add("KeyCode 2", "KeyCode 2")
            tableMapping.ColumnMappings.Add("Part #2", "Part #2")
            tableMapping.ColumnMappings.Add("KeyCode 3", "KeyCode 3")
            tableMapping.ColumnMappings.Add("Part #3", "Part #3")
            tableMapping.ColumnMappings.Add("KeyCode 4", "KeyCode 4")
            tableMapping.ColumnMappings.Add("Part #4", "Part #4")
            tableMapping.ColumnMappings.Add("KeyCode 5", "KeyCode 5")
            tableMapping.ColumnMappings.Add("Part #5", "Part #5")
            tableMapping.ColumnMappings.Add("KeyCode 6", "KeyCode 6")
            tableMapping.ColumnMappings.Add("Part #6", "Part #6")
            tableMapping.ColumnMappings.Add("KeyCode 7", "KeyCode 7")
            tableMapping.ColumnMappings.Add("Part #7", "Part #7")
            tableMapping.ColumnMappings.Add("KeyCode 8", "KeyCode 8")
            tableMapping.ColumnMappings.Add("Part #8", "Part #8")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Charts` WHERE ((`Chart Name` = ?) AND ((? = 1 AND `Part Type` IS NUL"& _ 
                "L) OR (`Part Type` = ?)) AND ((? = 1 AND `KeyCode 1` IS NULL) OR (`KeyCode 1` = "& _ 
                "?)) AND ((? = 1 AND `Part #1` IS NULL) OR (`Part #1` = ?)) AND ((? = 1 AND `KeyC"& _ 
                "ode 2` IS NULL) OR (`KeyCode 2` = ?)) AND ((? = 1 AND `Part #2` IS NULL) OR (`Pa"& _ 
                "rt #2` = ?)) AND ((? = 1 AND `KeyCode 3` IS NULL) OR (`KeyCode 3` = ?)) AND ((? "& _ 
                "= 1 AND `Part #3` IS NULL) OR (`Part #3` = ?)) AND ((? = 1 AND `KeyCode 4` IS NU"& _ 
                "LL) OR (`KeyCode 4` = ?)) AND ((? = 1 AND `Part #4` IS NULL) OR (`Part #4` = ?))"& _ 
                " AND ((? = 1 AND `KeyCode 5` IS NULL) OR (`KeyCode 5` = ?)) AND ((? = 1 AND `Par"& _ 
                "t #5` IS NULL) OR (`Part #5` = ?)) AND ((? = 1 AND `KeyCode 6` IS NULL) OR (`Key"& _ 
                "Code 6` = ?)) AND ((? = 1 AND `Part #6` IS NULL) OR (`Part #6` = ?)) AND ((? = 1"& _ 
                " AND `KeyCode 7` IS NULL) OR (`KeyCode 7` = ?)) AND ((? = 1 AND `Part #7` IS NUL"& _ 
                "L) OR (`Part #7` = ?)) AND ((? = 1 AND `KeyCode 8` IS NULL) OR (`KeyCode 8` = ?)"& _ 
                ") AND ((? = 1 AND `Part #8` IS NULL) OR (`Part #8` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Chart_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_KeyCode_1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_KeyCode_1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_#1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_#1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_KeyCode_2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_KeyCode_2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_#2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_#2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_KeyCode_3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_KeyCode_3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_#3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_#3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_KeyCode_4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_KeyCode_4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_#4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_#4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_KeyCode_5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_KeyCode_5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_#5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_#5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_KeyCode_6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_KeyCode_6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_#6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_#6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_KeyCode_7", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 7", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_KeyCode_7", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 7", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_#7", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #7", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_#7", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #7", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_KeyCode_8", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 8", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_KeyCode_8", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 8", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_#8", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #8", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_#8", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #8", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Charts` (`Chart Name`, `Part Type`, `KeyCode 1`, `Part #1`, `KeyCode"& _ 
                " 2`, `Part #2`, `KeyCode 3`, `Part #3`, `KeyCode 4`, `Part #4`, `KeyCode 5`, `Pa"& _ 
                "rt #5`, `KeyCode 6`, `Part #6`, `KeyCode 7`, `Part #7`, `KeyCode 8`, `Part #8`) "& _ 
                "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("KeyCode_1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_#1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("KeyCode_2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_#2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("KeyCode_3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_#3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("KeyCode_4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_#4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("KeyCode_5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_#5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("KeyCode_6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_#6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("KeyCode_7", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 7", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_#7", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #7", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("KeyCode_8", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 8", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_#8", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #8", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Charts` SET `Chart Name` = ?, `Part Type` = ?, `KeyCode 1` = ?, `Part #1`"& _ 
                " = ?, `KeyCode 2` = ?, `Part #2` = ?, `KeyCode 3` = ?, `Part #3` = ?, `KeyCode 4"& _ 
                "` = ?, `Part #4` = ?, `KeyCode 5` = ?, `Part #5` = ?, `KeyCode 6` = ?, `Part #6`"& _ 
                " = ?, `KeyCode 7` = ?, `Part #7` = ?, `KeyCode 8` = ?, `Part #8` = ? WHERE ((`Ch"& _ 
                "art Name` = ?) AND ((? = 1 AND `Part Type` IS NULL) OR (`Part Type` = ?)) AND (("& _ 
                "? = 1 AND `KeyCode 1` IS NULL) OR (`KeyCode 1` = ?)) AND ((? = 1 AND `Part #1` I"& _ 
                "S NULL) OR (`Part #1` = ?)) AND ((? = 1 AND `KeyCode 2` IS NULL) OR (`KeyCode 2`"& _ 
                " = ?)) AND ((? = 1 AND `Part #2` IS NULL) OR (`Part #2` = ?)) AND ((? = 1 AND `K"& _ 
                "eyCode 3` IS NULL) OR (`KeyCode 3` = ?)) AND ((? = 1 AND `Part #3` IS NULL) OR ("& _ 
                "`Part #3` = ?)) AND ((? = 1 AND `KeyCode 4` IS NULL) OR (`KeyCode 4` = ?)) AND ("& _ 
                "(? = 1 AND `Part #4` IS NULL) OR (`Part #4` = ?)) AND ((? = 1 AND `KeyCode 5` IS"& _ 
                " NULL) OR (`KeyCode 5` = ?)) AND ((? = 1 AND `Part #5` IS NULL) OR (`Part #5` = "& _ 
                "?)) AND ((? = 1 AND `KeyCode 6` IS NULL) OR (`KeyCode 6` = ?)) AND ((? = 1 AND `"& _ 
                "Part #6` IS NULL) OR (`Part #6` = ?)) AND ((? = 1 AND `KeyCode 7` IS NULL) OR (`"& _ 
                "KeyCode 7` = ?)) AND ((? = 1 AND `Part #7` IS NULL) OR (`Part #7` = ?)) AND ((? "& _ 
                "= 1 AND `KeyCode 8` IS NULL) OR (`KeyCode 8` = ?)) AND ((? = 1 AND `Part #8` IS "& _ 
                "NULL) OR (`Part #8` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("KeyCode_1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_#1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("KeyCode_2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_#2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("KeyCode_3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_#3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("KeyCode_4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_#4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("KeyCode_5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_#5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("KeyCode_6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_#6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("KeyCode_7", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 7", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_#7", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #7", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("KeyCode_8", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 8", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Part_#8", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #8", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Chart_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_KeyCode_1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_KeyCode_1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_#1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_#1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_KeyCode_2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_KeyCode_2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_#2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_#2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_KeyCode_3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_KeyCode_3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_#3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_#3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_KeyCode_4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_KeyCode_4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_#4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_#4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_KeyCode_5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_KeyCode_5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_#5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_#5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_KeyCode_6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_KeyCode_6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_#6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_#6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_KeyCode_7", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 7", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_KeyCode_7", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 7", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_#7", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #7", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_#7", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #7", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_KeyCode_8", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 8", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_KeyCode_8", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "KeyCode 8", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Part_#8", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #8", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Part_#8", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Part #8", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(17) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT [Chart Name], [Part Type], [KeyCode 1], [Part #1], [KeyCode 2], [Part #2],"& _ 
                " [KeyCode 3], [Part #3], [KeyCode 4], [Part #4], [KeyCode 5], [Part #5], [KeyCod"& _ 
                "e 6], [Part #6], [KeyCode 7], [Part #7], [KeyCode 8], [Part #8] FROM Charts"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT [Chart Name], [Part Type], [KeyCode 1], [Part #1], [KeyCode 2], [Part #2],"& _ 
                " [KeyCode 3], [Part #3], [KeyCode 4], [Part #4], [KeyCode 5], [Part #5], [KeyCod"& _ 
                "e 6], [Part #6], [KeyCode 7], [Part #7], [KeyCode 8], [Part #8] FROM Charts wher"& _ 
                "e [Chart Name] = ?"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT [Keycode 1] FROM Charts where [Chart Name] = ?"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT [Keycode 2] FROM Charts where [Chart Name] = ?"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT [Keycode 3] FROM Charts where [Chart Name] = ?"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(5) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT [Keycode 4] FROM Charts where [Chart Name] = ?"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT [Keycode 5] FROM Charts where [Chart Name] = ?"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(7) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT [Keycode 6] FROM Charts where [Chart Name] = ?"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(8) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT [Keycode 7] FROM Charts where [Chart Name] = ?"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(9) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT [Keycode 8] FROM Charts where [Chart Name] = ?"
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(10) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(10).Connection = Me.Connection
            Me._commandCollection(10).CommandText = "SELECT [Part #1] FROM Charts where [Chart Name] = ?"
            Me._commandCollection(10).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(11) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(11).Connection = Me.Connection
            Me._commandCollection(11).CommandText = "SELECT [Part #2] FROM Charts where [Chart Name] = ?"
            Me._commandCollection(11).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(12) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(12).Connection = Me.Connection
            Me._commandCollection(12).CommandText = "SELECT [Part #3] FROM Charts where [Chart Name] = ?"
            Me._commandCollection(12).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(13) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(13).Connection = Me.Connection
            Me._commandCollection(13).CommandText = "SELECT [Part #4] FROM Charts where [Chart Name] = ?"
            Me._commandCollection(13).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(14) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(14).Connection = Me.Connection
            Me._commandCollection(14).CommandText = "SELECT [Part #5] FROM Charts where [Chart Name] = ?"
            Me._commandCollection(14).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(15) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(15).Connection = Me.Connection
            Me._commandCollection(15).CommandText = "SELECT [Part #6] FROM Charts where [Chart Name] = ?"
            Me._commandCollection(15).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(16) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(16).Connection = Me.Connection
            Me._commandCollection(16).CommandText = "SELECT [Part #7] FROM Charts where [Chart Name] = ?"
            Me._commandCollection(16).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(17) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(17).Connection = Me.Connection
            Me._commandCollection(17).CommandText = "SELECT [Part #8] FROM Charts where [Chart Name] = ?"
            Me._commandCollection(17).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(17).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chart_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chart Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.ChartsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.ChartsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.ChartsDataTable = New NCLRecipeDataSet.ChartsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetChartRow(ByVal Chart_Name As String) As NCLRecipeDataSet.ChartsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim dataTable As NCLRecipeDataSet.ChartsDataTable = New NCLRecipeDataSet.ChartsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.ChartsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Charts")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_Chart_Name As String,  _
                    ByVal Original_Part_Type As String,  _
                    ByVal Original_KeyCode_1 As String,  _
                    ByVal _Original_Part__1 As String,  _
                    ByVal Original_KeyCode_2 As String,  _
                    ByVal _Original_Part__2 As String,  _
                    ByVal Original_KeyCode_3 As String,  _
                    ByVal _Original_Part__3 As String,  _
                    ByVal Original_KeyCode_4 As String,  _
                    ByVal _Original_Part__4 As String,  _
                    ByVal Original_KeyCode_5 As String,  _
                    ByVal _Original_Part__5 As String,  _
                    ByVal Original_KeyCode_6 As String,  _
                    ByVal _Original_Part__6 As String,  _
                    ByVal Original_KeyCode_7 As String,  _
                    ByVal _Original_Part__7 As String,  _
                    ByVal Original_KeyCode_8 As String,  _
                    ByVal _Original_Part__8 As String) As Integer
            If (Original_Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Chart_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Chart_Name,String)
            End If
            If (Original_Part_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Part_Type")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Part_Type,String)
            End If
            If (Original_KeyCode_1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_KeyCode_1,String)
            End If
            If (_Original_Part__1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(_Original_Part__1,String)
            End If
            If (Original_KeyCode_2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_KeyCode_2,String)
            End If
            If (_Original_Part__2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(_Original_Part__2,String)
            End If
            If (Original_KeyCode_3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_KeyCode_3,String)
            End If
            If (_Original_Part__3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(_Original_Part__3,String)
            End If
            If (Original_KeyCode_4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_KeyCode_4,String)
            End If
            If (_Original_Part__4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(_Original_Part__4,String)
            End If
            If (Original_KeyCode_5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_KeyCode_5,String)
            End If
            If (_Original_Part__5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(_Original_Part__5,String)
            End If
            If (Original_KeyCode_6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_KeyCode_6,String)
            End If
            If (_Original_Part__6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(_Original_Part__6,String)
            End If
            If (Original_KeyCode_7 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_KeyCode_7,String)
            End If
            If (_Original_Part__7 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(_Original_Part__7,String)
            End If
            If (Original_KeyCode_8 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_KeyCode_8,String)
            End If
            If (_Original_Part__8 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(_Original_Part__8,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Chart_Name As String,  _
                    ByVal Part_Type As String,  _
                    ByVal KeyCode_1 As String,  _
                    ByVal _Part__1 As String,  _
                    ByVal KeyCode_2 As String,  _
                    ByVal _Part__2 As String,  _
                    ByVal KeyCode_3 As String,  _
                    ByVal _Part__3 As String,  _
                    ByVal KeyCode_4 As String,  _
                    ByVal _Part__4 As String,  _
                    ByVal KeyCode_5 As String,  _
                    ByVal _Part__5 As String,  _
                    ByVal KeyCode_6 As String,  _
                    ByVal _Part__6 As String,  _
                    ByVal KeyCode_7 As String,  _
                    ByVal _Part__7 As String,  _
                    ByVal KeyCode_8 As String,  _
                    ByVal _Part__8 As String) As Integer
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Chart_Name,String)
            End If
            If (Part_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Part_Type")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Part_Type,String)
            End If
            If (KeyCode_1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(KeyCode_1,String)
            End If
            If (_Part__1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(_Part__1,String)
            End If
            If (KeyCode_2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(KeyCode_2,String)
            End If
            If (_Part__2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(_Part__2,String)
            End If
            If (KeyCode_3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(KeyCode_3,String)
            End If
            If (_Part__3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(_Part__3,String)
            End If
            If (KeyCode_4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(KeyCode_4,String)
            End If
            If (_Part__4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(_Part__4,String)
            End If
            If (KeyCode_5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(KeyCode_5,String)
            End If
            If (_Part__5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(_Part__5,String)
            End If
            If (KeyCode_6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(KeyCode_6,String)
            End If
            If (_Part__6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(_Part__6,String)
            End If
            If (KeyCode_7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(KeyCode_7,String)
            End If
            If (_Part__7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(_Part__7,String)
            End If
            If (KeyCode_8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(KeyCode_8,String)
            End If
            If (_Part__8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(_Part__8,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Chart_Name As String,  _
                    ByVal Part_Type As String,  _
                    ByVal KeyCode_1 As String,  _
                    ByVal _Part__1 As String,  _
                    ByVal KeyCode_2 As String,  _
                    ByVal _Part__2 As String,  _
                    ByVal KeyCode_3 As String,  _
                    ByVal _Part__3 As String,  _
                    ByVal KeyCode_4 As String,  _
                    ByVal _Part__4 As String,  _
                    ByVal KeyCode_5 As String,  _
                    ByVal _Part__5 As String,  _
                    ByVal KeyCode_6 As String,  _
                    ByVal _Part__6 As String,  _
                    ByVal KeyCode_7 As String,  _
                    ByVal _Part__7 As String,  _
                    ByVal KeyCode_8 As String,  _
                    ByVal _Part__8 As String,  _
                    ByVal Original_Chart_Name As String,  _
                    ByVal Original_Part_Type As String,  _
                    ByVal Original_KeyCode_1 As String,  _
                    ByVal _Original_Part__1 As String,  _
                    ByVal Original_KeyCode_2 As String,  _
                    ByVal _Original_Part__2 As String,  _
                    ByVal Original_KeyCode_3 As String,  _
                    ByVal _Original_Part__3 As String,  _
                    ByVal Original_KeyCode_4 As String,  _
                    ByVal _Original_Part__4 As String,  _
                    ByVal Original_KeyCode_5 As String,  _
                    ByVal _Original_Part__5 As String,  _
                    ByVal Original_KeyCode_6 As String,  _
                    ByVal _Original_Part__6 As String,  _
                    ByVal Original_KeyCode_7 As String,  _
                    ByVal _Original_Part__7 As String,  _
                    ByVal Original_KeyCode_8 As String,  _
                    ByVal _Original_Part__8 As String) As Integer
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Chart_Name,String)
            End If
            If (Part_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Part_Type")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Part_Type,String)
            End If
            If (KeyCode_1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(KeyCode_1,String)
            End If
            If (_Part__1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(_Part__1,String)
            End If
            If (KeyCode_2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(KeyCode_2,String)
            End If
            If (_Part__2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(_Part__2,String)
            End If
            If (KeyCode_3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(KeyCode_3,String)
            End If
            If (_Part__3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(_Part__3,String)
            End If
            If (KeyCode_4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(KeyCode_4,String)
            End If
            If (_Part__4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(_Part__4,String)
            End If
            If (KeyCode_5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(KeyCode_5,String)
            End If
            If (_Part__5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(_Part__5,String)
            End If
            If (KeyCode_6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(KeyCode_6,String)
            End If
            If (_Part__6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(_Part__6,String)
            End If
            If (KeyCode_7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(KeyCode_7,String)
            End If
            If (_Part__7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(_Part__7,String)
            End If
            If (KeyCode_8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(KeyCode_8,String)
            End If
            If (_Part__8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(_Part__8,String)
            End If
            If (Original_Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Chart_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_Chart_Name,String)
            End If
            If (Original_Part_Type Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Part_Type")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_Part_Type,String)
            End If
            If (Original_KeyCode_1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_KeyCode_1,String)
            End If
            If (_Original_Part__1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(_Original_Part__1,String)
            End If
            If (Original_KeyCode_2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_KeyCode_2,String)
            End If
            If (_Original_Part__2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(_Original_Part__2,String)
            End If
            If (Original_KeyCode_3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_KeyCode_3,String)
            End If
            If (_Original_Part__3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(_Original_Part__3,String)
            End If
            If (Original_KeyCode_4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_KeyCode_4,String)
            End If
            If (_Original_Part__4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(_Original_Part__4,String)
            End If
            If (Original_KeyCode_5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_KeyCode_5,String)
            End If
            If (_Original_Part__5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(_Original_Part__5,String)
            End If
            If (Original_KeyCode_6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_KeyCode_6,String)
            End If
            If (_Original_Part__6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(_Original_Part__6,String)
            End If
            If (Original_KeyCode_7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_KeyCode_7,String)
            End If
            If (_Original_Part__7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(_Original_Part__7,String)
            End If
            If (Original_KeyCode_8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_KeyCode_8,String)
            End If
            If (_Original_Part__8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(_Original_Part__8,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Part_Type As String,  _
                    ByVal KeyCode_1 As String,  _
                    ByVal _Part__1 As String,  _
                    ByVal KeyCode_2 As String,  _
                    ByVal _Part__2 As String,  _
                    ByVal KeyCode_3 As String,  _
                    ByVal _Part__3 As String,  _
                    ByVal KeyCode_4 As String,  _
                    ByVal _Part__4 As String,  _
                    ByVal KeyCode_5 As String,  _
                    ByVal _Part__5 As String,  _
                    ByVal KeyCode_6 As String,  _
                    ByVal _Part__6 As String,  _
                    ByVal KeyCode_7 As String,  _
                    ByVal _Part__7 As String,  _
                    ByVal KeyCode_8 As String,  _
                    ByVal _Part__8 As String,  _
                    ByVal Original_Chart_Name As String,  _
                    ByVal Original_Part_Type As String,  _
                    ByVal Original_KeyCode_1 As String,  _
                    ByVal _Original_Part__1 As String,  _
                    ByVal Original_KeyCode_2 As String,  _
                    ByVal _Original_Part__2 As String,  _
                    ByVal Original_KeyCode_3 As String,  _
                    ByVal _Original_Part__3 As String,  _
                    ByVal Original_KeyCode_4 As String,  _
                    ByVal _Original_Part__4 As String,  _
                    ByVal Original_KeyCode_5 As String,  _
                    ByVal _Original_Part__5 As String,  _
                    ByVal Original_KeyCode_6 As String,  _
                    ByVal _Original_Part__6 As String,  _
                    ByVal Original_KeyCode_7 As String,  _
                    ByVal _Original_Part__7 As String,  _
                    ByVal Original_KeyCode_8 As String,  _
                    ByVal _Original_Part__8 As String) As Integer
            Return Me.Update(Original_Chart_Name, Part_Type, KeyCode_1, _Part__1, KeyCode_2, _Part__2, KeyCode_3, _Part__3, KeyCode_4, _Part__4, KeyCode_5, _Part__5, KeyCode_6, _Part__6, KeyCode_7, _Part__7, KeyCode_8, _Part__8, Original_Chart_Name, Original_Part_Type, Original_KeyCode_1, _Original_Part__1, Original_KeyCode_2, _Original_Part__2, Original_KeyCode_3, _Original_Part__3, Original_KeyCode_4, _Original_Part__4, Original_KeyCode_5, _Original_Part__5, Original_KeyCode_6, _Original_Part__6, Original_KeyCode_7, _Original_Part__7, Original_KeyCode_8, _Original_Part__8)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetKeycode1(ByVal Chart_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(2)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                command.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetKeycode2(ByVal Chart_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(3)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                command.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetKeycode3(ByVal Chart_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(4)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                command.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetKeycode4(ByVal Chart_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(5)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                command.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetKeycode5(ByVal Chart_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(6)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                command.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetKeycode6(ByVal Chart_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(7)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                command.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetKeycode7(ByVal Chart_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(8)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                command.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetKeycode8(ByVal Chart_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(9)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                command.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetPart1(ByVal Chart_Name As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(10)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                command.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetPart2(ByVal Chart_Name As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(11)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                command.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetPart3(ByVal Chart_Name As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(12)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                command.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetPart4(ByVal Chart_Name As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(13)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                command.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetPart5(ByVal Chart_Name As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(14)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                command.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetPart6(ByVal Chart_Name As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(15)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                command.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetPart7(ByVal Chart_Name As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(16)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                command.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetPart8(ByVal Chart_Name As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(17)
            If (Chart_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Chart_Name")
            Else
                command.Parameters(0).Value = CType(Chart_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Drill_PinTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Drill Pin"
            tableMapping.ColumnMappings.Add("Drill Pin", "Drill Pin")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Drill Pin` WHERE ((`Drill Pin` = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Drill_Pin", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Drill Pin", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Drill Pin` (`Drill Pin`) VALUES (?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Drill_Pin", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Drill Pin", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Drill Pin` SET `Drill Pin` = ? WHERE ((`Drill Pin` = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Drill_Pin", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Drill Pin", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Drill_Pin", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Drill Pin", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT [Drill Pin] FROM [Drill Pin]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.Drill_PinDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.Drill_PinDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.Drill_PinDataTable = New NCLRecipeDataSet.Drill_PinDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.Drill_PinDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Drill Pin")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Drill_Pin As String) As Integer
            If (Original_Drill_Pin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Drill_Pin")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Drill_Pin,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Drill_Pin As String) As Integer
            If (Drill_Pin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Drill_Pin")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Drill_Pin,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Drill_Pin As String, ByVal Original_Drill_Pin As String) As Integer
            If (Drill_Pin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Drill_Pin")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Drill_Pin,String)
            End If
            If (Original_Drill_Pin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Drill_Pin")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_Drill_Pin,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_Drill_Pin As String) As Integer
            Return Me.Update(Original_Drill_Pin, Original_Drill_Pin)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Knurl_PinTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Knurl Pin"
            tableMapping.ColumnMappings.Add("Knurl Pin", "Knurl Pin")
            tableMapping.ColumnMappings.Add("Tooling Code", "Tooling Code")
            tableMapping.ColumnMappings.Add("Bowl", "Bowl")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Knurl Pin` WHERE ((`Knurl Pin` = ?) AND ((? = 1 AND `Tooling Code` I"& _ 
                "S NULL) OR (`Tooling Code` = ?)) AND ((? = 1 AND `Bowl` IS NULL) OR (`Bowl` = ?)"& _ 
                "))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Knurl_Pin", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Knurl Pin", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Tooling_Code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Code", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Code", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Code", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bowl", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Knurl Pin` (`Knurl Pin`, `Tooling Code`, `Bowl`) VALUES (?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Knurl_Pin", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Knurl Pin", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Code", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Knurl Pin` SET `Knurl Pin` = ?, `Tooling Code` = ?, `Bowl` = ? WHERE ((`K"& _ 
                "nurl Pin` = ?) AND ((? = 1 AND `Tooling Code` IS NULL) OR (`Tooling Code` = ?)) "& _ 
                "AND ((? = 1 AND `Bowl` IS NULL) OR (`Bowl` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Knurl_Pin", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Knurl Pin", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Code", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Knurl_Pin", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Knurl Pin", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Tooling_Code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Code", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Code", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Code", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bowl", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT [Knurl Pin], [Tooling Code], Bowl FROM [Knurl Pin]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT TRIM([Knurl Pin].[Bowl]) FROM [Knurl Pin] WHERE ([Knurl Pin].[Knurl Pin] ="& _ 
                " ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Knurl_Pin", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Knurl Pin", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT TRIM([Knurl Pin].[Tooling Code]) FROM [Knurl Pin] WHERE ([Knurl Pin].[Knur"& _ 
                "l Pin] = ?)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Knurl_Pin", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Knurl Pin", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.Knurl_PinDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.Knurl_PinDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.Knurl_PinDataTable = New NCLRecipeDataSet.Knurl_PinDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.Knurl_PinDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Knurl Pin")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Knurl_Pin As String, ByVal Original_Tooling_Code As String, ByVal Original_Bowl As Single) As Integer
            If (Original_Knurl_Pin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Knurl_Pin")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Knurl_Pin,String)
            End If
            If (Original_Tooling_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Code")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Tooling_Code,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Bowl,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Knurl_Pin As String, ByVal Tooling_Code As String, ByVal Bowl As Single) As Integer
            If (Knurl_Pin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Knurl_Pin")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Knurl_Pin,String)
            End If
            If (Tooling_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Code")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Tooling_Code,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Bowl,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Knurl_Pin As String, ByVal Tooling_Code As String, ByVal Bowl As Single, ByVal Original_Knurl_Pin As String, ByVal Original_Tooling_Code As String, ByVal Original_Bowl As Single) As Integer
            If (Knurl_Pin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Knurl_Pin")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Knurl_Pin,String)
            End If
            If (Tooling_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Tooling_Code,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Bowl,Single)
            If (Original_Knurl_Pin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Knurl_Pin")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_Knurl_Pin,String)
            End If
            If (Original_Tooling_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_Tooling_Code,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Bowl,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Tooling_Code As String, ByVal Bowl As Single, ByVal Original_Knurl_Pin As String, ByVal Original_Tooling_Code As String, ByVal Original_Bowl As Single) As Integer
            Return Me.Update(Original_Knurl_Pin, Tooling_Code, Bowl, Original_Knurl_Pin, Original_Tooling_Code, Original_Bowl)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBowl(ByVal Knurl_Pin As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(1)
            If (Knurl_Pin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Knurl_Pin")
            Else
                command.Parameters(0).Value = CType(Knurl_Pin,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetToolingCode(ByVal Knurl_Pin As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(2)
            If (Knurl_Pin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Knurl_Pin")
            Else
                command.Parameters(0).Value = CType(Knurl_Pin,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Mid_TumblerTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Mid Tumbler"
            tableMapping.ColumnMappings.Add("Mid Tumbler", "Mid Tumbler")
            tableMapping.ColumnMappings.Add("Bowl", "Bowl")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Mid Tumbler` WHERE ((`Mid Tumbler` = ?) AND ((? = 1 AND `Bowl` IS NU"& _ 
                "LL) OR (`Bowl` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid_Tumbler", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid Tumbler", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bowl", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Mid Tumbler` (`Mid Tumbler`, `Bowl`) VALUES (?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid_Tumbler", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid Tumbler", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Mid Tumbler` SET `Mid Tumbler` = ?, `Bowl` = ? WHERE ((`Mid Tumbler` = ?)"& _ 
                " AND ((? = 1 AND `Bowl` IS NULL) OR (`Bowl` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid_Tumbler", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid Tumbler", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid_Tumbler", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid Tumbler", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bowl", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT [Mid Tumbler], Bowl FROM [Mid Tumbler]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT TRIM([Mid Tumbler].[Bowl]) FROM [Mid Tumbler] WHERE ([Mid Tumbler].[Mid Tu"& _ 
                "mbler] = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid_Tumbler", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid Tumbler", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.Mid_TumblerDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.Mid_TumblerDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.Mid_TumblerDataTable = New NCLRecipeDataSet.Mid_TumblerDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.Mid_TumblerDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Mid Tumbler")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Mid_Tumbler As String, ByVal Original_Bowl As Single) As Integer
            If (Original_Mid_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Mid_Tumbler")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Mid_Tumbler,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Bowl,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Mid_Tumbler As String, ByVal Bowl As Single) As Integer
            If (Mid_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Mid_Tumbler")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Mid_Tumbler,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Bowl,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Mid_Tumbler As String, ByVal Bowl As Single, ByVal Original_Mid_Tumbler As String, ByVal Original_Bowl As Single) As Integer
            If (Mid_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Mid_Tumbler")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Mid_Tumbler,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Bowl,Single)
            If (Original_Mid_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Mid_Tumbler")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_Mid_Tumbler,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_Bowl,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Bowl As Single, ByVal Original_Mid_Tumbler As String, ByVal Original_Bowl As Single) As Integer
            Return Me.Update(Original_Mid_Tumbler, Bowl, Original_Mid_Tumbler, Original_Bowl)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBowl(ByVal Mid_Tumbler As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(1)
            If (Mid_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Mid_Tumbler")
            Else
                command.Parameters(0).Value = CType(Mid_Tumbler,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RecipeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Recipe"
            tableMapping.ColumnMappings.Add("Recipe Name", "Recipe Name")
            tableMapping.ColumnMappings.Add("Lock Family", "Lock Family")
            tableMapping.ColumnMappings.Add("Company Name", "Company Name")
            tableMapping.ColumnMappings.Add("Date", "Date")
            tableMapping.ColumnMappings.Add("Tool Id", "Tool Id")
            tableMapping.ColumnMappings.Add("Sta1 Load Keys", "Sta1 Load Keys")
            tableMapping.ColumnMappings.Add("Sta1 Keyed", "Sta1 Keyed")
            tableMapping.ColumnMappings.Add("Sta1 Unload", "Sta1 Unload")
            tableMapping.ColumnMappings.Add("Sta2 Enable", "Sta2 Enable")
            tableMapping.ColumnMappings.Add("Sta3 Part#", "Sta3 Part#")
            tableMapping.ColumnMappings.Add("Sta4 Enable", "Sta4 Enable")
            tableMapping.ColumnMappings.Add("Sta5 Part#", "Sta5 Part#")
            tableMapping.ColumnMappings.Add("Sta5 Vert Height", "Sta5 Vert Height")
            tableMapping.ColumnMappings.Add("Sta6 Part#", "Sta6 Part#")
            tableMapping.ColumnMappings.Add("Sta7 Part#", "Sta7 Part#")
            tableMapping.ColumnMappings.Add("Sta8 Part#", "Sta8 Part#")
            tableMapping.ColumnMappings.Add("Sta9 Enable", "Sta9 Enable")
            tableMapping.ColumnMappings.Add("Sta9 Tool", "Sta9 Tool")
            tableMapping.ColumnMappings.Add("Sta10 Part#", "Sta10 Part#")
            tableMapping.ColumnMappings.Add("Sta11 Part#", "Sta11 Part#")
            tableMapping.ColumnMappings.Add("Sta12 Part#", "Sta12 Part#")
            tableMapping.ColumnMappings.Add("Sta13 Part#", "Sta13 Part#")
            tableMapping.ColumnMappings.Add("Sta13 Tool", "Sta13 Tool")
            tableMapping.ColumnMappings.Add("Sta14 Enable", "Sta14 Enable")
            tableMapping.ColumnMappings.Add("Sta14 Tool", "Sta14 Tool")
            tableMapping.ColumnMappings.Add("Sta15 Enable", "Sta15 Enable")
            tableMapping.ColumnMappings.Add("Sta15 Insert Angle", "Sta15 Insert Angle")
            tableMapping.ColumnMappings.Add("Sta15 Test Angle", "Sta15 Test Angle")
            tableMapping.ColumnMappings.Add("Sta15 Finish Angle", "Sta15 Finish Angle")
            tableMapping.ColumnMappings.Add("Sta15 Tool", "Sta15 Tool")
            tableMapping.ColumnMappings.Add("Sta16 Part#", "Sta16 Part#")
            tableMapping.ColumnMappings.Add("Sta16 BackSupport", "Sta16 BackSupport")
            tableMapping.ColumnMappings.Add("Sta17 Enable", "Sta17 Enable")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Recipe` WHERE ((`Recipe Name` = ?) AND ((? = 1 AND `Lock Family` IS "& _ 
                "NULL) OR (`Lock Family` = ?)) AND ((? = 1 AND `Company Name` IS NULL) OR (`Compa"& _ 
                "ny Name` = ?)) AND ((? = 1 AND `Date` IS NULL) OR (`Date` = ?)) AND ((? = 1 AND "& _ 
                "`Tool Id` IS NULL) OR (`Tool Id` = ?)) AND ((? = 1 AND `Sta1 Load Keys` IS NULL)"& _ 
                " OR (`Sta1 Load Keys` = ?)) AND ((? = 1 AND `Sta1 Keyed` IS NULL) OR (`Sta1 Keye"& _ 
                "d` = ?)) AND ((? = 1 AND `Sta1 Unload` IS NULL) OR (`Sta1 Unload` = ?)) AND ((? "& _ 
                "= 1 AND `Sta2 Enable` IS NULL) OR (`Sta2 Enable` = ?)) AND ((? = 1 AND `Sta3 Par"& _ 
                "t#` IS NULL) OR (`Sta3 Part#` = ?)) AND ((? = 1 AND `Sta4 Enable` IS NULL) OR (`"& _ 
                "Sta4 Enable` = ?)) AND ((? = 1 AND `Sta5 Part#` IS NULL) OR (`Sta5 Part#` = ?)) "& _ 
                "AND ((? = 1 AND `Sta5 Vert Height` IS NULL) OR (`Sta5 Vert Height` = ?)) AND ((?"& _ 
                " = 1 AND `Sta6 Part#` IS NULL) OR (`Sta6 Part#` = ?)) AND ((? = 1 AND `Sta7 Part"& _ 
                "#` IS NULL) OR (`Sta7 Part#` = ?)) AND ((? = 1 AND `Sta8 Part#` IS NULL) OR (`St"& _ 
                "a8 Part#` = ?)) AND ((? = 1 AND `Sta9 Enable` IS NULL) OR (`Sta9 Enable` = ?)) A"& _ 
                "ND ((? = 1 AND `Sta9 Tool` IS NULL) OR (`Sta9 Tool` = ?)) AND ((? = 1 AND `Sta10"& _ 
                " Part#` IS NULL) OR (`Sta10 Part#` = ?)) AND ((? = 1 AND `Sta11 Part#` IS NULL) "& _ 
                "OR (`Sta11 Part#` = ?)) AND ((? = 1 AND `Sta12 Part#` IS NULL) OR (`Sta12 Part#`"& _ 
                " = ?)) AND ((? = 1 AND `Sta13 Part#` IS NULL) OR (`Sta13 Part#` = ?)) AND ((? = "& _ 
                "1 AND `Sta13 Tool` IS NULL) OR (`Sta13 Tool` = ?)) AND ((? = 1 AND `Sta14 Enable"& _ 
                "` IS NULL) OR (`Sta14 Enable` = ?)) AND ((? = 1 AND `Sta14 Tool` IS NULL) OR (`S"& _ 
                "ta14 Tool` = ?)) AND ((? = 1 AND `Sta15 Enable` IS NULL) OR (`Sta15 Enable` = ?)"& _ 
                ") AND ((? = 1 AND `Sta15 Insert Angle` IS NULL) OR (`Sta15 Insert Angle` = ?)) A"& _ 
                "ND ((? = 1 AND `Sta15 Test Angle` IS NULL) OR (`Sta15 Test Angle` = ?)) AND ((? "& _ 
                "= 1 AND `Sta15 Finish Angle` IS NULL) OR (`Sta15 Finish Angle` = ?)) AND ((? = 1"& _ 
                " AND `Sta15 Tool` IS NULL) OR (`Sta15 Tool` = ?)) AND ((? = 1 AND `Sta16 Part#` "& _ 
                "IS NULL) OR (`Sta16 Part#` = ?)) AND ((? = 1 AND `Sta16 BackSupport` IS NULL) OR"& _ 
                " (`Sta16 BackSupport` = ?)) AND ((? = 1 AND `Sta17 Enable` IS NULL) OR (`Sta17 E"& _ 
                "nable` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Recipe_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Lock_Family", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Lock Family", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Lock_Family", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Lock Family", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Company_Name", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Company Name", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Company_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Company Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Date", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Date", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Date", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Date", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Tool_Id", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tool Id", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tool_Id", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tool Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta1_Load_Keys", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Load Keys", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta1_Load_Keys", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Load Keys", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta1_Keyed", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Keyed", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta1_Keyed", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Keyed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta1_Unload", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Unload", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta1_Unload", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Unload", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta2_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta2 Enable", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta2_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta2 Enable", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta3_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta3 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta3_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta3 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta4_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta4 Enable", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta4_Enable", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta4 Enable", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta5_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta5 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta5_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta5 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta5_Vert_Height", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta5 Vert Height", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta5_Vert_Height", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta5 Vert Height", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta6_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta6 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta6_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta6 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta7_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta7 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta7_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta7 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta8_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta8 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta8_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta8 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta9_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta9 Enable", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta9_Enable", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta9 Enable", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta9_Tool", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta9 Tool", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta9_Tool", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta9 Tool", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta10_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta10 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta10_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta10 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta11_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta11 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta11_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta11 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta12_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta12 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta12_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta12 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta13_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta13 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta13_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta13 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta13_Tool", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta13 Tool", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta13_Tool", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta13 Tool", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta14_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta14 Enable", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta14_Enable", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta14 Enable", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta14_Tool", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta14 Tool", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta14_Tool", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta14 Tool", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta15_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Enable", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta15_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Enable", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta15_Insert_Angle", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Insert Angle", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta15_Insert_Angle", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Insert Angle", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta15_Test_Angle", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Test Angle", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta15_Test_Angle", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Test Angle", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta15_Finish_Angle", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Finish Angle", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta15_Finish_Angle", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Finish Angle", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta15_Tool", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Tool", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta15_Tool", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Tool", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta16_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta16 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta16_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta16 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta16_BackSupport", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta16 BackSupport", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta16_BackSupport", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta16 BackSupport", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta17_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta17 Enable", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta17_Enable", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta17 Enable", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Recipe` (`Recipe Name`, `Lock Family`, `Company Name`, `Date`, `Tool"& _ 
                " Id`, `Sta1 Load Keys`, `Sta1 Keyed`, `Sta1 Unload`, `Sta2 Enable`, `Sta3 Part#`"& _ 
                ", `Sta4 Enable`, `Sta5 Part#`, `Sta5 Vert Height`, `Sta6 Part#`, `Sta7 Part#`, `"& _ 
                "Sta8 Part#`, `Sta9 Enable`, `Sta9 Tool`, `Sta10 Part#`, `Sta11 Part#`, `Sta12 Pa"& _ 
                "rt#`, `Sta13 Part#`, `Sta13 Tool`, `Sta14 Enable`, `Sta14 Tool`, `Sta15 Enable`,"& _ 
                " `Sta15 Insert Angle`, `Sta15 Test Angle`, `Sta15 Finish Angle`, `Sta15 Tool`, `"& _ 
                "Sta16 Part#`, `Sta16 BackSupport`, `Sta17 Enable`) VALUES (?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Lock_Family", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Lock Family", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Company_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Company Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Date", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Date", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tool_Id", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tool Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta1_Load_Keys", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Load Keys", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta1_Keyed", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Keyed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta1_Unload", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Unload", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta2_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta2 Enable", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta3_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta3 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta4_Enable", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta4 Enable", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta5_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta5 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta5_Vert_Height", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta5 Vert Height", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta6_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta6 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta7_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta7 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta8_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta8 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta9_Enable", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta9 Enable", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta9_Tool", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta9 Tool", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta10_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta10 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta11_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta11 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta12_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta12 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta13_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta13 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta13_Tool", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta13 Tool", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta14_Enable", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta14 Enable", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta14_Tool", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta14 Tool", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta15_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Enable", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta15_Insert_Angle", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Insert Angle", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta15_Test_Angle", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Test Angle", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta15_Finish_Angle", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Finish Angle", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta15_Tool", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Tool", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta16_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta16 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta16_BackSupport", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta16 BackSupport", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta17_Enable", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta17 Enable", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Recipe` SET `Recipe Name` = ?, `Lock Family` = ?, `Company Name` = ?, `Da"& _ 
                "te` = ?, `Tool Id` = ?, `Sta1 Load Keys` = ?, `Sta1 Keyed` = ?, `Sta1 Unload` = "& _ 
                "?, `Sta2 Enable` = ?, `Sta3 Part#` = ?, `Sta4 Enable` = ?, `Sta5 Part#` = ?, `St"& _ 
                "a5 Vert Height` = ?, `Sta6 Part#` = ?, `Sta7 Part#` = ?, `Sta8 Part#` = ?, `Sta9"& _ 
                " Enable` = ?, `Sta9 Tool` = ?, `Sta10 Part#` = ?, `Sta11 Part#` = ?, `Sta12 Part"& _ 
                "#` = ?, `Sta13 Part#` = ?, `Sta13 Tool` = ?, `Sta14 Enable` = ?, `Sta14 Tool` = "& _ 
                "?, `Sta15 Enable` = ?, `Sta15 Insert Angle` = ?, `Sta15 Test Angle` = ?, `Sta15 "& _ 
                "Finish Angle` = ?, `Sta15 Tool` = ?, `Sta16 Part#` = ?, `Sta16 BackSupport` = ?,"& _ 
                " `Sta17 Enable` = ? WHERE ((`Recipe Name` = ?) AND ((? = 1 AND `Lock Family` IS "& _ 
                "NULL) OR (`Lock Family` = ?)) AND ((? = 1 AND `Company Name` IS NULL) OR (`Compa"& _ 
                "ny Name` = ?)) AND ((? = 1 AND `Date` IS NULL) OR (`Date` = ?)) AND ((? = 1 AND "& _ 
                "`Tool Id` IS NULL) OR (`Tool Id` = ?)) AND ((? = 1 AND `Sta1 Load Keys` IS NULL)"& _ 
                " OR (`Sta1 Load Keys` = ?)) AND ((? = 1 AND `Sta1 Keyed` IS NULL) OR (`Sta1 Keye"& _ 
                "d` = ?)) AND ((? = 1 AND `Sta1 Unload` IS NULL) OR (`Sta1 Unload` = ?)) AND ((? "& _ 
                "= 1 AND `Sta2 Enable` IS NULL) OR (`Sta2 Enable` = ?)) AND ((? = 1 AND `Sta3 Par"& _ 
                "t#` IS NULL) OR (`Sta3 Part#` = ?)) AND ((? = 1 AND `Sta4 Enable` IS NULL) OR (`"& _ 
                "Sta4 Enable` = ?)) AND ((? = 1 AND `Sta5 Part#` IS NULL) OR (`Sta5 Part#` = ?)) "& _ 
                "AND ((? = 1 AND `Sta5 Vert Height` IS NULL) OR (`Sta5 Vert Height` = ?)) AND ((?"& _ 
                " = 1 AND `Sta6 Part#` IS NULL) OR (`Sta6 Part#` = ?)) AND ((? = 1 AND `Sta7 Part"& _ 
                "#` IS NULL) OR (`Sta7 Part#` = ?)) AND ((? = 1 AND `Sta8 Part#` IS NULL) OR (`St"& _ 
                "a8 Part#` = ?)) AND ((? = 1 AND `Sta9 Enable` IS NULL) OR (`Sta9 Enable` = ?)) A"& _ 
                "ND ((? = 1 AND `Sta9 Tool` IS NULL) OR (`Sta9 Tool` = ?)) AND ((? = 1 AND `Sta10"& _ 
                " Part#` IS NULL) OR (`Sta10 Part#` = ?)) AND ((? = 1 AND `Sta11 Part#` IS NULL) "& _ 
                "OR (`Sta11 Part#` = ?)) AND ((? = 1 AND `Sta12 Part#` IS NULL) OR (`Sta12 Part#`"& _ 
                " = ?)) AND ((? = 1 AND `Sta13 Part#` IS NULL) OR (`Sta13 Part#` = ?)) AND ((? = "& _ 
                "1 AND `Sta13 Tool` IS NULL) OR (`Sta13 Tool` = ?)) AND ((? = 1 AND `Sta14 Enable"& _ 
                "` IS NULL) OR (`Sta14 Enable` = ?)) AND ((? = 1 AND `Sta14 Tool` IS NULL) OR (`S"& _ 
                "ta14 Tool` = ?)) AND ((? = 1 AND `Sta15 Enable` IS NULL) OR (`Sta15 Enable` = ?)"& _ 
                ") AND ((? = 1 AND `Sta15 Insert Angle` IS NULL) OR (`Sta15 Insert Angle` = ?)) A"& _ 
                "ND ((? = 1 AND `Sta15 Test Angle` IS NULL) OR (`Sta15 Test Angle` = ?)) AND ((? "& _ 
                "= 1 AND `Sta15 Finish Angle` IS NULL) OR (`Sta15 Finish Angle` = ?)) AND ((? = 1"& _ 
                " AND `Sta15 Tool` IS NULL) OR (`Sta15 Tool` = ?)) AND ((? = 1 AND `Sta16 Part#` "& _ 
                "IS NULL) OR (`Sta16 Part#` = ?)) AND ((? = 1 AND `Sta16 BackSupport` IS NULL) OR"& _ 
                " (`Sta16 BackSupport` = ?)) AND ((? = 1 AND `Sta17 Enable` IS NULL) OR (`Sta17 E"& _ 
                "nable` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Lock_Family", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Lock Family", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Company_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Company Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Date", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Date", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tool_Id", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tool Id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta1_Load_Keys", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Load Keys", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta1_Keyed", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Keyed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta1_Unload", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Unload", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta2_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta2 Enable", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta3_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta3 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta4_Enable", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta4 Enable", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta5_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta5 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta5_Vert_Height", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta5 Vert Height", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta6_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta6 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta7_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta7 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta8_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta8 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta9_Enable", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta9 Enable", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta9_Tool", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta9 Tool", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta10_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta10 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta11_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta11 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta12_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta12 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta13_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta13 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta13_Tool", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta13 Tool", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta14_Enable", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta14 Enable", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta14_Tool", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta14 Tool", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta15_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Enable", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta15_Insert_Angle", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Insert Angle", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta15_Test_Angle", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Test Angle", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta15_Finish_Angle", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Finish Angle", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta15_Tool", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Tool", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta16_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta16 Part#", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta16_BackSupport", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta16 BackSupport", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sta17_Enable", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta17 Enable", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Recipe_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Lock_Family", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Lock Family", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Lock_Family", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Lock Family", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Company_Name", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Company Name", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Company_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Company Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Date", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Date", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Date", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Date", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Tool_Id", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tool Id", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tool_Id", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tool Id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta1_Load_Keys", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Load Keys", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta1_Load_Keys", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Load Keys", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta1_Keyed", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Keyed", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta1_Keyed", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Keyed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta1_Unload", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Unload", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta1_Unload", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta1 Unload", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta2_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta2 Enable", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta2_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta2 Enable", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta3_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta3 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta3_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta3 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta4_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta4 Enable", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta4_Enable", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta4 Enable", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta5_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta5 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta5_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta5 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta5_Vert_Height", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta5 Vert Height", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta5_Vert_Height", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta5 Vert Height", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta6_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta6 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta6_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta6 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta7_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta7 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta7_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta7 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta8_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta8 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta8_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta8 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta9_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta9 Enable", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta9_Enable", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta9 Enable", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta9_Tool", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta9 Tool", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta9_Tool", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta9 Tool", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta10_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta10 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta10_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta10 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta11_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta11 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta11_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta11 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta12_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta12 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta12_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta12 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta13_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta13 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta13_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta13 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta13_Tool", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta13 Tool", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta13_Tool", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta13 Tool", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta14_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta14 Enable", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta14_Enable", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta14 Enable", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta14_Tool", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta14 Tool", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta14_Tool", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta14 Tool", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta15_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Enable", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta15_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Enable", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta15_Insert_Angle", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Insert Angle", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta15_Insert_Angle", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Insert Angle", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta15_Test_Angle", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Test Angle", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta15_Test_Angle", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Test Angle", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta15_Finish_Angle", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Finish Angle", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta15_Finish_Angle", Global.System.Data.OleDb.OleDbType.[Double], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Finish Angle", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta15_Tool", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Tool", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta15_Tool", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta15 Tool", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta16_Part#", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta16 Part#", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta16_Part#", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta16 Part#", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta16_BackSupport", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta16 BackSupport", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta16_BackSupport", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta16 BackSupport", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sta17_Enable", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta17 Enable", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sta17_Enable", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sta17 Enable", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(33) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT [Recipe Name], [Lock Family], [Company Name], [Date], [Tool Id], [Sta1 Loa"& _ 
                "d Keys], [Sta1 Keyed], [Sta1 Unload], [Sta2 Enable], [Sta3 Part#], [Sta4 Enable]"& _ 
                ", [Sta5 Part#], [Sta5 Vert Height], [Sta6 Part#], [Sta7 Part#], [Sta8 Part#], [S"& _ 
                "ta9 Enable], [Sta9 Tool], [Sta10 Part#], [Sta11 Part#], [Sta12 Part#], [Sta13 Pa"& _ 
                "rt#], [Sta13 Tool], [Sta14 Enable], [Sta14 Tool], [Sta15 Enable], [Sta15 Insert "& _ 
                "Angle], [Sta15 Test Angle], [Sta15 Finish Angle], [Sta15 Tool], [Sta16 Part#], ["& _ 
                "Sta16 BackSupport], [Sta17 Enable] FROM Recipe"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT [Company Name] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT [Date] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT [Sta1 Load Keys] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT [Lock Family] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(5) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT [Sta10 Part#] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT [Sta11 Part#] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(7) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT [Sta12 Part#] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(8) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT [Sta13 Part#] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(9) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT [Sta13 Tool] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(10) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(10).Connection = Me.Connection
            Me._commandCollection(10).CommandText = "SELECT [Sta14 Enable] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(10).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(11) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(11).Connection = Me.Connection
            Me._commandCollection(11).CommandText = "SELECT [Sta14 Tool] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(11).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(12) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(12).Connection = Me.Connection
            Me._commandCollection(12).CommandText = "SELECT [Sta15 Enable] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(12).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(13) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(13).Connection = Me.Connection
            Me._commandCollection(13).CommandText = "SELECT [Sta15 Finish Angle] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(13).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(14) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(14).Connection = Me.Connection
            Me._commandCollection(14).CommandText = "SELECT [Sta15 Insert Angle] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(14).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(15) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(15).Connection = Me.Connection
            Me._commandCollection(15).CommandText = "SELECT [Sta15 Test Angle] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(15).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(16) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(16).Connection = Me.Connection
            Me._commandCollection(16).CommandText = "SELECT [Sta15 Tool] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(16).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(17) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(17).Connection = Me.Connection
            Me._commandCollection(17).CommandText = "SELECT [Sta16 BackSupport] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(17).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(17).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(18) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(18).Connection = Me.Connection
            Me._commandCollection(18).CommandText = "SELECT [Sta15 Enable] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(18).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(18).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(19) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(19).Connection = Me.Connection
            Me._commandCollection(19).CommandText = "SELECT [Sta16 Part#] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(19).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(19).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(20) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(20).Connection = Me.Connection
            Me._commandCollection(20).CommandText = "SELECT [Sta17 Enable] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(20).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(20).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(21) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(21).Connection = Me.Connection
            Me._commandCollection(21).CommandText = "SELECT [Sta1 keyed] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(21).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(21).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(22) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(22).Connection = Me.Connection
            Me._commandCollection(22).CommandText = "SELECT [Sta1 Unload] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(22).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(23) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(23).Connection = Me.Connection
            Me._commandCollection(23).CommandText = "SELECT [Sta2 Enable] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(23).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(23).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(24).Connection = Me.Connection
            Me._commandCollection(24).CommandText = "SELECT [Sta3 Part#] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(24).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(25) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(25).Connection = Me.Connection
            Me._commandCollection(25).CommandText = "SELECT [Sta4 Enable] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(25).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(25).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(26) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(26).Connection = Me.Connection
            Me._commandCollection(26).CommandText = "SELECT [Sta5 Part#] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(26).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(26).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(27) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(27).Connection = Me.Connection
            Me._commandCollection(27).CommandText = "SELECT [Sta5 Vert Height] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(27).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(27).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(28) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(28).Connection = Me.Connection
            Me._commandCollection(28).CommandText = "SELECT [Sta6 Part#] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(28).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(28).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(29) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(29).Connection = Me.Connection
            Me._commandCollection(29).CommandText = "SELECT [Sta7 Part#] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(29).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(29).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(30) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(30).Connection = Me.Connection
            Me._commandCollection(30).CommandText = "SELECT [Sta8 Part#] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(30).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(30).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(31) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(31).Connection = Me.Connection
            Me._commandCollection(31).CommandText = "SELECT [Sta9 Enable] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(31).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(31).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(32) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(32).Connection = Me.Connection
            Me._commandCollection(32).CommandText = "SELECT [Sta9 Tool] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(32).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(32).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(33) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(33).Connection = Me.Connection
            Me._commandCollection(33).CommandText = "SELECT [Tool ID] FROM Recipe WHERE [Recipe Name] = ?"
            Me._commandCollection(33).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(33).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Recipe_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Recipe Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.RecipeDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.RecipeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.RecipeDataTable = New NCLRecipeDataSet.RecipeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.RecipeDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Recipe")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_Recipe_Name As String,  _
                    ByVal Original_Lock_Family As String,  _
                    ByVal Original_Company_Name As String,  _
                    ByVal Original_Date As Date,  _
                    ByVal Original_Tool_Id As String,  _
                    ByVal Original_Sta1_Load_Keys As Single,  _
                    ByVal Original_Sta1_Keyed As Single,  _
                    ByVal Original_Sta1_Unload As Single,  _
                    ByVal Original_Sta2_Enable As Integer,  _
                    ByVal _Original_Sta3_Part_ As String,  _
                    ByVal Original_Sta4_Enable As Single,  _
                    ByVal _Original_Sta5_Part_ As String,  _
                    ByVal Original_Sta5_Vert_Height As Double,  _
                    ByVal _Original_Sta6_Part_ As String,  _
                    ByVal _Original_Sta7_Part_ As String,  _
                    ByVal _Original_Sta8_Part_ As String,  _
                    ByVal Original_Sta9_Enable As Single,  _
                    ByVal Original_Sta9_Tool As String,  _
                    ByVal _Original_Sta10_Part_ As String,  _
                    ByVal _Original_Sta11_Part_ As String,  _
                    ByVal _Original_Sta12_Part_ As String,  _
                    ByVal _Original_Sta13_Part_ As String,  _
                    ByVal Original_Sta13_Tool As String,  _
                    ByVal Original_Sta14_Enable As Single,  _
                    ByVal Original_Sta14_Tool As String,  _
                    ByVal Original_Sta15_Enable As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Sta15_Insert_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Original_Sta15_Test_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Original_Sta15_Finish_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Original_Sta15_Tool As String,  _
                    ByVal _Original_Sta16_Part_ As String,  _
                    ByVal Original_Sta16_BackSupport As Integer,  _
                    ByVal Original_Sta17_Enable As Single) As Integer
            If (Original_Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Recipe_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Recipe_Name,String)
            End If
            If (Original_Lock_Family Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Lock_Family")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Lock_Family,String)
            End If
            If (Original_Company_Name Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Company_Name,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Date,Date)
            If (Original_Tool_Id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tool_Id")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Tool_Id,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Sta1_Load_Keys,Single)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Sta1_Keyed,Single)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Sta1_Unload,Single)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Sta2_Enable,Integer)
            If (_Original_Sta3_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta3_Part_")
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(_Original_Sta3_Part_,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Sta4_Enable,Single)
            If (_Original_Sta5_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta5_Part_")
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(_Original_Sta5_Part_,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_Sta5_Vert_Height,Double)
            If (_Original_Sta6_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta6_Part_")
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(_Original_Sta6_Part_,String)
            End If
            If (_Original_Sta7_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta7_Part_")
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(_Original_Sta7_Part_,String)
            End If
            If (_Original_Sta8_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta8_Part_")
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(_Original_Sta8_Part_,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_Sta9_Enable,Single)
            If (Original_Sta9_Tool Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sta9_Tool")
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_Sta9_Tool,String)
            End If
            If (_Original_Sta10_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta10_Part_")
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(_Original_Sta10_Part_,String)
            End If
            If (_Original_Sta11_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta11_Part_")
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(_Original_Sta11_Part_,String)
            End If
            If (_Original_Sta12_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta12_Part_")
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(_Original_Sta12_Part_,String)
            End If
            If (_Original_Sta13_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta13_Part_")
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(_Original_Sta13_Part_,String)
            End If
            If (Original_Sta13_Tool Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sta13_Tool")
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_Sta13_Tool,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_Sta14_Enable,Single)
            If (Original_Sta14_Tool Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sta14_Tool")
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_Sta14_Tool,String)
            End If
            If (Original_Sta15_Enable.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_Sta15_Enable.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_Sta15_Insert_Angle.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_Sta15_Insert_Angle.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_Sta15_Test_Angle.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_Sta15_Test_Angle.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_Sta15_Finish_Angle.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_Sta15_Finish_Angle.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_Sta15_Tool Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sta15_Tool")
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_Sta15_Tool,String)
            End If
            If (_Original_Sta16_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta16_Part_")
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(_Original_Sta16_Part_,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_Sta16_BackSupport,Integer)
            Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_Sta17_Enable,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Recipe_Name As String,  _
                    ByVal Lock_Family As String,  _
                    ByVal Company_Name As String,  _
                    ByVal _Date As Date,  _
                    ByVal Tool_Id As String,  _
                    ByVal Sta1_Load_Keys As Single,  _
                    ByVal Sta1_Keyed As Single,  _
                    ByVal Sta1_Unload As Single,  _
                    ByVal Sta2_Enable As Integer,  _
                    ByVal _Sta3_Part_ As String,  _
                    ByVal Sta4_Enable As Single,  _
                    ByVal _Sta5_Part_ As String,  _
                    ByVal Sta5_Vert_Height As Double,  _
                    ByVal _Sta6_Part_ As String,  _
                    ByVal _Sta7_Part_ As String,  _
                    ByVal _Sta8_Part_ As String,  _
                    ByVal Sta9_Enable As Single,  _
                    ByVal Sta9_Tool As String,  _
                    ByVal _Sta10_Part_ As String,  _
                    ByVal _Sta11_Part_ As String,  _
                    ByVal _Sta12_Part_ As String,  _
                    ByVal _Sta13_Part_ As String,  _
                    ByVal Sta13_Tool As String,  _
                    ByVal Sta14_Enable As Single,  _
                    ByVal Sta14_Tool As String,  _
                    ByVal Sta15_Enable As Global.System.Nullable(Of Integer),  _
                    ByVal Sta15_Insert_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Sta15_Test_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Sta15_Finish_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Sta15_Tool As String,  _
                    ByVal _Sta16_Part_ As String,  _
                    ByVal Sta16_BackSupport As Integer,  _
                    ByVal Sta17_Enable As Single) As Integer
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            If (Lock_Family Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Lock_Family")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Lock_Family,String)
            End If
            If (Company_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Company_Name,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(_Date,Date)
            If (Tool_Id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tool_Id")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Tool_Id,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(Sta1_Load_Keys,Single)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(Sta1_Keyed,Single)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(Sta1_Unload,Single)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(Sta2_Enable,Integer)
            If (_Sta3_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta3_Part_")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(_Sta3_Part_,String)
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(Sta4_Enable,Single)
            If (_Sta5_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta5_Part_")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(_Sta5_Part_,String)
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(Sta5_Vert_Height,Double)
            If (_Sta6_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta6_Part_")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(_Sta6_Part_,String)
            End If
            If (_Sta7_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta7_Part_")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(_Sta7_Part_,String)
            End If
            If (_Sta8_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta8_Part_")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(_Sta8_Part_,String)
            End If
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(Sta9_Enable,Single)
            If (Sta9_Tool Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sta9_Tool")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Sta9_Tool,String)
            End If
            If (_Sta10_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta10_Part_")
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(_Sta10_Part_,String)
            End If
            If (_Sta11_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta11_Part_")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(_Sta11_Part_,String)
            End If
            If (_Sta12_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta12_Part_")
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(_Sta12_Part_,String)
            End If
            If (_Sta13_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta13_Part_")
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(_Sta13_Part_,String)
            End If
            If (Sta13_Tool Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sta13_Tool")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Sta13_Tool,String)
            End If
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(Sta14_Enable,Single)
            If (Sta14_Tool Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sta14_Tool")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Sta14_Tool,String)
            End If
            If (Sta15_Enable.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Sta15_Enable.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Sta15_Insert_Angle.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Sta15_Insert_Angle.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Sta15_Test_Angle.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Sta15_Test_Angle.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Sta15_Finish_Angle.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Sta15_Finish_Angle.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Sta15_Tool Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sta15_Tool")
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Sta15_Tool,String)
            End If
            If (_Sta16_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta16_Part_")
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(_Sta16_Part_,String)
            End If
            Me.Adapter.InsertCommand.Parameters(31).Value = CType(Sta16_BackSupport,Integer)
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(Sta17_Enable,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Recipe_Name As String,  _
                    ByVal Lock_Family As String,  _
                    ByVal Company_Name As String,  _
                    ByVal _Date As Date,  _
                    ByVal Tool_Id As String,  _
                    ByVal Sta1_Load_Keys As Single,  _
                    ByVal Sta1_Keyed As Single,  _
                    ByVal Sta1_Unload As Single,  _
                    ByVal Sta2_Enable As Integer,  _
                    ByVal _Sta3_Part_ As String,  _
                    ByVal Sta4_Enable As Single,  _
                    ByVal _Sta5_Part_ As String,  _
                    ByVal Sta5_Vert_Height As Double,  _
                    ByVal _Sta6_Part_ As String,  _
                    ByVal _Sta7_Part_ As String,  _
                    ByVal _Sta8_Part_ As String,  _
                    ByVal Sta9_Enable As Single,  _
                    ByVal Sta9_Tool As String,  _
                    ByVal _Sta10_Part_ As String,  _
                    ByVal _Sta11_Part_ As String,  _
                    ByVal _Sta12_Part_ As String,  _
                    ByVal _Sta13_Part_ As String,  _
                    ByVal Sta13_Tool As String,  _
                    ByVal Sta14_Enable As Single,  _
                    ByVal Sta14_Tool As String,  _
                    ByVal Sta15_Enable As Global.System.Nullable(Of Integer),  _
                    ByVal Sta15_Insert_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Sta15_Test_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Sta15_Finish_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Sta15_Tool As String,  _
                    ByVal _Sta16_Part_ As String,  _
                    ByVal Sta16_BackSupport As Integer,  _
                    ByVal Sta17_Enable As Single,  _
                    ByVal Original_Recipe_Name As String,  _
                    ByVal Original_Lock_Family As String,  _
                    ByVal Original_Company_Name As String,  _
                    ByVal Original_Date As Date,  _
                    ByVal Original_Tool_Id As String,  _
                    ByVal Original_Sta1_Load_Keys As Single,  _
                    ByVal Original_Sta1_Keyed As Single,  _
                    ByVal Original_Sta1_Unload As Single,  _
                    ByVal Original_Sta2_Enable As Integer,  _
                    ByVal _Original_Sta3_Part_ As String,  _
                    ByVal Original_Sta4_Enable As Single,  _
                    ByVal _Original_Sta5_Part_ As String,  _
                    ByVal Original_Sta5_Vert_Height As Double,  _
                    ByVal _Original_Sta6_Part_ As String,  _
                    ByVal _Original_Sta7_Part_ As String,  _
                    ByVal _Original_Sta8_Part_ As String,  _
                    ByVal Original_Sta9_Enable As Single,  _
                    ByVal Original_Sta9_Tool As String,  _
                    ByVal _Original_Sta10_Part_ As String,  _
                    ByVal _Original_Sta11_Part_ As String,  _
                    ByVal _Original_Sta12_Part_ As String,  _
                    ByVal _Original_Sta13_Part_ As String,  _
                    ByVal Original_Sta13_Tool As String,  _
                    ByVal Original_Sta14_Enable As Single,  _
                    ByVal Original_Sta14_Tool As String,  _
                    ByVal Original_Sta15_Enable As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Sta15_Insert_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Original_Sta15_Test_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Original_Sta15_Finish_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Original_Sta15_Tool As String,  _
                    ByVal _Original_Sta16_Part_ As String,  _
                    ByVal Original_Sta16_BackSupport As Integer,  _
                    ByVal Original_Sta17_Enable As Single) As Integer
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            If (Lock_Family Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Lock_Family")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Lock_Family,String)
            End If
            If (Company_Name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Company_Name,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(_Date,Date)
            If (Tool_Id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tool_Id")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Tool_Id,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Sta1_Load_Keys,Single)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Sta1_Keyed,Single)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Sta1_Unload,Single)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Sta2_Enable,Integer)
            If (_Sta3_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta3_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(_Sta3_Part_,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Sta4_Enable,Single)
            If (_Sta5_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta5_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(_Sta5_Part_,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Sta5_Vert_Height,Double)
            If (_Sta6_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta6_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(_Sta6_Part_,String)
            End If
            If (_Sta7_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta7_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(_Sta7_Part_,String)
            End If
            If (_Sta8_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta8_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(_Sta8_Part_,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Sta9_Enable,Single)
            If (Sta9_Tool Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sta9_Tool")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Sta9_Tool,String)
            End If
            If (_Sta10_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta10_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(_Sta10_Part_,String)
            End If
            If (_Sta11_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta11_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(_Sta11_Part_,String)
            End If
            If (_Sta12_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta12_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(_Sta12_Part_,String)
            End If
            If (_Sta13_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta13_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(_Sta13_Part_,String)
            End If
            If (Sta13_Tool Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sta13_Tool")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Sta13_Tool,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Sta14_Enable,Single)
            If (Sta14_Tool Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sta14_Tool")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Sta14_Tool,String)
            End If
            If (Sta15_Enable.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Sta15_Enable.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Sta15_Insert_Angle.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Sta15_Insert_Angle.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Sta15_Test_Angle.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Sta15_Test_Angle.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Sta15_Finish_Angle.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Sta15_Finish_Angle.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Sta15_Tool Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Sta15_Tool")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Sta15_Tool,String)
            End If
            If (_Sta16_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Sta16_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(_Sta16_Part_,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Sta16_BackSupport,Integer)
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Sta17_Enable,Single)
            If (Original_Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Recipe_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_Recipe_Name,String)
            End If
            If (Original_Lock_Family Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Lock_Family")
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_Lock_Family,String)
            End If
            If (Original_Company_Name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_Company_Name,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_Date,Date)
            If (Original_Tool_Id Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tool_Id")
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_Tool_Id,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_Sta1_Load_Keys,Single)
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_Sta1_Keyed,Single)
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_Sta1_Unload,Single)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_Sta2_Enable,Integer)
            If (_Original_Sta3_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta3_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(_Original_Sta3_Part_,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_Sta4_Enable,Single)
            If (_Original_Sta5_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta5_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(_Original_Sta5_Part_,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_Sta5_Vert_Height,Double)
            If (_Original_Sta6_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta6_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(_Original_Sta6_Part_,String)
            End If
            If (_Original_Sta7_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta7_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(_Original_Sta7_Part_,String)
            End If
            If (_Original_Sta8_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta8_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(_Original_Sta8_Part_,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_Sta9_Enable,Single)
            If (Original_Sta9_Tool Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sta9_Tool")
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_Sta9_Tool,String)
            End If
            If (_Original_Sta10_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta10_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(_Original_Sta10_Part_,String)
            End If
            If (_Original_Sta11_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta11_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(_Original_Sta11_Part_,String)
            End If
            If (_Original_Sta12_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta12_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(_Original_Sta12_Part_,String)
            End If
            If (_Original_Sta13_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta13_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(_Original_Sta13_Part_,String)
            End If
            If (Original_Sta13_Tool Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sta13_Tool")
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_Sta13_Tool,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_Sta14_Enable,Single)
            If (Original_Sta14_Tool Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sta14_Tool")
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_Sta14_Tool,String)
            End If
            If (Original_Sta15_Enable.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_Sta15_Enable.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_Sta15_Insert_Angle.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_Sta15_Insert_Angle.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_Sta15_Test_Angle.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_Sta15_Test_Angle.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_Sta15_Finish_Angle.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_Sta15_Finish_Angle.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Original_Sta15_Tool Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Sta15_Tool")
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_Sta15_Tool,String)
            End If
            If (_Original_Sta16_Part_ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("_Original_Sta16_Part_")
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(_Original_Sta16_Part_,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_Sta16_BackSupport,Integer)
            Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_Sta17_Enable,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Lock_Family As String,  _
                    ByVal Company_Name As String,  _
                    ByVal _Date As Date,  _
                    ByVal Tool_Id As String,  _
                    ByVal Sta1_Load_Keys As Single,  _
                    ByVal Sta1_Keyed As Single,  _
                    ByVal Sta1_Unload As Single,  _
                    ByVal Sta2_Enable As Integer,  _
                    ByVal _Sta3_Part_ As String,  _
                    ByVal Sta4_Enable As Single,  _
                    ByVal _Sta5_Part_ As String,  _
                    ByVal Sta5_Vert_Height As Double,  _
                    ByVal _Sta6_Part_ As String,  _
                    ByVal _Sta7_Part_ As String,  _
                    ByVal _Sta8_Part_ As String,  _
                    ByVal Sta9_Enable As Single,  _
                    ByVal Sta9_Tool As String,  _
                    ByVal _Sta10_Part_ As String,  _
                    ByVal _Sta11_Part_ As String,  _
                    ByVal _Sta12_Part_ As String,  _
                    ByVal _Sta13_Part_ As String,  _
                    ByVal Sta13_Tool As String,  _
                    ByVal Sta14_Enable As Single,  _
                    ByVal Sta14_Tool As String,  _
                    ByVal Sta15_Enable As Global.System.Nullable(Of Integer),  _
                    ByVal Sta15_Insert_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Sta15_Test_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Sta15_Finish_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Sta15_Tool As String,  _
                    ByVal _Sta16_Part_ As String,  _
                    ByVal Sta16_BackSupport As Integer,  _
                    ByVal Sta17_Enable As Single,  _
                    ByVal Original_Recipe_Name As String,  _
                    ByVal Original_Lock_Family As String,  _
                    ByVal Original_Company_Name As String,  _
                    ByVal Original_Date As Date,  _
                    ByVal Original_Tool_Id As String,  _
                    ByVal Original_Sta1_Load_Keys As Single,  _
                    ByVal Original_Sta1_Keyed As Single,  _
                    ByVal Original_Sta1_Unload As Single,  _
                    ByVal Original_Sta2_Enable As Integer,  _
                    ByVal _Original_Sta3_Part_ As String,  _
                    ByVal Original_Sta4_Enable As Single,  _
                    ByVal _Original_Sta5_Part_ As String,  _
                    ByVal Original_Sta5_Vert_Height As Double,  _
                    ByVal _Original_Sta6_Part_ As String,  _
                    ByVal _Original_Sta7_Part_ As String,  _
                    ByVal _Original_Sta8_Part_ As String,  _
                    ByVal Original_Sta9_Enable As Single,  _
                    ByVal Original_Sta9_Tool As String,  _
                    ByVal _Original_Sta10_Part_ As String,  _
                    ByVal _Original_Sta11_Part_ As String,  _
                    ByVal _Original_Sta12_Part_ As String,  _
                    ByVal _Original_Sta13_Part_ As String,  _
                    ByVal Original_Sta13_Tool As String,  _
                    ByVal Original_Sta14_Enable As Single,  _
                    ByVal Original_Sta14_Tool As String,  _
                    ByVal Original_Sta15_Enable As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Sta15_Insert_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Original_Sta15_Test_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Original_Sta15_Finish_Angle As Global.System.Nullable(Of Double),  _
                    ByVal Original_Sta15_Tool As String,  _
                    ByVal _Original_Sta16_Part_ As String,  _
                    ByVal Original_Sta16_BackSupport As Integer,  _
                    ByVal Original_Sta17_Enable As Single) As Integer
            Return Me.Update(Original_Recipe_Name, Lock_Family, Company_Name, _Date, Tool_Id, Sta1_Load_Keys, Sta1_Keyed, Sta1_Unload, Sta2_Enable, _Sta3_Part_, Sta4_Enable, _Sta5_Part_, Sta5_Vert_Height, _Sta6_Part_, _Sta7_Part_, _Sta8_Part_, Sta9_Enable, Sta9_Tool, _Sta10_Part_, _Sta11_Part_, _Sta12_Part_, _Sta13_Part_, Sta13_Tool, Sta14_Enable, Sta14_Tool, Sta15_Enable, Sta15_Insert_Angle, Sta15_Test_Angle, Sta15_Finish_Angle, Sta15_Tool, _Sta16_Part_, Sta16_BackSupport, Sta17_Enable, Original_Recipe_Name, Original_Lock_Family, Original_Company_Name, Original_Date, Original_Tool_Id, Original_Sta1_Load_Keys, Original_Sta1_Keyed, Original_Sta1_Unload, Original_Sta2_Enable, _Original_Sta3_Part_, Original_Sta4_Enable, _Original_Sta5_Part_, Original_Sta5_Vert_Height, _Original_Sta6_Part_, _Original_Sta7_Part_, _Original_Sta8_Part_, Original_Sta9_Enable, Original_Sta9_Tool, _Original_Sta10_Part_, _Original_Sta11_Part_, _Original_Sta12_Part_, _Original_Sta13_Part_, Original_Sta13_Tool, Original_Sta14_Enable, Original_Sta14_Tool, Original_Sta15_Enable, Original_Sta15_Insert_Angle, Original_Sta15_Test_Angle, Original_Sta15_Finish_Angle, Original_Sta15_Tool, _Original_Sta16_Part_, Original_Sta16_BackSupport, Original_Sta17_Enable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetCompanyName(ByVal Recipe_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(1)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetDate(ByVal Recipe_Name As String) As Global.System.Nullable(Of Date)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(2)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Date)()
            Else
                Return New Global.System.Nullable(Of Date)(CType(returnValue,Date))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetLoadKeys(ByVal Recipe_Name As String) As Global.System.Nullable(Of Single)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(3)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Single)()
            Else
                Return New Global.System.Nullable(Of Single)(CType(returnValue,Single))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetLockFamily(ByVal Recipe_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(4)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta10Part(ByVal Recipe_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(5)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta11Part(ByVal Recipe_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(6)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta12Part(ByVal Recipe_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(7)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta13Part(ByVal Recipe_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(8)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta13Tool(ByVal Recipe_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(9)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta14Enable(ByVal Recipe_Name As String) As Global.System.Nullable(Of Single)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(10)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Single)()
            Else
                Return New Global.System.Nullable(Of Single)(CType(returnValue,Single))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta14Tool(ByVal Recipe_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(11)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta15Enable(ByVal Recipe_Name As String) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(12)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta15FinishAngle(ByVal Recipe_Name As String) As Global.System.Nullable(Of Double)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(13)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Double)()
            Else
                Return New Global.System.Nullable(Of Double)(CType(returnValue,Double))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta15InsertAngle(ByVal Recipe_Name As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(14)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta15TestAngle(ByVal Recipe_Name As String) As Global.System.Nullable(Of Double)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(15)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Double)()
            Else
                Return New Global.System.Nullable(Of Double)(CType(returnValue,Double))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta15Tool(ByVal Recipe_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(16)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta16BackSupport(ByVal Recipe_Name As String) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(17)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta16Enable(ByVal Recipe_Name As String) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(18)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta16Part(ByVal Recipe_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(19)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta17Enable(ByVal Recipe_Name As String) As Global.System.Nullable(Of Single)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(20)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Single)()
            Else
                Return New Global.System.Nullable(Of Single)(CType(returnValue,Single))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta1Keyed(ByVal Recipe_Name As String) As Global.System.Nullable(Of Single)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(21)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Single)()
            Else
                Return New Global.System.Nullable(Of Single)(CType(returnValue,Single))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta1Unload(ByVal Recipe_Name As String) As Global.System.Nullable(Of Single)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(22)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Single)()
            Else
                Return New Global.System.Nullable(Of Single)(CType(returnValue,Single))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta2Enable(ByVal Recipe_Name As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(23)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta3Part(ByVal Recipe_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(24)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta4Enable(ByVal Recipe_Name As String) As Global.System.Nullable(Of Single)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(25)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Single)()
            Else
                Return New Global.System.Nullable(Of Single)(CType(returnValue,Single))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta5Part(ByVal Recipe_Name As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(26)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta5VertHt(ByVal Recipe_Name As String) As Global.System.Nullable(Of Double)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(27)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Double)()
            Else
                Return New Global.System.Nullable(Of Double)(CType(returnValue,Double))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta6Part(ByVal Recipe_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(28)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta7Part(ByVal Recipe_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(29)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta8Part(ByVal Recipe_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(30)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta9Enable(ByVal Recipe_Name As String) As Global.System.Nullable(Of Single)
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(31)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Single)()
            Else
                Return New Global.System.Nullable(Of Single)(CType(returnValue,Single))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSta9Tool(ByVal Recipe_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(32)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetToolID(ByVal Recipe_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(33)
            If (Recipe_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Recipe_Name")
            Else
                command.Parameters(0).Value = CType(Recipe_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SpringsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Springs"
            tableMapping.ColumnMappings.Add("Spring", "Spring")
            tableMapping.ColumnMappings.Add("Bowl", "Bowl")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Springs` WHERE ((`Spring` = ?) AND ((? = 1 AND `Bowl` IS NULL) OR (`"& _ 
                "Bowl` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bowl", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Springs` (`Spring`, `Bowl`) VALUES (?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Springs` SET `Spring` = ?, `Bowl` = ? WHERE ((`Spring` = ?) AND ((? = 1 A"& _ 
                "ND `Bowl` IS NULL) OR (`Bowl` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bowl", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Spring, Bowl FROM Springs"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT TRIM([Springs].[Bowl]) FROM [Springs] WHERE ([Springs].[Spring] = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.SpringsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.SpringsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.SpringsDataTable = New NCLRecipeDataSet.SpringsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.SpringsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Springs")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Spring As String, ByVal Original_Bowl As Single) As Integer
            If (Original_Spring Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Spring")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Spring,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Bowl,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Spring As String, ByVal Bowl As Single) As Integer
            If (Spring Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Spring")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Spring,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Bowl,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Spring As String, ByVal Bowl As Single, ByVal Original_Spring As String, ByVal Original_Bowl As Single) As Integer
            If (Spring Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Spring")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Spring,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Bowl,Single)
            If (Original_Spring Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Spring")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_Spring,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_Bowl,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Bowl As Single, ByVal Original_Spring As String, ByVal Original_Bowl As Single) As Integer
            Return Me.Update(Original_Spring, Bowl, Original_Spring, Original_Bowl)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBowl(ByVal Spring As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(1)
            If (Spring Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Spring")
            Else
                command.Parameters(0).Value = CType(Spring,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Station_13_ToolingTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Station 13 Tooling"
            tableMapping.ColumnMappings.Add("Tooling Name", "Tooling Name")
            tableMapping.ColumnMappings.Add("Gripper", "Gripper")
            tableMapping.ColumnMappings.Add("Orient", "Orient")
            tableMapping.ColumnMappings.Add("Shotpin", "Shotpin")
            tableMapping.ColumnMappings.Add("Place", "Place")
            tableMapping.ColumnMappings.Add("ReClock Pos", "ReClock Pos")
            tableMapping.ColumnMappings.Add("ReClock Rot", "ReClock Rot")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Station 13 Tooling` WHERE ((`Tooling Name` = ?) AND ((? = 1 AND `Gri"& _ 
                "pper` IS NULL) OR (`Gripper` = ?)) AND ((? = 1 AND `Orient` IS NULL) OR (`Orient"& _ 
                "` = ?)) AND ((? = 1 AND `Shotpin` IS NULL) OR (`Shotpin` = ?)) AND ((? = 1 AND `"& _ 
                "Place` IS NULL) OR (`Place` = ?)) AND ((? = 1 AND `ReClock Pos` IS NULL) OR (`Re"& _ 
                "Clock Pos` = ?)) AND ((? = 1 AND `ReClock Rot` IS NULL) OR (`ReClock Rot` = ?)))"& _ 
                ""
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Gripper", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Gripper", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Gripper", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Gripper", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Orient", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Orient", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Orient", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Orient", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Shotpin", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Shotpin", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Shotpin", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Shotpin", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Place", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Place", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Place", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Place", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ReClock_Pos", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReClock Pos", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ReClock_Pos", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReClock Pos", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ReClock_Rot", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReClock Rot", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ReClock_Rot", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReClock Rot", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Station 13 Tooling` (`Tooling Name`, `Gripper`, `Orient`, `Shotpin`,"& _ 
                " `Place`, `ReClock Pos`, `ReClock Rot`) VALUES (?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Gripper", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Gripper", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Orient", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Orient", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Shotpin", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Shotpin", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Place", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Place", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ReClock_Pos", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReClock Pos", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ReClock_Rot", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReClock Rot", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Station 13 Tooling` SET `Tooling Name` = ?, `Gripper` = ?, `Orient` = ?, "& _ 
                "`Shotpin` = ?, `Place` = ?, `ReClock Pos` = ?, `ReClock Rot` = ? WHERE ((`Toolin"& _ 
                "g Name` = ?) AND ((? = 1 AND `Gripper` IS NULL) OR (`Gripper` = ?)) AND ((? = 1 "& _ 
                "AND `Orient` IS NULL) OR (`Orient` = ?)) AND ((? = 1 AND `Shotpin` IS NULL) OR ("& _ 
                "`Shotpin` = ?)) AND ((? = 1 AND `Place` IS NULL) OR (`Place` = ?)) AND ((? = 1 A"& _ 
                "ND `ReClock Pos` IS NULL) OR (`ReClock Pos` = ?)) AND ((? = 1 AND `ReClock Rot` "& _ 
                "IS NULL) OR (`ReClock Rot` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Gripper", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Gripper", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Orient", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Orient", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Shotpin", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Shotpin", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Place", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Place", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ReClock_Pos", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReClock Pos", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ReClock_Rot", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReClock Rot", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Gripper", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Gripper", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Gripper", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Gripper", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Orient", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Orient", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Orient", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Orient", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Shotpin", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Shotpin", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Shotpin", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Shotpin", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Place", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Place", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Place", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Place", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ReClock_Pos", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReClock Pos", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ReClock_Pos", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReClock Pos", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ReClock_Rot", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReClock Rot", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ReClock_Rot", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReClock Rot", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(7) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT [Tooling Name], Gripper, Orient, Shotpin, Place, [ReClock Pos], [ReClock R"& _ 
                "ot] FROM [Station 13 Tooling]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT [Station 13 Tooling].[Gripper] FROM [Station 13 Tooling] where [Tooling Na"& _ 
                "me] = ?"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT [Station 13 Tooling].[Orient] FROM [Station 13 Tooling] where [Tooling Nam"& _ 
                "e] = ?"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT [Station 13 Tooling].[Place] FROM [Station 13 Tooling] where [Tooling Name"& _ 
                "] = ?"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT [Station 13 Tooling].[ReClock Pos] FROM [Station 13 Tooling] where [Toolin"& _ 
                "g Name] = ?"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(5) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT [Station 13 Tooling].[ReClock Rot] FROM [Station 13 Tooling] where [Toolin"& _ 
                "g Name] = ?"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT [Station 13 Tooling].[Shotpin] FROM [Station 13 Tooling] where [Tooling Na"& _ 
                "me] = ?"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(7) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT [Tooling Name], Gripper, Orient, Shotpin, Place, [ReClock Pos], [ReClock R"& _ 
                "ot] FROM [Station 13 Tooling] WHERE [Tooling Name] = ?"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.Station_13_ToolingDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.Station_13_ToolingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.Station_13_ToolingDataTable = New NCLRecipeDataSet.Station_13_ToolingDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetSta13Row(ByVal Tooling_Name As String) As NCLRecipeDataSet.Station_13_ToolingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            Dim dataTable As NCLRecipeDataSet.Station_13_ToolingDataTable = New NCLRecipeDataSet.Station_13_ToolingDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.Station_13_ToolingDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Station 13 Tooling")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Tooling_Name As String, ByVal Original_Gripper As String, ByVal Original_Orient As String, ByVal Original_Shotpin As String, ByVal Original_Place As String, ByVal Original_ReClock_Pos As String, ByVal Original_ReClock_Rot As String) As Integer
            If (Original_Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Tooling_Name,String)
            End If
            If (Original_Gripper Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Gripper,String)
            End If
            If (Original_Orient Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Orient,String)
            End If
            If (Original_Shotpin Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Shotpin,String)
            End If
            If (Original_Place Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Place,String)
            End If
            If (Original_ReClock_Pos Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_ReClock_Pos,String)
            End If
            If (Original_ReClock_Rot Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_ReClock_Rot,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Tooling_Name As String, ByVal Gripper As String, ByVal Orient As String, ByVal Shotpin As String, ByVal Place As String, ByVal ReClock_Pos As String, ByVal ReClock_Rot As String) As Integer
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            If (Gripper Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Gripper,String)
            End If
            If (Orient Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Orient,String)
            End If
            If (Shotpin Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Shotpin,String)
            End If
            If (Place Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Place,String)
            End If
            If (ReClock_Pos Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ReClock_Pos,String)
            End If
            If (ReClock_Rot Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ReClock_Rot,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Tooling_Name As String, ByVal Gripper As String, ByVal Orient As String, ByVal Shotpin As String, ByVal Place As String, ByVal ReClock_Pos As String, ByVal ReClock_Rot As String, ByVal Original_Tooling_Name As String, ByVal Original_Gripper As String, ByVal Original_Orient As String, ByVal Original_Shotpin As String, ByVal Original_Place As String, ByVal Original_ReClock_Pos As String, ByVal Original_ReClock_Rot As String) As Integer
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            If (Gripper Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Gripper,String)
            End If
            If (Orient Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Orient,String)
            End If
            If (Shotpin Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Shotpin,String)
            End If
            If (Place Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Place,String)
            End If
            If (ReClock_Pos Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ReClock_Pos,String)
            End If
            If (ReClock_Rot Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ReClock_Rot,String)
            End If
            If (Original_Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Tooling_Name,String)
            End If
            If (Original_Gripper Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Gripper,String)
            End If
            If (Original_Orient Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_Orient,String)
            End If
            If (Original_Shotpin Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_Shotpin,String)
            End If
            If (Original_Place Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_Place,String)
            End If
            If (Original_ReClock_Pos Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_ReClock_Pos,String)
            End If
            If (Original_ReClock_Rot Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_ReClock_Rot,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Gripper As String, ByVal Orient As String, ByVal Shotpin As String, ByVal Place As String, ByVal ReClock_Pos As String, ByVal ReClock_Rot As String, ByVal Original_Tooling_Name As String, ByVal Original_Gripper As String, ByVal Original_Orient As String, ByVal Original_Shotpin As String, ByVal Original_Place As String, ByVal Original_ReClock_Pos As String, ByVal Original_ReClock_Rot As String) As Integer
            Return Me.Update(Original_Tooling_Name, Gripper, Orient, Shotpin, Place, ReClock_Pos, ReClock_Rot, Original_Tooling_Name, Original_Gripper, Original_Orient, Original_Shotpin, Original_Place, Original_ReClock_Pos, Original_ReClock_Rot)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetGripper(ByVal Tooling_Name As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(1)
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                command.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetOrient(ByVal Tooling_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(2)
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                command.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetPlace(ByVal Tooling_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(3)
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                command.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetReClockPos(ByVal Tooling_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(4)
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                command.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetReClockRot(ByVal Tooling_Name As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(5)
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                command.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetShotPin(ByVal Tooling_Name As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(6)
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                command.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Station_14_ToolingTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Station 14 Tooling"
            tableMapping.ColumnMappings.Add("Tooling Name", "Tooling Name")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Station 14 Tooling` WHERE ((`Tooling Name` = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Station 14 Tooling` (`Tooling Name`) VALUES (?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Station 14 Tooling` SET `Tooling Name` = ? WHERE ((`Tooling Name` = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT [Tooling Name] FROM [Station 14 Tooling]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.Station_14_ToolingDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.Station_14_ToolingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.Station_14_ToolingDataTable = New NCLRecipeDataSet.Station_14_ToolingDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.Station_14_ToolingDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Station 14 Tooling")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Tooling_Name As String) As Integer
            If (Original_Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Tooling_Name As String) As Integer
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Tooling_Name As String, ByVal Original_Tooling_Name As String) As Integer
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            If (Original_Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_Tooling_Name As String) As Integer
            Return Me.Update(Original_Tooling_Name, Original_Tooling_Name)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Station_15_ToolingTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Station 15 Tooling"
            tableMapping.ColumnMappings.Add("Tooling Name", "Tooling Name")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Station 15 Tooling` WHERE ((`Tooling Name` = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Station 15 Tooling` (`Tooling Name`) VALUES (?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Station 15 Tooling` SET `Tooling Name` = ? WHERE ((`Tooling Name` = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT [Tooling Name] FROM [Station 15 Tooling]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.Station_15_ToolingDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.Station_15_ToolingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.Station_15_ToolingDataTable = New NCLRecipeDataSet.Station_15_ToolingDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.Station_15_ToolingDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Station 15 Tooling")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Tooling_Name As String) As Integer
            If (Original_Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Tooling_Name As String) As Integer
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Tooling_Name As String, ByVal Original_Tooling_Name As String) As Integer
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            If (Original_Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_Tooling_Name As String) As Integer
            Return Me.Update(Original_Tooling_Name, Original_Tooling_Name)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Station_16_ToolingTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Station 16 Tooling"
            tableMapping.ColumnMappings.Add("Tooling Name", "Tooling Name")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Station 16 Tooling` WHERE ((`Tooling Name` = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Station 16 Tooling` (`Tooling Name`) VALUES (?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Station 16 Tooling` SET `Tooling Name` = ? WHERE ((`Tooling Name` = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT [Tooling Name] FROM [Station 16 Tooling]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.Station_16_ToolingDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.Station_16_ToolingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.Station_16_ToolingDataTable = New NCLRecipeDataSet.Station_16_ToolingDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.Station_16_ToolingDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Station 16 Tooling")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Tooling_Name As String) As Integer
            If (Original_Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Tooling_Name As String) As Integer
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Tooling_Name As String, ByVal Original_Tooling_Name As String) As Integer
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            If (Original_Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_Tooling_Name As String) As Integer
            Return Me.Update(Original_Tooling_Name, Original_Tooling_Name)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Station_2_ToolingTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Station 2 Tooling"
            tableMapping.ColumnMappings.Add("Tooling Name", "Tooling Name")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Station 2 Tooling` WHERE ((`Tooling Name` = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Station 2 Tooling` (`Tooling Name`) VALUES (?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Station 2 Tooling` SET `Tooling Name` = ? WHERE ((`Tooling Name` = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT [Tooling Name] FROM [Station 2 Tooling]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.Station_2_ToolingDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.Station_2_ToolingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.Station_2_ToolingDataTable = New NCLRecipeDataSet.Station_2_ToolingDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.Station_2_ToolingDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Station 2 Tooling")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Tooling_Name As String) As Integer
            If (Original_Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Tooling_Name As String) As Integer
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Tooling_Name As String, ByVal Original_Tooling_Name As String) As Integer
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            If (Original_Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_Tooling_Name As String) As Integer
            Return Me.Update(Original_Tooling_Name, Original_Tooling_Name)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Station_3_ToolingTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Station 3 Tooling"
            tableMapping.ColumnMappings.Add("Tooling Name", "Tooling Name")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Station 3 Tooling` WHERE ((`Tooling Name` = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Station 3 Tooling` (`Tooling Name`) VALUES (?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Station 3 Tooling` SET `Tooling Name` = ? WHERE ((`Tooling Name` = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT [Tooling Name] FROM [Station 3 Tooling]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.Station_3_ToolingDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.Station_3_ToolingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.Station_3_ToolingDataTable = New NCLRecipeDataSet.Station_3_ToolingDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.Station_3_ToolingDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Station 3 Tooling")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Tooling_Name As String) As Integer
            If (Original_Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Tooling_Name As String) As Integer
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Tooling_Name As String, ByVal Original_Tooling_Name As String) As Integer
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            If (Original_Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_Tooling_Name As String) As Integer
            Return Me.Update(Original_Tooling_Name, Original_Tooling_Name)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Station_9_ToolingTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Station 9 Tooling"
            tableMapping.ColumnMappings.Add("Tooling Name", "Tooling Name")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Station 9 Tooling` WHERE ((`Tooling Name` = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Station 9 Tooling` (`Tooling Name`) VALUES (?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Station 9 Tooling` SET `Tooling Name` = ? WHERE ((`Tooling Name` = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tooling_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tooling Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT [Tooling Name] FROM [Station 9 Tooling]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.Station_9_ToolingDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.Station_9_ToolingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.Station_9_ToolingDataTable = New NCLRecipeDataSet.Station_9_ToolingDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.Station_9_ToolingDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Station 9 Tooling")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Tooling_Name As String) As Integer
            If (Original_Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Tooling_Name As String) As Integer
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Tooling_Name As String, ByVal Original_Tooling_Name As String) As Integer
            If (Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tooling_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Tooling_Name,String)
            End If
            If (Original_Tooling_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tooling_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_Tooling_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_Tooling_Name As String) As Integer
            Return Me.Update(Original_Tooling_Name, Original_Tooling_Name)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Top_SleeveTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Top Sleeve"
            tableMapping.ColumnMappings.Add("Top Sleeve", "Top Sleeve")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Top Sleeve` WHERE ((`Top Sleeve` = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top_Sleeve", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top Sleeve", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Top Sleeve` (`Top Sleeve`) VALUES (?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top_Sleeve", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top Sleeve", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Top Sleeve` SET `Top Sleeve` = ? WHERE ((`Top Sleeve` = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top_Sleeve", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top Sleeve", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top_Sleeve", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top Sleeve", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT [Top Sleeve] FROM [Top Sleeve]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.Top_SleeveDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.Top_SleeveDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.Top_SleeveDataTable = New NCLRecipeDataSet.Top_SleeveDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.Top_SleeveDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Top Sleeve")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Top_Sleeve As String) As Integer
            If (Original_Top_Sleeve Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Top_Sleeve")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Top_Sleeve,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Top_Sleeve As String) As Integer
            If (Top_Sleeve Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Top_Sleeve")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Top_Sleeve,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Top_Sleeve As String, ByVal Original_Top_Sleeve As String) As Integer
            If (Top_Sleeve Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Top_Sleeve")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Top_Sleeve,String)
            End If
            If (Original_Top_Sleeve Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Top_Sleeve")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_Top_Sleeve,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_Top_Sleeve As String) As Integer
            Return Me.Update(Original_Top_Sleeve, Original_Top_Sleeve)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Top_TumblerTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Top Tumbler"
            tableMapping.ColumnMappings.Add("Top Tumbler", "Top Tumbler")
            tableMapping.ColumnMappings.Add("Bowl", "Bowl")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Top Tumbler` WHERE ((`Top Tumbler` = ?) AND ((? = 1 AND `Bowl` IS NU"& _ 
                "LL) OR (`Bowl` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top_Tumbler", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top Tumbler", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bowl", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Top Tumbler` (`Top Tumbler`, `Bowl`) VALUES (?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top_Tumbler", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top Tumbler", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Top Tumbler` SET `Top Tumbler` = ?, `Bowl` = ? WHERE ((`Top Tumbler` = ?)"& _ 
                " AND ((? = 1 AND `Bowl` IS NULL) OR (`Bowl` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top_Tumbler", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top Tumbler", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top_Tumbler", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top Tumbler", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bowl", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bowl", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bowl", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT [Top Tumbler], Bowl FROM [Top Tumbler]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT TRIM([Top Tumbler].[Bowl]) FROM [Top Tumbler] WHERE ([Top Tumbler].[Top Tu"& _ 
                "mbler] = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top_Tumbler", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top Tumbler", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.Top_TumblerDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.Top_TumblerDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.Top_TumblerDataTable = New NCLRecipeDataSet.Top_TumblerDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.Top_TumblerDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Top Tumbler")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Top_Tumbler As String, ByVal Original_Bowl As Single) As Integer
            If (Original_Top_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Top_Tumbler")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Top_Tumbler,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Bowl,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Top_Tumbler As String, ByVal Bowl As Single) As Integer
            If (Top_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Top_Tumbler")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Top_Tumbler,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Bowl,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Top_Tumbler As String, ByVal Bowl As Single, ByVal Original_Top_Tumbler As String, ByVal Original_Bowl As Single) As Integer
            If (Top_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Top_Tumbler")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Top_Tumbler,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Bowl,Single)
            If (Original_Top_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Top_Tumbler")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_Top_Tumbler,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_Bowl,Single)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Bowl As Single, ByVal Original_Top_Tumbler As String, ByVal Original_Bowl As Single) As Integer
            Return Me.Update(Original_Top_Tumbler, Bowl, Original_Top_Tumbler, Original_Bowl)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBowl(ByVal Top_Tumbler As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(1)
            If (Top_Tumbler Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Top_Tumbler")
            Else
                command.Parameters(0).Value = CType(Top_Tumbler,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Tumbler_KitTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Tumbler Kit"
            tableMapping.ColumnMappings.Add("Tumbler Kit", "Tumbler Kit")
            tableMapping.ColumnMappings.Add("Spring1 Type", "Spring1 Type")
            tableMapping.ColumnMappings.Add("Spring1 Random1", "Spring1 Random1")
            tableMapping.ColumnMappings.Add("Spring1 Random2", "Spring1 Random2")
            tableMapping.ColumnMappings.Add("Spring1 Number", "Spring1 Number")
            tableMapping.ColumnMappings.Add("Spring1 Chart", "Spring1 Chart")
            tableMapping.ColumnMappings.Add("Spring2 Type", "Spring2 Type")
            tableMapping.ColumnMappings.Add("Spring2 Random1", "Spring2 Random1")
            tableMapping.ColumnMappings.Add("Spring2 Random2", "Spring2 Random2")
            tableMapping.ColumnMappings.Add("Spring2 Number", "Spring2 Number")
            tableMapping.ColumnMappings.Add("Spring2 Chart", "Spring2 Chart")
            tableMapping.ColumnMappings.Add("Spring3 Type", "Spring3 Type")
            tableMapping.ColumnMappings.Add("Spring3 Random1", "Spring3 Random1")
            tableMapping.ColumnMappings.Add("Spring3 Random2", "Spring3 Random2")
            tableMapping.ColumnMappings.Add("Spring3 Number", "Spring3 Number")
            tableMapping.ColumnMappings.Add("Spring3 Chart", "Spring3 Chart")
            tableMapping.ColumnMappings.Add("Spring4 Type", "Spring4 Type")
            tableMapping.ColumnMappings.Add("Spring4 Random1", "Spring4 Random1")
            tableMapping.ColumnMappings.Add("Spring4 Random2", "Spring4 Random2")
            tableMapping.ColumnMappings.Add("Spring4 Number", "Spring4 Number")
            tableMapping.ColumnMappings.Add("Spring4 Chart", "Spring4 Chart")
            tableMapping.ColumnMappings.Add("Spring5 Type", "Spring5 Type")
            tableMapping.ColumnMappings.Add("Spring5 Random1", "Spring5 Random1")
            tableMapping.ColumnMappings.Add("Spring5 Random2", "Spring5 Random2")
            tableMapping.ColumnMappings.Add("Spring5 Number", "Spring5 Number")
            tableMapping.ColumnMappings.Add("Spring5 Chart", "Spring5 Chart")
            tableMapping.ColumnMappings.Add("Spring6 Type", "Spring6 Type")
            tableMapping.ColumnMappings.Add("Spring6 Random1", "Spring6 Random1")
            tableMapping.ColumnMappings.Add("Spring6 Random2", "Spring6 Random2")
            tableMapping.ColumnMappings.Add("Spring6 Number", "Spring6 Number")
            tableMapping.ColumnMappings.Add("Spring6 Chart", "Spring6 Chart")
            tableMapping.ColumnMappings.Add("Spring7 Type", "Spring7 Type")
            tableMapping.ColumnMappings.Add("Spring7 Random1", "Spring7 Random1")
            tableMapping.ColumnMappings.Add("Spring7 Random2", "Spring7 Random2")
            tableMapping.ColumnMappings.Add("Spring7 Number", "Spring7 Number")
            tableMapping.ColumnMappings.Add("Spring7 Chart", "Spring7 Chart")
            tableMapping.ColumnMappings.Add("Top1 Type", "Top1 Type")
            tableMapping.ColumnMappings.Add("Top1 Random1", "Top1 Random1")
            tableMapping.ColumnMappings.Add("Top1 Random2", "Top1 Random2")
            tableMapping.ColumnMappings.Add("Top1 Number", "Top1 Number")
            tableMapping.ColumnMappings.Add("Top1 Chart", "Top1 Chart")
            tableMapping.ColumnMappings.Add("Top2 Type", "Top2 Type")
            tableMapping.ColumnMappings.Add("Top2 Random1", "Top2 Random1")
            tableMapping.ColumnMappings.Add("Top2 Random2", "Top2 Random2")
            tableMapping.ColumnMappings.Add("Top2 Number", "Top2 Number")
            tableMapping.ColumnMappings.Add("Top2 Chart", "Top2 Chart")
            tableMapping.ColumnMappings.Add("Top3 Type", "Top3 Type")
            tableMapping.ColumnMappings.Add("Top3 Random1", "Top3 Random1")
            tableMapping.ColumnMappings.Add("Top3 Random2", "Top3 Random2")
            tableMapping.ColumnMappings.Add("Top3 Number", "Top3 Number")
            tableMapping.ColumnMappings.Add("Top3 Chart", "Top3 Chart")
            tableMapping.ColumnMappings.Add("Top4 Type", "Top4 Type")
            tableMapping.ColumnMappings.Add("Top4 Random1", "Top4 Random1")
            tableMapping.ColumnMappings.Add("Top4 Random2", "Top4 Random2")
            tableMapping.ColumnMappings.Add("Top4 Number", "Top4 Number")
            tableMapping.ColumnMappings.Add("Top4 Chart", "Top4 Chart")
            tableMapping.ColumnMappings.Add("Top5 Type", "Top5 Type")
            tableMapping.ColumnMappings.Add("Top5 Random1", "Top5 Random1")
            tableMapping.ColumnMappings.Add("Top5 Random2", "Top5 Random2")
            tableMapping.ColumnMappings.Add("Top5 Number", "Top5 Number")
            tableMapping.ColumnMappings.Add("Top5 Chart", "Top5 Chart")
            tableMapping.ColumnMappings.Add("Top6 Type", "Top6 Type")
            tableMapping.ColumnMappings.Add("Top6 Random1", "Top6 Random1")
            tableMapping.ColumnMappings.Add("Top6 Random2", "Top6 Random2")
            tableMapping.ColumnMappings.Add("Top6 Number", "Top6 Number")
            tableMapping.ColumnMappings.Add("Top6 Chart", "Top6 Chart")
            tableMapping.ColumnMappings.Add("Top7 Type", "Top7 Type")
            tableMapping.ColumnMappings.Add("Top7 Random1", "Top7 Random1")
            tableMapping.ColumnMappings.Add("Top7 Random2", "Top7 Random2")
            tableMapping.ColumnMappings.Add("Top7 Number", "Top7 Number")
            tableMapping.ColumnMappings.Add("Top7 Chart", "Top7 Chart")
            tableMapping.ColumnMappings.Add("Top8 Type", "Top8 Type")
            tableMapping.ColumnMappings.Add("Top8 Random1", "Top8 Random1")
            tableMapping.ColumnMappings.Add("Top8 Random2", "Top8 Random2")
            tableMapping.ColumnMappings.Add("Top8 Number", "Top8 Number")
            tableMapping.ColumnMappings.Add("Top8 Chart", "Top8 Chart")
            tableMapping.ColumnMappings.Add("Mid1 Type", "Mid1 Type")
            tableMapping.ColumnMappings.Add("Mid1 Random1", "Mid1 Random1")
            tableMapping.ColumnMappings.Add("Mid1 Random2", "Mid1 Random2")
            tableMapping.ColumnMappings.Add("Mid1 Number", "Mid1 Number")
            tableMapping.ColumnMappings.Add("Mid1 Chart", "Mid1 Chart")
            tableMapping.ColumnMappings.Add("Mid2 Type", "Mid2 Type")
            tableMapping.ColumnMappings.Add("Mid2 Random1", "Mid2 Random1")
            tableMapping.ColumnMappings.Add("Mid2 Random2", "Mid2 Random2")
            tableMapping.ColumnMappings.Add("Mid2 Number", "Mid2 Number")
            tableMapping.ColumnMappings.Add("Mid2 Chart", "Mid2 Chart")
            tableMapping.ColumnMappings.Add("Mid3 Type", "Mid3 Type")
            tableMapping.ColumnMappings.Add("Mid3 Random1", "Mid3 Random1")
            tableMapping.ColumnMappings.Add("Mid3 Random2", "Mid3 Random2")
            tableMapping.ColumnMappings.Add("Mid3 Number", "Mid3 Number")
            tableMapping.ColumnMappings.Add("Mid3 Chart", "Mid3 Chart")
            tableMapping.ColumnMappings.Add("Mid4 Type", "Mid4 Type")
            tableMapping.ColumnMappings.Add("Mid4 Random1", "Mid4 Random1")
            tableMapping.ColumnMappings.Add("Mid4 Random2", "Mid4 Random2")
            tableMapping.ColumnMappings.Add("Mid4 Number", "Mid4 Number")
            tableMapping.ColumnMappings.Add("Mid4 Chart", "Mid4 Chart")
            tableMapping.ColumnMappings.Add("Mid5 Type", "Mid5 Type")
            tableMapping.ColumnMappings.Add("Mid5 Random1", "Mid5 Random1")
            tableMapping.ColumnMappings.Add("Mid5 Random2", "Mid5 Random2")
            tableMapping.ColumnMappings.Add("Mid5 Number", "Mid5 Number")
            tableMapping.ColumnMappings.Add("Mid5 Chart", "Mid5 Chart")
            tableMapping.ColumnMappings.Add("Mid6 Type", "Mid6 Type")
            tableMapping.ColumnMappings.Add("Mid6 Random1", "Mid6 Random1")
            tableMapping.ColumnMappings.Add("Mid6 Random2", "Mid6 Random2")
            tableMapping.ColumnMappings.Add("Mid6 Number", "Mid6 Number")
            tableMapping.ColumnMappings.Add("Mid6 Chart", "Mid6 Chart")
            tableMapping.ColumnMappings.Add("Mid7 Type", "Mid7 Type")
            tableMapping.ColumnMappings.Add("Mid7 Random1", "Mid7 Random1")
            tableMapping.ColumnMappings.Add("Mid7 Random2", "Mid7 Random2")
            tableMapping.ColumnMappings.Add("Mid7 Number", "Mid7 Number")
            tableMapping.ColumnMappings.Add("Mid7 Chart", "Mid7 Chart")
            tableMapping.ColumnMappings.Add("Bot1 Type", "Bot1 Type")
            tableMapping.ColumnMappings.Add("Bot1 Random1", "Bot1 Random1")
            tableMapping.ColumnMappings.Add("Bot1 Random2", "Bot1 Random2")
            tableMapping.ColumnMappings.Add("Bot1 Number", "Bot1 Number")
            tableMapping.ColumnMappings.Add("Bot1 Chart", "Bot1 Chart")
            tableMapping.ColumnMappings.Add("Bot2 Type", "Bot2 Type")
            tableMapping.ColumnMappings.Add("Bot2 Random1", "Bot2 Random1")
            tableMapping.ColumnMappings.Add("Bot2 Random2", "Bot2 Random2")
            tableMapping.ColumnMappings.Add("Bot2 Number", "Bot2 Number")
            tableMapping.ColumnMappings.Add("Bot2 Chart", "Bot2 Chart")
            tableMapping.ColumnMappings.Add("Bot3 Type", "Bot3 Type")
            tableMapping.ColumnMappings.Add("Bot3 Random1", "Bot3 Random1")
            tableMapping.ColumnMappings.Add("Bot3 Random2", "Bot3 Random2")
            tableMapping.ColumnMappings.Add("Bot3 Number", "Bot3 Number")
            tableMapping.ColumnMappings.Add("Bot3 Chart", "Bot3 Chart")
            tableMapping.ColumnMappings.Add("Bot4 Type", "Bot4 Type")
            tableMapping.ColumnMappings.Add("Bot4 Random1", "Bot4 Random1")
            tableMapping.ColumnMappings.Add("Bot4 Random2", "Bot4 Random2")
            tableMapping.ColumnMappings.Add("Bot4 Number", "Bot4 Number")
            tableMapping.ColumnMappings.Add("Bot4 Chart", "Bot4 Chart")
            tableMapping.ColumnMappings.Add("Bot5 Type", "Bot5 Type")
            tableMapping.ColumnMappings.Add("Bot5 Random1", "Bot5 Random1")
            tableMapping.ColumnMappings.Add("Bot5 Random2", "Bot5 Random2")
            tableMapping.ColumnMappings.Add("Bot5 Number", "Bot5 Number")
            tableMapping.ColumnMappings.Add("Bot5 Chart", "Bot5 Chart")
            tableMapping.ColumnMappings.Add("Bot6 Type", "Bot6 Type")
            tableMapping.ColumnMappings.Add("Bot6 Random1", "Bot6 Random1")
            tableMapping.ColumnMappings.Add("Bot6 Random2", "Bot6 Random2")
            tableMapping.ColumnMappings.Add("Bot6 Number", "Bot6 Number")
            tableMapping.ColumnMappings.Add("Bot6 Chart", "Bot6 Chart")
            tableMapping.ColumnMappings.Add("Bot7 Type", "Bot7 Type")
            tableMapping.ColumnMappings.Add("Bot7 Random1", "Bot7 Random1")
            tableMapping.ColumnMappings.Add("Bot7 Random2", "Bot7 Random2")
            tableMapping.ColumnMappings.Add("Bot7 Number", "Bot7 Number")
            tableMapping.ColumnMappings.Add("Bot7 Chart", "Bot7 Chart")
            tableMapping.ColumnMappings.Add("Use Mid Tum", "Use Mid Tum")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Tumbler Kit` WHERE ((`Tumbler Kit` = ?) AND ((? = 1 AND `Spring1 Typ"& _ 
                "e` IS NULL) OR (`Spring1 Type` = ?)) AND ((? = 1 AND `Spring1 Random1` IS NULL) "& _ 
                "OR (`Spring1 Random1` = ?)) AND ((? = 1 AND `Spring1 Random2` IS NULL) OR (`Spri"& _ 
                "ng1 Random2` = ?)) AND ((? = 1 AND `Spring1 Number` IS NULL) OR (`Spring1 Number"& _ 
                "` = ?)) AND ((? = 1 AND `Spring1 Chart` IS NULL) OR (`Spring1 Chart` = ?)) AND ("& _ 
                "(? = 1 AND `Spring2 Type` IS NULL) OR (`Spring2 Type` = ?)) AND ((? = 1 AND `Spr"& _ 
                "ing2 Random1` IS NULL) OR (`Spring2 Random1` = ?)) AND ((? = 1 AND `Spring2 Rand"& _ 
                "om2` IS NULL) OR (`Spring2 Random2` = ?)) AND ((? = 1 AND `Spring2 Number` IS NU"& _ 
                "LL) OR (`Spring2 Number` = ?)) AND ((? = 1 AND `Spring2 Chart` IS NULL) OR (`Spr"& _ 
                "ing2 Chart` = ?)) AND ((? = 1 AND `Spring3 Type` IS NULL) OR (`Spring3 Type` = ?"& _ 
                ")) AND ((? = 1 AND `Spring3 Random1` IS NULL) OR (`Spring3 Random1` = ?)) AND (("& _ 
                "? = 1 AND `Spring3 Random2` IS NULL) OR (`Spring3 Random2` = ?)) AND ((? = 1 AND"& _ 
                " `Spring3 Number` IS NULL) OR (`Spring3 Number` = ?)) AND ((? = 1 AND `Spring3 C"& _ 
                "hart` IS NULL) OR (`Spring3 Chart` = ?)) AND ((? = 1 AND `Spring4 Type` IS NULL)"& _ 
                " OR (`Spring4 Type` = ?)) AND ((? = 1 AND `Spring4 Random1` IS NULL) OR (`Spring"& _ 
                "4 Random1` = ?)) AND ((? = 1 AND `Spring4 Random2` IS NULL) OR (`Spring4 Random2"& _ 
                "` = ?)) AND ((? = 1 AND `Spring4 Number` IS NULL) OR (`Spring4 Number` = ?)) AND"& _ 
                " ((? = 1 AND `Spring4 Chart` IS NULL) OR (`Spring4 Chart` = ?)) AND ((? = 1 AND "& _ 
                "`Spring5 Type` IS NULL) OR (`Spring5 Type` = ?)) AND ((? = 1 AND `Spring5 Random"& _ 
                "1` IS NULL) OR (`Spring5 Random1` = ?)) AND ((? = 1 AND `Spring5 Random2` IS NUL"& _ 
                "L) OR (`Spring5 Random2` = ?)) AND ((? = 1 AND `Spring5 Number` IS NULL) OR (`Sp"& _ 
                "ring5 Number` = ?)) AND ((? = 1 AND `Spring5 Chart` IS NULL) OR (`Spring5 Chart`"& _ 
                " = ?)) AND ((? = 1 AND `Spring6 Type` IS NULL) OR (`Spring6 Type` = ?)) AND ((? "& _ 
                "= 1 AND `Spring6 Random1` IS NULL) OR (`Spring6 Random1` = ?)) AND ((? = 1 AND `"& _ 
                "Spring6 Random2` IS NULL) OR (`Spring6 Random2` = ?)) AND ((? = 1 AND `Spring6 N"& _ 
                "umber` IS NULL) OR (`Spring6 Number` = ?)) AND ((? = 1 AND `Spring6 Chart` IS NU"& _ 
                "LL) OR (`Spring6 Chart` = ?)) AND ((? = 1 AND `Spring7 Type` IS NULL) OR (`Sprin"& _ 
                "g7 Type` = ?)) AND ((? = 1 AND `Spring7 Random1` IS NULL) OR (`Spring7 Random1` "& _ 
                "= ?)) AND ((? = 1 AND `Spring7 Random2` IS NULL) OR (`Spring7 Random2` = ?)) AND"& _ 
                " ((? = 1 AND `Spring7 Number` IS NULL) OR (`Spring7 Number` = ?)) AND ((? = 1 AN"& _ 
                "D `Spring7 Chart` IS NULL) OR (`Spring7 Chart` = ?)) AND ((? = 1 AND `Top1 Type`"& _ 
                " IS NULL) OR (`Top1 Type` = ?)) AND ((? = 1 AND `Top1 Random1` IS NULL) OR (`Top"& _ 
                "1 Random1` = ?)) AND ((? = 1 AND `Top1 Random2` IS NULL) OR (`Top1 Random2` = ?)"& _ 
                ") AND ((? = 1 AND `Top1 Number` IS NULL) OR (`Top1 Number` = ?)) AND ((? = 1 AND"& _ 
                " `Top1 Chart` IS NULL) OR (`Top1 Chart` = ?)) AND ((? = 1 AND `Top2 Type` IS NUL"& _ 
                "L) OR (`Top2 Type` = ?)) AND ((? = 1 AND `Top2 Random1` IS NULL) OR (`Top2 Rando"& _ 
                "m1` = ?)) AND ((? = 1 AND `Top2 Random2` IS NULL) OR (`Top2 Random2` = ?)) AND ("& _ 
                "(? = 1 AND `Top2 Number` IS NULL) OR (`Top2 Number` = ?)) AND ((? = 1 AND `Top2 "& _ 
                "Chart` IS NULL) OR (`Top2 Chart` = ?)) AND ((? = 1 AND `Top3 Type` IS NULL) OR ("& _ 
                "`Top3 Type` = ?)) AND ((? = 1 AND `Top3 Random1` IS NULL) OR (`Top3 Random1` = ?"& _ 
                ")) AND ((? = 1 AND `Top3 Random2` IS NULL) OR (`Top3 Random2` = ?)) AND ((? = 1 "& _ 
                "AND `Top3 Number` IS NULL) OR (`Top3 Number` = ?)) AND ((? = 1 AND `Top3 Chart` "& _ 
                "IS NULL) OR (`Top3 Chart` = ?)) AND ((? = 1 AND `Top4 Type` IS NULL) OR (`Top4 T"& _ 
                "ype` = ?)) AND ((? = 1 AND `Top4 Random1` IS NULL) OR (`Top4 Random1` = ?)) AND "& _ 
                "((? = 1 AND `Top4 Random2` IS NULL) OR (`Top4 Random2` = ?)) AND ((? = 1 AND `To"& _ 
                "p4 Number` IS NULL) OR (`Top4 Number` = ?)) AND ((? = 1 AND `Top4 Chart` IS NULL"& _ 
                ") OR (`Top4 Chart` = ?)) AND ((? = 1 AND `Top5 Type` IS NULL) OR (`Top5 Type` = "& _ 
                "?)) AND ((? = 1 AND `Top5 Random1` IS NULL) OR (`Top5 Random1` = ?)) AND ((? = 1"& _ 
                " AND `Top5 Random2` IS NULL) OR (`Top5 Random2` = ?)) AND ((? = 1 AND `Top5 Numb"& _ 
                "er` IS NULL) OR (`Top5 Number` = ?)) AND ((? = 1 AND `Top5 Chart` IS NULL) OR (`"& _ 
                "Top5 Chart` = ?)) AND ((? = 1 AND `Top6 Type` IS NULL) OR (`Top6 Type` = ?)) AND"& _ 
                " ((? = 1 AND `Top6 Random1` IS NULL) OR (`Top6 Random1` = ?)) AND ((? = 1 AND `T"& _ 
                "op6 Random2` IS NULL) OR (`Top6 Random2` = ?)) AND ((? = 1 AND `Top6 Number` IS "& _ 
                "NULL) OR (`Top6 Number` = ?)) AND ((? = 1 AND `Top6 Chart` IS NULL) OR (`Top6 Ch"& _ 
                "art` = ?)) AND ((? = 1 AND `Top7 Type` IS NULL) OR (`Top7 Type` = ?)) AND ((? = "& _ 
                "1 AND `Top7 Random1` IS NULL) OR (`Top7 Random1` = ?)) AND ((? = 1 AND `Top7 Ran"& _ 
                "dom2` IS NULL) OR (`Top7 Random2` = ?)) AND ((? = 1 AND `Top7 Number` IS NULL) O"& _ 
                "R (`Top7 Number` = ?)) AND ((? = 1 AND `Top7 Chart` IS NULL) OR (`Top7 Chart` = "& _ 
                "?)) AND ((? = 1 AND `Top8 Type` IS NULL) OR (`Top8 Type` = ?)) AND ((? = 1 AND `"& _ 
                "Top8 Random1` IS NULL) OR (`Top8 Random1` = ?)) AND ((? = 1 AND `Top8 Random2` I"& _ 
                "S NULL) OR (`Top8 Random2` = ?)) AND ((? = 1 AND `Top8 Number` IS NULL) OR (`Top"& _ 
                "8 Number` = ?)) AND ((? = 1 AND `Top8 Chart` IS NULL) OR (`Top8 Chart` = ?)) AND"& _ 
                " ((? = 1 AND `Mid1 Type` IS NULL) OR (`Mid1 Type` = ?)) AND ((? = 1 AND `Mid1 Ra"& _ 
                "ndom1` IS NULL) OR (`Mid1 Random1` = ?)) AND ((? = 1 AND `Mid1 Random2` IS NULL)"& _ 
                " OR (`Mid1 Random2` = ?)) AND ((? = 1 AND `Mid1 Number` IS NULL) OR (`Mid1 Numbe"& _ 
                "r` = ?)) AND ((? = 1 AND `Mid1 Chart` IS NULL) OR (`Mid1 Chart` = ?)) AND ((? = "& _ 
                "1 AND `Mid2 Type` IS NULL) OR (`Mid2 Type` = ?)) AND ((? = 1 AND `Mid2 Random1` "& _ 
                "IS NULL) OR (`Mid2 Random1` = ?)) AND ((? = 1 AND `Mid2 Random2` IS NULL) OR (`M"& _ 
                "id2 Random2` = ?)) AND ((? = 1 AND `Mid2 Number` IS NULL) OR (`Mid2 Number` = ?)"& _ 
                ") AND ((? = 1 AND `Mid2 Chart` IS NULL) OR (`Mid2 Chart` = ?)) AND ((? = 1 AND `"& _ 
                "Mid3 Type` IS NULL) OR (`Mid3 Type` = ?)) AND ((? = 1 AND `Mid3 Random1` IS NULL"& _ 
                ") OR (`Mid3 Random1` = ?)) AND ((? = 1 AND `Mid3 Random2` IS NULL) OR (`Mid3 Ran"& _ 
                "dom2` = ?)) AND ((? = 1 AND `Mid3 Number` IS NULL) OR (`Mid3 Number` = ?)) AND ("& _ 
                "(? = 1 AND `Mid3 Chart` IS NULL) OR (`Mid3 Chart` = ?)) AND ((? = 1 AND `Mid4 Ty"& _ 
                "pe` IS NULL) OR (`Mid4 Type` = ?)) AND ((? = 1 AND `Mid4 Random1` IS NULL) OR (`"& _ 
                "Mid4 Random1` = ?)) AND ((? = 1 AND `Mid4 Random2` IS NULL) OR (`Mid4 Random2` ="& _ 
                " ?)) AND ((? = 1 AND `Mid4 Number` IS NULL) OR (`Mid4 Number` = ?)) AND ((? = 1 "& _ 
                "AND `Mid4 Chart` IS NULL) OR (`Mid4 Chart` = ?)) AND ((? = 1 AND `Mid5 Type` IS "& _ 
                "NULL) OR (`Mid5 Type` = ?)) AND ((? = 1 AND `Mid5 Random1` IS NULL) OR (`Mid5 Ra"& _ 
                "ndom1` = ?)) AND ((? = 1 AND `Mid5 Random2` IS NULL) OR (`Mid5 Random2` = ?)) AN"& _ 
                "D ((? = 1 AND `Mid5 Number` IS NULL) OR (`Mid5 Number` = ?)) AND ((? = 1 AND `Mi"& _ 
                "d5 Chart` IS NULL) OR (`Mid5 Chart` = ?)) AND ((? = 1 AND `Mid6 Type` IS NULL) O"& _ 
                "R (`Mid6 Type` = ?)) AND ((? = 1 AND `Mid6 Random1` IS NULL) OR (`Mid6 Random1` "& _ 
                "= ?)) AND ((? = 1 AND `Mid6 Random2` IS NULL) OR (`Mid6 Random2` = ?)) AND ((? ="& _ 
                " 1 AND `Mid6 Number` IS NULL) OR (`Mid6 Number` = ?)) AND ((? = 1 AND `Mid6 Char"& _ 
                "t` IS NULL) OR (`Mid6 Chart` = ?)) AND ((? = 1 AND `Mid7 Type` IS NULL) OR (`Mid"& _ 
                "7 Type` = ?)) AND ((? = 1 AND `Mid7 Random1` IS NULL) OR (`Mid7 Random1` = ?)) A"& _ 
                "ND ((? = 1 AND `Mid7 Random2` IS NULL) OR (`Mid7 Random2` = ?)) AND ((? = 1 AND "& _ 
                "`Mid7 Number` IS NULL) OR (`Mid7 Number` = ?)) AND ((? = 1 AND `Mid7 Chart` IS N"& _ 
                "ULL) OR (`Mid7 Chart` = ?)) AND ((? = 1 AND `Bot1 Type` IS NULL) OR (`Bot1 Type`"& _ 
                " = ?)) AND ((? = 1 AND `Bot1 Random1` IS NULL) OR (`Bot1 Random1` = ?)) AND ((? "& _ 
                "= 1 AND `Bot1 Random2` IS NULL) OR (`Bot1 Random2` = ?)) AND ((? = 1 AND `Bot1 N"& _ 
                "umber` IS NULL) OR (`Bot1 Number` = ?)) AND ((? = 1 AND `Bot1 Chart` IS NULL) OR"& _ 
                " (`Bot1 Chart` = ?)) AND ((? = 1 AND `Bot2 Type` IS NULL) OR (`Bot2 Type` = ?)) "& _ 
                "AND ((? = 1 AND `Bot2 Random1` IS NULL) OR (`Bot2 Random1` = ?)) AND ((? = 1 AND"& _ 
                " `Bot2 Random2` IS NULL) OR (`Bot2 Random2` = ?)) AND ((? = 1 AND `Bot2 Number` "& _ 
                "IS NULL) OR (`Bot2 Number` = ?)) AND ((? = 1 AND `Bot2 Chart` IS NULL) OR (`Bot2"& _ 
                " Chart` = ?)) AND ((? = 1 AND `Bot3 Type` IS NULL) OR (`Bot3 Type` = ?)) AND ((?"& _ 
                " = 1 AND `Bot3 Random1` IS NULL) OR (`Bot3 Random1` = ?)) AND ((? = 1 AND `Bot3 "& _ 
                "Random2` IS NULL) OR (`Bot3 Random2` = ?)) AND ((? = 1 AND `Bot3 Number` IS NULL"& _ 
                ") OR (`Bot3 Number` = ?)) AND ((? = 1 AND `Bot3 Chart` IS NULL) OR (`Bot3 Chart`"& _ 
                " = ?)) AND ((? = 1 AND `Bot4 Type` IS NULL) OR (`Bot4 Type` = ?)) AND ((? = 1 AN"& _ 
                "D `Bot4 Random1` IS NULL) OR (`Bot4 Random1` = ?)) AND ((? = 1 AND `Bot4 Random2"& _ 
                "` IS NULL) OR (`Bot4 Random2` = ?)) AND ((? = 1 AND `Bot4 Number` IS NULL) OR (`"& _ 
                "Bot4 Number` = ?)) AND ((? = 1 AND `Bot4 Chart` IS NULL) OR (`Bot4 Chart` = ?)) "& _ 
                "AND ((? = 1 AND `Bot5 Type` IS NULL) OR (`Bot5 Type` = ?)) AND ((? = 1 AND `Bot5"& _ 
                " Random1` IS NULL) OR (`Bot5 Random1` = ?)) AND ((? = 1 AND `Bot5 Random2` IS NU"& _ 
                "LL) OR (`Bot5 Random2` = ?)) AND ((? = 1 AND `Bot5 Number` IS NULL) OR (`Bot5 Nu"& _ 
                "mber` = ?)) AND ((? = 1 AND `Bot5 Chart` IS NULL) OR (`Bot5 Chart` = ?)) AND ((?"& _ 
                " = 1 AND `Bot6 Type` IS NULL) OR (`Bot6 Type` = ?)) AND ((? = 1 AND `Bot6 Random"& _ 
                "1` IS NULL) OR (`Bot6 Random1` = ?)) AND ((? = 1 AND `Bot6 Random2` IS NULL) OR "& _ 
                "(`Bot6 Random2` = ?)) AND ((? = 1 AND `Bot6 Number` IS NULL) OR (`Bot6 Number` ="& _ 
                " ?)) AND ((? = 1 AND `Bot6 Chart` IS NULL) OR (`Bot6 Chart` = ?)) AND ((? = 1 AN"& _ 
                "D `Bot7 Type` IS NULL) OR (`Bot7 Type` = ?)) AND ((? = 1 AND `Bot7 Random1` IS N"& _ 
                "ULL) OR (`Bot7 Random1` = ?)) AND ((? = 1 AND `Bot7 Random2` IS NULL) OR (`Bot7 "& _ 
                "Random2` = ?)) AND ((? = 1 AND `Bot7 Number` IS NULL) OR (`Bot7 Number` = ?)) AN"& _ 
                "D ((? = 1 AND `Bot7 Chart` IS NULL) OR (`Bot7 Chart` = ?)) AND ((? = 1 AND `Use "& _ 
                "Mid Tum` IS NULL) OR (`Use Mid Tum` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tumbler_Kit", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring1_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring1_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring1_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring1_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring1_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring1_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring1_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring1_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring1_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring1_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring2_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring2_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring2_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring2_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring2_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring2_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring2_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring2_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring2_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring2_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring3_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring3_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring3_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring3_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring3_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring3_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring3_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring3_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring3_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring3_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring4_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring4_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring4_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring4_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring4_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring4_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring4_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring4_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring4_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring4_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring5_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring5_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring5_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring5_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring5_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring5_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring5_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring5_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring5_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring5_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring6_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring6_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring6_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring6_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring6_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring6_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring6_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring6_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring6_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring6_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring7_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring7_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring7_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring7_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring7_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring7_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring7_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring7_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring7_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring7_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top1_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top1_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top1_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top1_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top1_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top1_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top1_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top1_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top1_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top1_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top2_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top2_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top2_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top2_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top2_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top2_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top2_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top2_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top2_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top2_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top3_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top3_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top3_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top3_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top3_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top3_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top3_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top3_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top3_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top3_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top4_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top4_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top4_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top4_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top4_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top4_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top4_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top4_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top4_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top4_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top5_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top5_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top5_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top5_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top5_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top5_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top5_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top5_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top5_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top5_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top6_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top6_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top6_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top6_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top6_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top6_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top6_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top6_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top6_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top6_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top7_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top7_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top7_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top7_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top7_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top7_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top7_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top7_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top7_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top7_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top8_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top8_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top8_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top8_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top8_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top8_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top8_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top8_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top8_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top8_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid1_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid1_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid1_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid1_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid1_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid1_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid1_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid1_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid1_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid1_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid2_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid2_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid2_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid2_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid2_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid2_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid2_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid2_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid2_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid2_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid3_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid3_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid3_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid3_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid3_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid3_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid3_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid3_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid3_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid3_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid4_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid4_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid4_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid4_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid4_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid4_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid4_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid4_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid4_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid4_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid5_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid5_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid5_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid5_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid5_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid5_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid5_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid5_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid5_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid5_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid6_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid6_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid6_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid6_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid6_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid6_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid6_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid6_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid6_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid6_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid7_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid7_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid7_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid7_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid7_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid7_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid7_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid7_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid7_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid7_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot1_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot1_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot1_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot1_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot1_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot1_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot1_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot1_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot1_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot1_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot2_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot2_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot2_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot2_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot2_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot2_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot2_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot2_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot2_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot2_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot3_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot3_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot3_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot3_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot3_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot3_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot3_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot3_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot3_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot3_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot4_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot4_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot4_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot4_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot4_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot4_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot4_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot4_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot4_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot4_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot5_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot5_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot5_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot5_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot5_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot5_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot5_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot5_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot5_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot5_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot6_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot6_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot6_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot6_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot6_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot6_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot6_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot6_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot6_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot6_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot7_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot7_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot7_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot7_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot7_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot7_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot7_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot7_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot7_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot7_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Use_Mid_Tum", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Use Mid Tum", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Use_Mid_Tum", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Use Mid Tum", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Tumbler Kit` (`Tumbler Kit`, `Spring1 Type`, `Spring1 Random1`, `Spr"& _ 
                "ing1 Random2`, `Spring1 Number`, `Spring1 Chart`, `Spring2 Type`, `Spring2 Rando"& _ 
                "m1`, `Spring2 Random2`, `Spring2 Number`, `Spring2 Chart`, `Spring3 Type`, `Spri"& _ 
                "ng3 Random1`, `Spring3 Random2`, `Spring3 Number`, `Spring3 Chart`, `Spring4 Typ"& _ 
                "e`, `Spring4 Random1`, `Spring4 Random2`, `Spring4 Number`, `Spring4 Chart`, `Sp"& _ 
                "ring5 Type`, `Spring5 Random1`, `Spring5 Random2`, `Spring5 Number`, `Spring5 Ch"& _ 
                "art`, `Spring6 Type`, `Spring6 Random1`, `Spring6 Random2`, `Spring6 Number`, `S"& _ 
                "pring6 Chart`, `Spring7 Type`, `Spring7 Random1`, `Spring7 Random2`, `Spring7 Nu"& _ 
                "mber`, `Spring7 Chart`, `Top1 Type`, `Top1 Random1`, `Top1 Random2`, `Top1 Numbe"& _ 
                "r`, `Top1 Chart`, `Top2 Type`, `Top2 Random1`, `Top2 Random2`, `Top2 Number`, `T"& _ 
                "op2 Chart`, `Top3 Type`, `Top3 Random1`, `Top3 Random2`, `Top3 Number`, `Top3 Ch"& _ 
                "art`, `Top4 Type`, `Top4 Random1`, `Top4 Random2`, `Top4 Number`, `Top4 Chart`, "& _ 
                "`Top5 Type`, `Top5 Random1`, `Top5 Random2`, `Top5 Number`, `Top5 Chart`, `Top6 "& _ 
                "Type`, `Top6 Random1`, `Top6 Random2`, `Top6 Number`, `Top6 Chart`, `Top7 Type`,"& _ 
                " `Top7 Random1`, `Top7 Random2`, `Top7 Number`, `Top7 Chart`, `Top8 Type`, `Top8"& _ 
                " Random1`, `Top8 Random2`, `Top8 Number`, `Top8 Chart`, `Mid1 Type`, `Mid1 Rando"& _ 
                "m1`, `Mid1 Random2`, `Mid1 Number`, `Mid1 Chart`, `Mid2 Type`, `Mid2 Random1`, `"& _ 
                "Mid2 Random2`, `Mid2 Number`, `Mid2 Chart`, `Mid3 Type`, `Mid3 Random1`, `Mid3 R"& _ 
                "andom2`, `Mid3 Number`, `Mid3 Chart`, `Mid4 Type`, `Mid4 Random1`, `Mid4 Random2"& _ 
                "`, `Mid4 Number`, `Mid4 Chart`, `Mid5 Type`, `Mid5 Random1`, `Mid5 Random2`, `Mi"& _ 
                "d5 Number`, `Mid5 Chart`, `Mid6 Type`, `Mid6 Random1`, `Mid6 Random2`, `Mid6 Num"& _ 
                "ber`, `Mid6 Chart`, `Mid7 Type`, `Mid7 Random1`, `Mid7 Random2`, `Mid7 Number`, "& _ 
                "`Mid7 Chart`, `Bot1 Type`, `Bot1 Random1`, `Bot1 Random2`, `Bot1 Number`, `Bot1 "& _ 
                "Chart`, `Bot2 Type`, `Bot2 Random1`, `Bot2 Random2`, `Bot2 Number`, `Bot2 Chart`"& _ 
                ", `Bot3 Type`, `Bot3 Random1`, `Bot3 Random2`, `Bot3 Number`, `Bot3 Chart`, `Bot"& _ 
                "4 Type`, `Bot4 Random1`, `Bot4 Random2`, `Bot4 Number`, `Bot4 Chart`, `Bot5 Type"& _ 
                "`, `Bot5 Random1`, `Bot5 Random2`, `Bot5 Number`, `Bot5 Chart`, `Bot6 Type`, `Bo"& _ 
                "t6 Random1`, `Bot6 Random2`, `Bot6 Number`, `Bot6 Chart`, `Bot7 Type`, `Bot7 Ran"& _ 
                "dom1`, `Bot7 Random2`, `Bot7 Number`, `Bot7 Chart`, `Use Mid Tum`) VALUES (?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring1_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring1_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring1_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring1_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring1_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring2_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring2_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring2_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring2_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring2_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring3_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring3_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring3_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring3_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring3_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring4_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring4_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring4_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring4_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring4_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring5_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring5_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring5_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring5_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring5_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring6_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring6_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring6_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring6_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring6_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring7_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring7_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring7_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring7_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring7_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top1_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top1_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top1_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top1_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top1_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top2_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top2_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top2_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top2_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top2_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top3_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top3_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top3_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top3_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top3_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top4_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top4_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top4_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top4_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top4_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top5_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top5_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top5_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top5_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top5_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top6_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top6_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top6_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top6_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top6_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top7_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top7_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top7_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top7_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top7_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top8_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top8_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top8_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top8_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top8_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid1_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid1_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid1_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid1_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid1_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid2_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid2_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid2_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid2_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid2_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid3_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid3_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid3_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid3_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid3_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid4_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid4_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid4_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid4_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid4_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid5_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid5_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid5_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid5_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid5_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid6_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid6_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid6_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid6_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid6_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid7_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid7_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid7_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid7_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid7_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot1_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot1_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot1_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot1_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot1_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot2_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot2_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot2_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot2_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot2_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot3_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot3_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot3_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot3_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot3_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot4_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot4_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot4_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot4_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot4_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot5_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot5_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot5_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot5_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot5_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot6_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot6_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot6_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot6_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot6_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot7_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot7_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot7_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot7_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot7_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Use_Mid_Tum", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Use Mid Tum", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Tumbler Kit` SET `Tumbler Kit` = ?, `Spring1 Type` = ?, `Spring1 Random1`"& _ 
                " = ?, `Spring1 Random2` = ?, `Spring1 Number` = ?, `Spring1 Chart` = ?, `Spring2"& _ 
                " Type` = ?, `Spring2 Random1` = ?, `Spring2 Random2` = ?, `Spring2 Number` = ?, "& _ 
                "`Spring2 Chart` = ?, `Spring3 Type` = ?, `Spring3 Random1` = ?, `Spring3 Random2"& _ 
                "` = ?, `Spring3 Number` = ?, `Spring3 Chart` = ?, `Spring4 Type` = ?, `Spring4 R"& _ 
                "andom1` = ?, `Spring4 Random2` = ?, `Spring4 Number` = ?, `Spring4 Chart` = ?, `"& _ 
                "Spring5 Type` = ?, `Spring5 Random1` = ?, `Spring5 Random2` = ?, `Spring5 Number"& _ 
                "` = ?, `Spring5 Chart` = ?, `Spring6 Type` = ?, `Spring6 Random1` = ?, `Spring6 "& _ 
                "Random2` = ?, `Spring6 Number` = ?, `Spring6 Chart` = ?, `Spring7 Type` = ?, `Sp"& _ 
                "ring7 Random1` = ?, `Spring7 Random2` = ?, `Spring7 Number` = ?, `Spring7 Chart`"& _ 
                " = ?, `Top1 Type` = ?, `Top1 Random1` = ?, `Top1 Random2` = ?, `Top1 Number` = ?"& _ 
                ", `Top1 Chart` = ?, `Top2 Type` = ?, `Top2 Random1` = ?, `Top2 Random2` = ?, `To"& _ 
                "p2 Number` = ?, `Top2 Chart` = ?, `Top3 Type` = ?, `Top3 Random1` = ?, `Top3 Ran"& _ 
                "dom2` = ?, `Top3 Number` = ?, `Top3 Chart` = ?, `Top4 Type` = ?, `Top4 Random1` "& _ 
                "= ?, `Top4 Random2` = ?, `Top4 Number` = ?, `Top4 Chart` = ?, `Top5 Type` = ?, `"& _ 
                "Top5 Random1` = ?, `Top5 Random2` = ?, `Top5 Number` = ?, `Top5 Chart` = ?, `Top"& _ 
                "6 Type` = ?, `Top6 Random1` = ?, `Top6 Random2` = ?, `Top6 Number` = ?, `Top6 Ch"& _ 
                "art` = ?, `Top7 Type` = ?, `Top7 Random1` = ?, `Top7 Random2` = ?, `Top7 Number`"& _ 
                " = ?, `Top7 Chart` = ?, `Top8 Type` = ?, `Top8 Random1` = ?, `Top8 Random2` = ?,"& _ 
                " `Top8 Number` = ?, `Top8 Chart` = ?, `Mid1 Type` = ?, `Mid1 Random1` = ?, `Mid1"& _ 
                " Random2` = ?, `Mid1 Number` = ?, `Mid1 Chart` = ?, `Mid2 Type` = ?, `Mid2 Rando"& _ 
                "m1` = ?, `Mid2 Random2` = ?, `Mid2 Number` = ?, `Mid2 Chart` = ?, `Mid3 Type` = "& _ 
                "?, `Mid3 Random1` = ?, `Mid3 Random2` = ?, `Mid3 Number` = ?, `Mid3 Chart` = ?, "& _ 
                "`Mid4 Type` = ?, `Mid4 Random1` = ?, `Mid4 Random2` = ?, `Mid4 Number` = ?, `Mid"& _ 
                "4 Chart` = ?, `Mid5 Type` = ?, `Mid5 Random1` = ?, `Mid5 Random2` = ?, `Mid5 Num"& _ 
                "ber` = ?, `Mid5 Chart` = ?, `Mid6 Type` = ?, `Mid6 Random1` = ?, `Mid6 Random2` "& _ 
                "= ?, `Mid6 Number` = ?, `Mid6 Chart` = ?, `Mid7 Type` = ?, `Mid7 Random1` = ?, `"& _ 
                "Mid7 Random2` = ?, `Mid7 Number` = ?, `Mid7 Chart` = ?, `Bot1 Type` = ?, `Bot1 R"& _ 
                "andom1` = ?, `Bot1 Random2` = ?, `Bot1 Number` = ?, `Bot1 Chart` = ?, `Bot2 Type"& _ 
                "` = ?, `Bot2 Random1` = ?, `Bot2 Random2` = ?, `Bot2 Number` = ?, `Bot2 Chart` ="& _ 
                " ?, `Bot3 Type` = ?, `Bot3 Random1` = ?, `Bot3 Random2` = ?, `Bot3 Number` = ?, "& _ 
                "`Bot3 Chart` = ?, `Bot4 Type` = ?, `Bot4 Random1` = ?, `Bot4 Random2` = ?, `Bot4"& _ 
                " Number` = ?, `Bot4 Chart` = ?, `Bot5 Type` = ?, `Bot5 Random1` = ?, `Bot5 Rando"& _ 
                "m2` = ?, `Bot5 Number` = ?, `Bot5 Chart` = ?, `Bot6 Type` = ?, `Bot6 Random1` = "& _ 
                "?, `Bot6 Random2` = ?, `Bot6 Number` = ?, `Bot6 Chart` = ?, `Bot7 Type` = ?, `Bo"& _ 
                "t7 Random1` = ?, `Bot7 Random2` = ?, `Bot7 Number` = ?, `Bot7 Chart` = ?, `Use M"& _ 
                "id Tum` = ? WHERE ((`Tumbler Kit` = ?) AND ((? = 1 AND `Spring1 Type` IS NULL) O"& _ 
                "R (`Spring1 Type` = ?)) AND ((? = 1 AND `Spring1 Random1` IS NULL) OR (`Spring1 "& _ 
                "Random1` = ?)) AND ((? = 1 AND `Spring1 Random2` IS NULL) OR (`Spring1 Random2` "& _ 
                "= ?)) AND ((? = 1 AND `Spring1 Number` IS NULL) OR (`Spring1 Number` = ?)) AND ("& _ 
                "(? = 1 AND `Spring1 Chart` IS NULL) OR (`Spring1 Chart` = ?)) AND ((? = 1 AND `S"& _ 
                "pring2 Type` IS NULL) OR (`Spring2 Type` = ?)) AND ((? = 1 AND `Spring2 Random1`"& _ 
                " IS NULL) OR (`Spring2 Random1` = ?)) AND ((? = 1 AND `Spring2 Random2` IS NULL)"& _ 
                " OR (`Spring2 Random2` = ?)) AND ((? = 1 AND `Spring2 Number` IS NULL) OR (`Spri"& _ 
                "ng2 Number` = ?)) AND ((? = 1 AND `Spring2 Chart` IS NULL) OR (`Spring2 Chart` ="& _ 
                " ?)) AND ((? = 1 AND `Spring3 Type` IS NULL) OR (`Spring3 Type` = ?)) AND ((? = "& _ 
                "1 AND `Spring3 Random1` IS NULL) OR (`Spring3 Random1` = ?)) AND ((? = 1 AND `Sp"& _ 
                "ring3 Random2` IS NULL) OR (`Spring3 Random2` = ?)) AND ((? = 1 AND `Spring3 Num"& _ 
                "ber` IS NULL) OR (`Spring3 Number` = ?)) AND ((? = 1 AND `Spring3 Chart` IS NULL"& _ 
                ") OR (`Spring3 Chart` = ?)) AND ((? = 1 AND `Spring4 Type` IS NULL) OR (`Spring4"& _ 
                " Type` = ?)) AND ((? = 1 AND `Spring4 Random1` IS NULL) OR (`Spring4 Random1` = "& _ 
                "?)) AND ((? = 1 AND `Spring4 Random2` IS NULL) OR (`Spring4 Random2` = ?)) AND ("& _ 
                "(? = 1 AND `Spring4 Number` IS NULL) OR (`Spring4 Number` = ?)) AND ((? = 1 AND "& _ 
                "`Spring4 Chart` IS NULL) OR (`Spring4 Chart` = ?)) AND ((? = 1 AND `Spring5 Type"& _ 
                "` IS NULL) OR (`Spring5 Type` = ?)) AND ((? = 1 AND `Spring5 Random1` IS NULL) O"& _ 
                "R (`Spring5 Random1` = ?)) AND ((? = 1 AND `Spring5 Random2` IS NULL) OR (`Sprin"& _ 
                "g5 Random2` = ?)) AND ((? = 1 AND `Spring5 Number` IS NULL) OR (`Spring5 Number`"& _ 
                " = ?)) AND ((? = 1 AND `Spring5 Chart` IS NULL) OR (`Spring5 Chart` = ?)) AND (("& _ 
                "? = 1 AND `Spring6 Type` IS NULL) OR (`Spring6 Type` = ?)) AND ((? = 1 AND `Spri"& _ 
                "ng6 Random1` IS NULL) OR (`Spring6 Random1` = ?)) AND ((? = 1 AND `Spring6 Rando"& _ 
                "m2` IS NULL) OR (`Spring6 Random2` = ?)) AND ((? = 1 AND `Spring6 Number` IS NUL"& _ 
                "L) OR (`Spring6 Number` = ?)) AND ((? = 1 AND `Spring6 Chart` IS NULL) OR (`Spri"& _ 
                "ng6 Chart` = ?)) AND ((? = 1 AND `Spring7 Type` IS NULL) OR (`Spring7 Type` = ?)"& _ 
                ") AND ((? = 1 AND `Spring7 Random1` IS NULL) OR (`Spring7 Random1` = ?)) AND ((?"& _ 
                " = 1 AND `Spring7 Random2` IS NULL) OR (`Spring7 Random2` = ?)) AND ((? = 1 AND "& _ 
                "`Spring7 Number` IS NULL) OR (`Spring7 Number` = ?)) AND ((? = 1 AND `Spring7 Ch"& _ 
                "art` IS NULL) OR (`Spring7 Chart` = ?)) AND ((? = 1 AND `Top1 Type` IS NULL) OR "& _ 
                "(`Top1 Type` = ?)) AND ((? = 1 AND `Top1 Random1` IS NULL) OR (`Top1 Random1` = "& _ 
                "?)) AND ((? = 1 AND `Top1 Random2` IS NULL) OR (`Top1 Random2` = ?)) AND ((? = 1"& _ 
                " AND `Top1 Number` IS NULL) OR (`Top1 Number` = ?)) AND ((? = 1 AND `Top1 Chart`"& _ 
                " IS NULL) OR (`Top1 Chart` = ?)) AND ((? = 1 AND `Top2 Type` IS NULL) OR (`Top2 "& _ 
                "Type` = ?)) AND ((? = 1 AND `Top2 Random1` IS NULL) OR (`Top2 Random1` = ?)) AND"& _ 
                " ((? = 1 AND `Top2 Random2` IS NULL) OR (`Top2 Random2` = ?)) AND ((? = 1 AND `T"& _ 
                "op2 Number` IS NULL) OR (`Top2 Number` = ?)) AND ((? = 1 AND `Top2 Chart` IS NUL"& _ 
                "L) OR (`Top2 Chart` = ?)) AND ((? = 1 AND `Top3 Type` IS NULL) OR (`Top3 Type` ="& _ 
                " ?)) AND ((? = 1 AND `Top3 Random1` IS NULL) OR (`Top3 Random1` = ?)) AND ((? = "& _ 
                "1 AND `Top3 Random2` IS NULL) OR (`Top3 Random2` = ?)) AND ((? = 1 AND `Top3 Num"& _ 
                "ber` IS NULL) OR (`Top3 Number` = ?)) AND ((? = 1 AND `Top3 Chart` IS NULL) OR ("& _ 
                "`Top3 Chart` = ?)) AND ((? = 1 AND `Top4 Type` IS NULL) OR (`Top4 Type` = ?)) AN"& _ 
                "D ((? = 1 AND `Top4 Random1` IS NULL) OR (`Top4 Random1` = ?)) AND ((? = 1 AND `"& _ 
                "Top4 Random2` IS NULL) OR (`Top4 Random2` = ?)) AND ((? = 1 AND `Top4 Number` IS"& _ 
                " NULL) OR (`Top4 Number` = ?)) AND ((? = 1 AND `Top4 Chart` IS NULL) OR (`Top4 C"& _ 
                "hart` = ?)) AND ((? = 1 AND `Top5 Type` IS NULL) OR (`Top5 Type` = ?)) AND ((? ="& _ 
                " 1 AND `Top5 Random1` IS NULL) OR (`Top5 Random1` = ?)) AND ((? = 1 AND `Top5 Ra"& _ 
                "ndom2` IS NULL) OR (`Top5 Random2` = ?)) AND ((? = 1 AND `Top5 Number` IS NULL) "& _ 
                "OR (`Top5 Number` = ?)) AND ((? = 1 AND `Top5 Chart` IS NULL) OR (`Top5 Chart` ="& _ 
                " ?)) AND ((? = 1 AND `Top6 Type` IS NULL) OR (`Top6 Type` = ?)) AND ((? = 1 AND "& _ 
                "`Top6 Random1` IS NULL) OR (`Top6 Random1` = ?)) AND ((? = 1 AND `Top6 Random2` "& _ 
                "IS NULL) OR (`Top6 Random2` = ?)) AND ((? = 1 AND `Top6 Number` IS NULL) OR (`To"& _ 
                "p6 Number` = ?)) AND ((? = 1 AND `Top6 Chart` IS NULL) OR (`Top6 Chart` = ?)) AN"& _ 
                "D ((? = 1 AND `Top7 Type` IS NULL) OR (`Top7 Type` = ?)) AND ((? = 1 AND `Top7 R"& _ 
                "andom1` IS NULL) OR (`Top7 Random1` = ?)) AND ((? = 1 AND `Top7 Random2` IS NULL"& _ 
                ") OR (`Top7 Random2` = ?)) AND ((? = 1 AND `Top7 Number` IS NULL) OR (`Top7 Numb"& _ 
                "er` = ?)) AND ((? = 1 AND `Top7 Chart` IS NULL) OR (`Top7 Chart` = ?)) AND ((? ="& _ 
                " 1 AND `Top8 Type` IS NULL) OR (`Top8 Type` = ?)) AND ((? = 1 AND `Top8 Random1`"& _ 
                " IS NULL) OR (`Top8 Random1` = ?)) AND ((? = 1 AND `Top8 Random2` IS NULL) OR (`"& _ 
                "Top8 Random2` = ?)) AND ((? = 1 AND `Top8 Number` IS NULL) OR (`Top8 Number` = ?"& _ 
                ")) AND ((? = 1 AND `Top8 Chart` IS NULL) OR (`Top8 Chart` = ?)) AND ((? = 1 AND "& _ 
                "`Mid1 Type` IS NULL) OR (`Mid1 Type` = ?)) AND ((? = 1 AND `Mid1 Random1` IS NUL"& _ 
                "L) OR (`Mid1 Random1` = ?)) AND ((? = 1 AND `Mid1 Random2` IS NULL) OR (`Mid1 Ra"& _ 
                "ndom2` = ?)) AND ((? = 1 AND `Mid1 Number` IS NULL) OR (`Mid1 Number` = ?)) AND "& _ 
                "((? = 1 AND `Mid1 Chart` IS NULL) OR (`Mid1 Chart` = ?)) AND ((? = 1 AND `Mid2 T"& _ 
                "ype` IS NULL) OR (`Mid2 Type` = ?)) AND ((? = 1 AND `Mid2 Random1` IS NULL) OR ("& _ 
                "`Mid2 Random1` = ?)) AND ((? = 1 AND `Mid2 Random2` IS NULL) OR (`Mid2 Random2` "& _ 
                "= ?)) AND ((? = 1 AND `Mid2 Number` IS NULL) OR (`Mid2 Number` = ?)) AND ((? = 1"& _ 
                " AND `Mid2 Chart` IS NULL) OR (`Mid2 Chart` = ?)) AND ((? = 1 AND `Mid3 Type` IS"& _ 
                " NULL) OR (`Mid3 Type` = ?)) AND ((? = 1 AND `Mid3 Random1` IS NULL) OR (`Mid3 R"& _ 
                "andom1` = ?)) AND ((? = 1 AND `Mid3 Random2` IS NULL) OR (`Mid3 Random2` = ?)) A"& _ 
                "ND ((? = 1 AND `Mid3 Number` IS NULL) OR (`Mid3 Number` = ?)) AND ((? = 1 AND `M"& _ 
                "id3 Chart` IS NULL) OR (`Mid3 Chart` = ?)) AND ((? = 1 AND `Mid4 Type` IS NULL) "& _ 
                "OR (`Mid4 Type` = ?)) AND ((? = 1 AND `Mid4 Random1` IS NULL) OR (`Mid4 Random1`"& _ 
                " = ?)) AND ((? = 1 AND `Mid4 Random2` IS NULL) OR (`Mid4 Random2` = ?)) AND ((? "& _ 
                "= 1 AND `Mid4 Number` IS NULL) OR (`Mid4 Number` = ?)) AND ((? = 1 AND `Mid4 Cha"& _ 
                "rt` IS NULL) OR (`Mid4 Chart` = ?)) AND ((? = 1 AND `Mid5 Type` IS NULL) OR (`Mi"& _ 
                "d5 Type` = ?)) AND ((? = 1 AND `Mid5 Random1` IS NULL) OR (`Mid5 Random1` = ?)) "& _ 
                "AND ((? = 1 AND `Mid5 Random2` IS NULL) OR (`Mid5 Random2` = ?)) AND ((? = 1 AND"& _ 
                " `Mid5 Number` IS NULL) OR (`Mid5 Number` = ?)) AND ((? = 1 AND `Mid5 Chart` IS "& _ 
                "NULL) OR (`Mid5 Chart` = ?)) AND ((? = 1 AND `Mid6 Type` IS NULL) OR (`Mid6 Type"& _ 
                "` = ?)) AND ((? = 1 AND `Mid6 Random1` IS NULL) OR (`Mid6 Random1` = ?)) AND ((?"& _ 
                " = 1 AND `Mid6 Random2` IS NULL) OR (`Mid6 Random2` = ?)) AND ((? = 1 AND `Mid6 "& _ 
                "Number` IS NULL) OR (`Mid6 Number` = ?)) AND ((? = 1 AND `Mid6 Chart` IS NULL) O"& _ 
                "R (`Mid6 Chart` = ?)) AND ((? = 1 AND `Mid7 Type` IS NULL) OR (`Mid7 Type` = ?))"& _ 
                " AND ((? = 1 AND `Mid7 Random1` IS NULL) OR (`Mid7 Random1` = ?)) AND ((? = 1 AN"& _ 
                "D `Mid7 Random2` IS NULL) OR (`Mid7 Random2` = ?)) AND ((? = 1 AND `Mid7 Number`"& _ 
                " IS NULL) OR (`Mid7 Number` = ?)) AND ((? = 1 AND `Mid7 Chart` IS NULL) OR (`Mid"& _ 
                "7 Chart` = ?)) AND ((? = 1 AND `Bot1 Type` IS NULL) OR (`Bot1 Type` = ?)) AND (("& _ 
                "? = 1 AND `Bot1 Random1` IS NULL) OR (`Bot1 Random1` = ?)) AND ((? = 1 AND `Bot1"& _ 
                " Random2` IS NULL) OR (`Bot1 Random2` = ?)) AND ((? = 1 AND `Bot1 Number` IS NUL"& _ 
                "L) OR (`Bot1 Number` = ?)) AND ((? = 1 AND `Bot1 Chart` IS NULL) OR (`Bot1 Chart"& _ 
                "` = ?)) AND ((? = 1 AND `Bot2 Type` IS NULL) OR (`Bot2 Type` = ?)) AND ((? = 1 A"& _ 
                "ND `Bot2 Random1` IS NULL) OR (`Bot2 Random1` = ?)) AND ((? = 1 AND `Bot2 Random"& _ 
                "2` IS NULL) OR (`Bot2 Random2` = ?)) AND ((? = 1 AND `Bot2 Number` IS NULL) OR ("& _ 
                "`Bot2 Number` = ?)) AND ((? = 1 AND `Bot2 Chart` IS NULL) OR (`Bot2 Chart` = ?))"& _ 
                " AND ((? = 1 AND `Bot3 Type` IS NULL) OR (`Bot3 Type` = ?)) AND ((? = 1 AND `Bot"& _ 
                "3 Random1` IS NULL) OR (`Bot3 Random1` = ?)) AND ((? = 1 AND `Bot3 Random2` IS N"& _ 
                "ULL) OR (`Bot3 Random2` = ?)) AND ((? = 1 AND `Bot3 Number` IS NULL) OR (`Bot3 N"& _ 
                "umber` = ?)) AND ((? = 1 AND `Bot3 Chart` IS NULL) OR (`Bot3 Chart` = ?)) AND (("& _ 
                "? = 1 AND `Bot4 Type` IS NULL) OR (`Bot4 Type` = ?)) AND ((? = 1 AND `Bot4 Rando"& _ 
                "m1` IS NULL) OR (`Bot4 Random1` = ?)) AND ((? = 1 AND `Bot4 Random2` IS NULL) OR"& _ 
                " (`Bot4 Random2` = ?)) AND ((? = 1 AND `Bot4 Number` IS NULL) OR (`Bot4 Number` "& _ 
                "= ?)) AND ((? = 1 AND `Bot4 Chart` IS NULL) OR (`Bot4 Chart` = ?)) AND ((? = 1 A"& _ 
                "ND `Bot5 Type` IS NULL) OR (`Bot5 Type` = ?)) AND ((? = 1 AND `Bot5 Random1` IS "& _ 
                "NULL) OR (`Bot5 Random1` = ?)) AND ((? = 1 AND `Bot5 Random2` IS NULL) OR (`Bot5"& _ 
                " Random2` = ?)) AND ((? = 1 AND `Bot5 Number` IS NULL) OR (`Bot5 Number` = ?)) A"& _ 
                "ND ((? = 1 AND `Bot5 Chart` IS NULL) OR (`Bot5 Chart` = ?)) AND ((? = 1 AND `Bot"& _ 
                "6 Type` IS NULL) OR (`Bot6 Type` = ?)) AND ((? = 1 AND `Bot6 Random1` IS NULL) O"& _ 
                "R (`Bot6 Random1` = ?)) AND ((? = 1 AND `Bot6 Random2` IS NULL) OR (`Bot6 Random"& _ 
                "2` = ?)) AND ((? = 1 AND `Bot6 Number` IS NULL) OR (`Bot6 Number` = ?)) AND ((? "& _ 
                "= 1 AND `Bot6 Chart` IS NULL) OR (`Bot6 Chart` = ?)) AND ((? = 1 AND `Bot7 Type`"& _ 
                " IS NULL) OR (`Bot7 Type` = ?)) AND ((? = 1 AND `Bot7 Random1` IS NULL) OR (`Bot"& _ 
                "7 Random1` = ?)) AND ((? = 1 AND `Bot7 Random2` IS NULL) OR (`Bot7 Random2` = ?)"& _ 
                ") AND ((? = 1 AND `Bot7 Number` IS NULL) OR (`Bot7 Number` = ?)) AND ((? = 1 AND"& _ 
                " `Bot7 Chart` IS NULL) OR (`Bot7 Chart` = ?)) AND ((? = 1 AND `Use Mid Tum` IS N"& _ 
                "ULL) OR (`Use Mid Tum` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring1_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring1_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring1_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring1_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring1_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring2_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring2_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring2_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring2_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring2_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring3_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring3_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring3_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring3_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring3_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring4_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring4_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring4_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring4_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring4_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring5_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring5_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring5_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring5_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring5_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring6_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring6_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring6_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring6_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring6_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring7_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring7_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring7_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring7_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Spring7_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top1_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top1_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top1_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top1_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top1_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top2_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top2_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top2_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top2_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top2_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top3_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top3_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top3_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top3_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top3_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top4_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top4_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top4_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top4_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top4_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top5_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top5_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top5_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top5_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top5_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top6_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top6_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top6_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top6_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top6_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top7_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top7_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top7_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top7_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top7_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top8_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top8_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top8_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top8_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Top8_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid1_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid1_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid1_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid1_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid1_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid2_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid2_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid2_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid2_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid2_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid3_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid3_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid3_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid3_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid3_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid4_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid4_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid4_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid4_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid4_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid5_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid5_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid5_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid5_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid5_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid6_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid6_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid6_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid6_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid6_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid7_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid7_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid7_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid7_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mid7_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot1_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot1_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot1_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot1_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot1_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot2_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot2_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot2_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot2_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot2_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot3_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot3_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot3_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot3_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot3_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot4_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot4_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot4_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot4_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot4_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot5_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot5_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot5_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot5_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot5_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot6_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot6_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot6_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot6_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot6_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot7_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot7_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Random1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot7_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Random2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot7_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bot7_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Chart", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Use_Mid_Tum", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Use Mid Tum", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Tumbler_Kit", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring1_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring1_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring1_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring1_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring1_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring1_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring1_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring1_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring1_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring1_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring1 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring2_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring2_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring2_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring2_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring2_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring2_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring2_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring2_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring2_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring2_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring2 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring3_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring3_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring3_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring3_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring3_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring3_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring3_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring3_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring3_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring3_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring3 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring4_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring4_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring4_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring4_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring4_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring4_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring4_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring4_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring4_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring4_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring4 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring5_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring5_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring5_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring5_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring5_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring5_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring5_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring5_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring5_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring5_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring5 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring6_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring6_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring6_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring6_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring6_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring6_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring6_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring6_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring6_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring6_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring6 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring7_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring7_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring7_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring7_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring7_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring7_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring7_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring7_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Spring7_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Spring7_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Spring7 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top1_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top1_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top1_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top1_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top1_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top1_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top1_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top1_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top1_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top1_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top1 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top2_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top2_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top2_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top2_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top2_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top2_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top2_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top2_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top2_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top2_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top2 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top3_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top3_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top3_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top3_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top3_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top3_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top3_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top3_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top3_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top3_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top3 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top4_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top4_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top4_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top4_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top4_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top4_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top4_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top4_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top4_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top4_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top4 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top5_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top5_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top5_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top5_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top5_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top5_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top5_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top5_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top5_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top5_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top5 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top6_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top6_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top6_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top6_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top6_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top6_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top6_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top6_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top6_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top6_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top6 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top7_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top7_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top7_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top7_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top7_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top7_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top7_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top7_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top7_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top7_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top7 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top8_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top8_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top8_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top8_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top8_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top8_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top8_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top8_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Top8_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Top8_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Top8 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid1_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid1_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid1_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid1_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid1_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid1_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid1_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid1_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid1_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid1_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid1 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid2_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid2_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid2_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid2_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid2_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid2_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid2_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid2_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid2_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid2_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid2 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid3_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid3_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid3_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid3_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid3_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid3_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid3_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid3_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid3_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid3_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid3 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid4_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid4_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid4_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid4_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid4_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid4_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid4_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid4_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid4_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid4_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid4 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid5_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid5_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid5_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid5_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid5_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid5_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid5_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid5_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid5_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid5_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid5 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid6_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid6_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid6_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid6_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid6_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid6_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid6_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid6_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid6_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid6_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid6 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid7_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid7_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid7_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid7_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid7_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid7_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid7_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid7_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Mid7_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Mid7_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mid7 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot1_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot1_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot1_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot1_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot1_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot1_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot1_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot1_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot1_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot1_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot1 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot2_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot2_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot2_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot2_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot2_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot2_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot2_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot2_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot2_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot2_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot2 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot3_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot3_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot3_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot3_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot3_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot3_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot3_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot3_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot3_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot3_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot3 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot4_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot4_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot4_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot4_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot4_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot4_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot4_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot4_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot4_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot4_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot4 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot5_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot5_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot5_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot5_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot5_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot5_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot5_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot5_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot5_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot5_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot5 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot6_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot6_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot6_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot6_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot6_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot6_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot6_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot6_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot6_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot6_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot6 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot7_Type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot7_Type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot7_Random1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Random1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot7_Random1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Random1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot7_Random2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Random2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot7_Random2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Random2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot7_Number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot7_Number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Bot7_Chart", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Chart", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Bot7_Chart", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bot7 Chart", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Use_Mid_Tum", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Use Mid Tum", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Use_Mid_Tum", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Use Mid Tum", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.MfgControl.AdvancedHMI.My.MySettings.Default.NCLRecipeConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(145) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT [Tumbler Kit], [Spring1 Type], [Spring1 Random1], [Spring1 Random2], [Spri"& _ 
                "ng1 Number], [Spring1 Chart], [Spring2 Type], [Spring2 Random1], [Spring2 Random"& _ 
                "2], [Spring2 Number], [Spring2 Chart], [Spring3 Type], [Spring3 Random1], [Sprin"& _ 
                "g3 Random2], [Spring3 Number], [Spring3 Chart], [Spring4 Type], [Spring4 Random1"& _ 
                "], [Spring4 Random2], [Spring4 Number], [Spring4 Chart], [Spring5 Type], [Spring"& _ 
                "5 Random1], [Spring5 Random2], [Spring5 Number], [Spring5 Chart], [Spring6 Type]"& _ 
                ", [Spring6 Random1], [Spring6 Random2], [Spring6 Number], [Spring6 Chart], [Spri"& _ 
                "ng7 Type], [Spring7 Random1], [Spring7 Random2], [Spring7 Number], [Spring7 Char"& _ 
                "t], [Top1 Type], [Top1 Random1], [Top1 Random2], [Top1 Number], [Top1 Chart], [T"& _ 
                "op2 Type], [Top2 Random1], [Top2 Random2], [Top2 Number], [Top2 Chart], [Top3 Ty"& _ 
                "pe], [Top3 Random1], [Top3 Random2], [Top3 Number], [Top3 Chart], [Top4 Type], ["& _ 
                "Top4 Random1], [Top4 Random2], [Top4 Number], [Top4 Chart], [Top5 Type], [Top5 R"& _ 
                "andom1], [Top5 Random2], [Top5 Number], [Top5 Chart], [Top6 Type], [Top6 Random1"& _ 
                "], [Top6 Random2], [Top6 Number], [Top6 Chart], [Top7 Type], [Top7 Random1], [To"& _ 
                "p7 Random2], [Top7 Number], [Top7 Chart], [Top8 Type], [Top8 Random1], [Top8 Ran"& _ 
                "dom2], [Top8 Number], [Top8 Chart], [Mid1 Type], [Mid1 Random1], [Mid1 Random2],"& _ 
                " [Mid1 Number], [Mid1 Chart], [Mid2 Type], [Mid2 Random1], [Mid2 Random2], [Mid2"& _ 
                " Number], [Mid2 Chart], [Mid3 Type], [Mid3 Random1], [Mid3 Random2], [Mid3 Numbe"& _ 
                "r], [Mid3 Chart], [Mid4 Type], [Mid4 Random1], [Mid4 Random2], [Mid4 Number], [M"& _ 
                "id4 Chart], [Mid5 Type], [Mid5 Random1], [Mid5 Random2], [Mid5 Number], [Mid5 Ch"& _ 
                "art], [Mid6 Type], [Mid6 Random1], [Mid6 Random2], [Mid6 Number], [Mid6 Chart], "& _ 
                "[Mid7 Type], [Mid7 Random1], [Mid7 Random2], [Mid7 Number], [Mid7 Chart], [Bot1 "& _ 
                "Type], [Bot1 Random1], [Bot1 Random2], [Bot1 Number], [Bot1 Chart], [Bot2 Type],"& _ 
                " [Bot2 Random1], [Bot2 Random2], [Bot2 Number], [Bot2 Chart], [Bot3 Type], [Bot3"& _ 
                " Random1], [Bot3 Random2], [Bot3 Number], [Bot3 Chart], [Bot4 Type], [Bot4 Rando"& _ 
                "m1], [Bot4 Random2], [Bot4 Number], [Bot4 Chart], [Bot5 Type], [Bot5 Random1], ["& _ 
                "Bot5 Random2], [Bot5 Number], [Bot5 Chart], [Bot6 Type], [Bot6 Random1], [Bot6 R"& _ 
                "andom2], [Bot6 Number], [Bot6 Chart], [Bot7 Type], [Bot7 Random1], [Bot7 Random2"& _ 
                "], [Bot7 Number], [Bot7 Chart], [Use Mid Tum] FROM [Tumbler Kit]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT [Bot1 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT [Bot1 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT [Bot1 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT [Bot1 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(5) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT [Bot1 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT [Bot2 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(7) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT [Bot2 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(8) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT [Bot2 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(9) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT [Bot2 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(10) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(10).Connection = Me.Connection
            Me._commandCollection(10).CommandText = "SELECT [Bot2 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(10).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(11) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(11).Connection = Me.Connection
            Me._commandCollection(11).CommandText = "SELECT [Bot3 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(11).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(12) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(12).Connection = Me.Connection
            Me._commandCollection(12).CommandText = "SELECT [Bot3 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(12).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(13) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(13).Connection = Me.Connection
            Me._commandCollection(13).CommandText = "SELECT [Bot3 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(13).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(14) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(14).Connection = Me.Connection
            Me._commandCollection(14).CommandText = "SELECT [Bot3 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(14).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(15) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(15).Connection = Me.Connection
            Me._commandCollection(15).CommandText = "SELECT [Bot3 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(15).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(16) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(16).Connection = Me.Connection
            Me._commandCollection(16).CommandText = "SELECT [Bot4 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(16).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(17) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(17).Connection = Me.Connection
            Me._commandCollection(17).CommandText = "SELECT [Bot4 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(17).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(17).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(18) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(18).Connection = Me.Connection
            Me._commandCollection(18).CommandText = "SELECT [Bot4 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(18).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(18).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(19) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(19).Connection = Me.Connection
            Me._commandCollection(19).CommandText = "SELECT [Bot4 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(19).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(19).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(20) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(20).Connection = Me.Connection
            Me._commandCollection(20).CommandText = "SELECT [Bot4 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(20).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(20).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(21) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(21).Connection = Me.Connection
            Me._commandCollection(21).CommandText = "SELECT [Bot5 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(21).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(21).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(22) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(22).Connection = Me.Connection
            Me._commandCollection(22).CommandText = "SELECT [Bot5 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(22).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(23) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(23).Connection = Me.Connection
            Me._commandCollection(23).CommandText = "SELECT [Bot5 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(23).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(23).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(24).Connection = Me.Connection
            Me._commandCollection(24).CommandText = "SELECT [Bot5 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(24).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(25) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(25).Connection = Me.Connection
            Me._commandCollection(25).CommandText = "SELECT [Bot5 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(25).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(25).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(26) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(26).Connection = Me.Connection
            Me._commandCollection(26).CommandText = "SELECT [Bot6 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(26).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(26).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(27) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(27).Connection = Me.Connection
            Me._commandCollection(27).CommandText = "SELECT [Bot6 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(27).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(27).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(28) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(28).Connection = Me.Connection
            Me._commandCollection(28).CommandText = "SELECT [Bot6 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(28).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(28).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(29) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(29).Connection = Me.Connection
            Me._commandCollection(29).CommandText = "SELECT [Bot6 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(29).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(29).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(30) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(30).Connection = Me.Connection
            Me._commandCollection(30).CommandText = "SELECT [Bot6 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(30).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(30).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(31) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(31).Connection = Me.Connection
            Me._commandCollection(31).CommandText = "SELECT [Bot7 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(31).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(31).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(32) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(32).Connection = Me.Connection
            Me._commandCollection(32).CommandText = "SELECT [Bot7 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(32).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(32).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(33) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(33).Connection = Me.Connection
            Me._commandCollection(33).CommandText = "SELECT [Bot7 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(33).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(33).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(34) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(34).Connection = Me.Connection
            Me._commandCollection(34).CommandText = "SELECT [Bot7 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(34).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(34).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(35) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(35).Connection = Me.Connection
            Me._commandCollection(35).CommandText = "SELECT [Bot7 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(35).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(35).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(36) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(36).Connection = Me.Connection
            Me._commandCollection(36).CommandText = "SELECT [Mid1 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(36).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(36).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(37) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(37).Connection = Me.Connection
            Me._commandCollection(37).CommandText = "SELECT [Mid1 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(37).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(37).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(38) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(38).Connection = Me.Connection
            Me._commandCollection(38).CommandText = "SELECT [Mid1 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(38).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(38).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(39) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(39).Connection = Me.Connection
            Me._commandCollection(39).CommandText = "SELECT [Mid1 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(39).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(39).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(40) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(40).Connection = Me.Connection
            Me._commandCollection(40).CommandText = "SELECT [Mid1 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(40).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(40).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(41) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(41).Connection = Me.Connection
            Me._commandCollection(41).CommandText = "SELECT [Mid2 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(41).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(41).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(42) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(42).Connection = Me.Connection
            Me._commandCollection(42).CommandText = "SELECT [Mid2 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(42).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(42).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(43) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(43).Connection = Me.Connection
            Me._commandCollection(43).CommandText = "SELECT [Mid2 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(43).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(43).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(44) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(44).Connection = Me.Connection
            Me._commandCollection(44).CommandText = "SELECT [Mid2 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(44).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(44).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(45) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(45).Connection = Me.Connection
            Me._commandCollection(45).CommandText = "SELECT [Mid2 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(45).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(45).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(46) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(46).Connection = Me.Connection
            Me._commandCollection(46).CommandText = "SELECT [Mid3 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(46).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(46).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(47) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(47).Connection = Me.Connection
            Me._commandCollection(47).CommandText = "SELECT [Mid 3 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(47).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(47).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(48) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(48).Connection = Me.Connection
            Me._commandCollection(48).CommandText = "SELECT [Mid3 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(48).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(48).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(49) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(49).Connection = Me.Connection
            Me._commandCollection(49).CommandText = "SELECT [Mid3 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(49).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(49).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(50) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(50).Connection = Me.Connection
            Me._commandCollection(50).CommandText = "SELECT [Mid3 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(50).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(50).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(51) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(51).Connection = Me.Connection
            Me._commandCollection(51).CommandText = "SELECT [Mid 4 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(51).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(51).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(52) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(52).Connection = Me.Connection
            Me._commandCollection(52).CommandText = "SELECT [Mid4 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(52).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(52).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(53) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(53).Connection = Me.Connection
            Me._commandCollection(53).CommandText = "SELECT [Mid4 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(53).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(53).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(54) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(54).Connection = Me.Connection
            Me._commandCollection(54).CommandText = "SELECT [Mid4 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(54).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(54).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(55) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(55).Connection = Me.Connection
            Me._commandCollection(55).CommandText = "SELECT [Mid4 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(55).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(55).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(56) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(56).Connection = Me.Connection
            Me._commandCollection(56).CommandText = "SELECT [Mid5 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(56).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(56).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(57) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(57).Connection = Me.Connection
            Me._commandCollection(57).CommandText = "SELECT [Mid5 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(57).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(57).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(58) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(58).Connection = Me.Connection
            Me._commandCollection(58).CommandText = "SELECT [Mid5 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(58).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(58).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(59) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(59).Connection = Me.Connection
            Me._commandCollection(59).CommandText = "SELECT [Mid5 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(59).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(59).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(60) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(60).Connection = Me.Connection
            Me._commandCollection(60).CommandText = "SELECT [Mid5 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(60).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(60).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(61) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(61).Connection = Me.Connection
            Me._commandCollection(61).CommandText = "SELECT [Mid6 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(61).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(61).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(62) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(62).Connection = Me.Connection
            Me._commandCollection(62).CommandText = "SELECT [Mid6 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(62).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(62).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(63).Connection = Me.Connection
            Me._commandCollection(63).CommandText = "SELECT [Mid6 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(63).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(64) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(64).Connection = Me.Connection
            Me._commandCollection(64).CommandText = "SELECT [Mid6 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(64).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(64).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(65) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(65).Connection = Me.Connection
            Me._commandCollection(65).CommandText = "SELECT [Mid6 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(65).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(65).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(66) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(66).Connection = Me.Connection
            Me._commandCollection(66).CommandText = "SELECT [Mid7 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(66).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(66).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(67) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(67).Connection = Me.Connection
            Me._commandCollection(67).CommandText = "SELECT [Mid7 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(67).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(67).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(68) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(68).Connection = Me.Connection
            Me._commandCollection(68).CommandText = "SELECT [Mid7 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(68).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(68).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(69) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(69).Connection = Me.Connection
            Me._commandCollection(69).CommandText = "SELECT [Mid7 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(69).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(69).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(70) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(70).Connection = Me.Connection
            Me._commandCollection(70).CommandText = "SELECT [Mid7 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(70).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(70).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(71) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(71).Connection = Me.Connection
            Me._commandCollection(71).CommandText = "SELECT [Spring1 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(71).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(71).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(72) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(72).Connection = Me.Connection
            Me._commandCollection(72).CommandText = "SELECT [Spring1 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(72).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(72).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(73) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(73).Connection = Me.Connection
            Me._commandCollection(73).CommandText = "SELECT [Spring1 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(73).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(73).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(74) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(74).Connection = Me.Connection
            Me._commandCollection(74).CommandText = "SELECT [Spring1 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(74).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(74).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(75) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(75).Connection = Me.Connection
            Me._commandCollection(75).CommandText = "SELECT [Spring1 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(75).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(75).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(76) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(76).Connection = Me.Connection
            Me._commandCollection(76).CommandText = "SELECT [Spring2 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(76).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(76).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(77) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(77).Connection = Me.Connection
            Me._commandCollection(77).CommandText = "SELECT [Spring2 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(77).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(77).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(78) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(78).Connection = Me.Connection
            Me._commandCollection(78).CommandText = "SELECT [Spring2 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(78).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(78).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(79) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(79).Connection = Me.Connection
            Me._commandCollection(79).CommandText = "SELECT [Spring2 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(79).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(79).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(80) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(80).Connection = Me.Connection
            Me._commandCollection(80).CommandText = "SELECT [Spring2 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(80).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(80).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(81) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(81).Connection = Me.Connection
            Me._commandCollection(81).CommandText = "SELECT [Spring3 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(81).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(81).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(82) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(82).Connection = Me.Connection
            Me._commandCollection(82).CommandText = "SELECT [Spring3 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(82).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(82).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(83) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(83).Connection = Me.Connection
            Me._commandCollection(83).CommandText = "SELECT [Spring3 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(83).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(83).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(84) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(84).Connection = Me.Connection
            Me._commandCollection(84).CommandText = "SELECT [Spring3 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(84).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(84).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(85) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(85).Connection = Me.Connection
            Me._commandCollection(85).CommandText = "SELECT [Spring3 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(85).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(85).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(86) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(86).Connection = Me.Connection
            Me._commandCollection(86).CommandText = "SELECT [Spring4 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(86).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(86).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(87) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(87).Connection = Me.Connection
            Me._commandCollection(87).CommandText = "SELECT [Spring4 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(87).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(87).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(88) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(88).Connection = Me.Connection
            Me._commandCollection(88).CommandText = "SELECT [Spring4 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(88).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(88).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(89) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(89).Connection = Me.Connection
            Me._commandCollection(89).CommandText = "SELECT [Spring4 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(89).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(89).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(90) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(90).Connection = Me.Connection
            Me._commandCollection(90).CommandText = "SELECT [Spring4 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(90).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(90).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(91) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(91).Connection = Me.Connection
            Me._commandCollection(91).CommandText = "SELECT [Spring5 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(91).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(91).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(92) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(92).Connection = Me.Connection
            Me._commandCollection(92).CommandText = "SELECT [Spring5 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(92).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(92).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(93) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(93).Connection = Me.Connection
            Me._commandCollection(93).CommandText = "SELECT [Spring5 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(93).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(93).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(94) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(94).Connection = Me.Connection
            Me._commandCollection(94).CommandText = "SELECT [Spring5 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(94).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(94).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(95) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(95).Connection = Me.Connection
            Me._commandCollection(95).CommandText = "SELECT [Spring5 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(95).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(95).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(96) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(96).Connection = Me.Connection
            Me._commandCollection(96).CommandText = "SELECT [Spring6 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(96).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(96).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(97) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(97).Connection = Me.Connection
            Me._commandCollection(97).CommandText = "SELECT [Spring6 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(97).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(97).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(98) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(98).Connection = Me.Connection
            Me._commandCollection(98).CommandText = "SELECT [Spring6 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(98).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(98).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(99) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(99).Connection = Me.Connection
            Me._commandCollection(99).CommandText = "SELECT [Spring6 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(99).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(99).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(100) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(100).Connection = Me.Connection
            Me._commandCollection(100).CommandText = "SELECT [Spring6 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(100).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(100).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(101) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(101).Connection = Me.Connection
            Me._commandCollection(101).CommandText = "SELECT [Spring7 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(101).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(101).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(102) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(102).Connection = Me.Connection
            Me._commandCollection(102).CommandText = "SELECT [Spring7 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(102).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(102).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(103) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(103).Connection = Me.Connection
            Me._commandCollection(103).CommandText = "SELECT [Spring7 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(103).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(103).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(104) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(104).Connection = Me.Connection
            Me._commandCollection(104).CommandText = "SELECT [Spring7 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(104).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(104).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(105) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(105).Connection = Me.Connection
            Me._commandCollection(105).CommandText = "SELECT [Spring7 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(105).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(105).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(106) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(106).Connection = Me.Connection
            Me._commandCollection(106).CommandText = "SELECT [Top1 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(106).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(106).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(107) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(107).Connection = Me.Connection
            Me._commandCollection(107).CommandText = "SELECT [Top1 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(107).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(107).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(108) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(108).Connection = Me.Connection
            Me._commandCollection(108).CommandText = "SELECT [Top1 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(108).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(108).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(109) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(109).Connection = Me.Connection
            Me._commandCollection(109).CommandText = "SELECT [Top1 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(109).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(109).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(110) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(110).Connection = Me.Connection
            Me._commandCollection(110).CommandText = "SELECT [Top1 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(110).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(110).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(111) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(111).Connection = Me.Connection
            Me._commandCollection(111).CommandText = "SELECT [Top2 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(111).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(111).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(112) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(112).Connection = Me.Connection
            Me._commandCollection(112).CommandText = "SELECT [Top2 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(112).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(112).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(113) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(113).Connection = Me.Connection
            Me._commandCollection(113).CommandText = "SELECT [Top2 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(113).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(113).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(114) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(114).Connection = Me.Connection
            Me._commandCollection(114).CommandText = "SELECT [Top2 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(114).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(114).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(115) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(115).Connection = Me.Connection
            Me._commandCollection(115).CommandText = "SELECT [Top2 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(115).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(115).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(116) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(116).Connection = Me.Connection
            Me._commandCollection(116).CommandText = "SELECT [Top3 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(116).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(116).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(117) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(117).Connection = Me.Connection
            Me._commandCollection(117).CommandText = "SELECT [Top3 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(117).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(117).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(118) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(118).Connection = Me.Connection
            Me._commandCollection(118).CommandText = "SELECT [Top3 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(118).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(118).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(119) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(119).Connection = Me.Connection
            Me._commandCollection(119).CommandText = "SELECT [Top3 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(119).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(119).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(120) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(120).Connection = Me.Connection
            Me._commandCollection(120).CommandText = "SELECT [Top3 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(120).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(120).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(121) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(121).Connection = Me.Connection
            Me._commandCollection(121).CommandText = "SELECT [Top4 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(121).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(121).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(122) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(122).Connection = Me.Connection
            Me._commandCollection(122).CommandText = "SELECT [Top4 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(122).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(122).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(123) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(123).Connection = Me.Connection
            Me._commandCollection(123).CommandText = "SELECT [Top4 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(123).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(123).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(124) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(124).Connection = Me.Connection
            Me._commandCollection(124).CommandText = "SELECT [Top4 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(124).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(124).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(125) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(125).Connection = Me.Connection
            Me._commandCollection(125).CommandText = "SELECT [Top4 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(125).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(125).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(126) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(126).Connection = Me.Connection
            Me._commandCollection(126).CommandText = "SELECT [Top5 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(126).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(126).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(127) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(127).Connection = Me.Connection
            Me._commandCollection(127).CommandText = "SELECT [Top5 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(127).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(127).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(128) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(128).Connection = Me.Connection
            Me._commandCollection(128).CommandText = "SELECT [Top5 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(128).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(128).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(129) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(129).Connection = Me.Connection
            Me._commandCollection(129).CommandText = "SELECT [Top5 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(129).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(129).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(130) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(130).Connection = Me.Connection
            Me._commandCollection(130).CommandText = "SELECT [Top5 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(130).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(130).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(131) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(131).Connection = Me.Connection
            Me._commandCollection(131).CommandText = "SELECT [Top6 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(131).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(131).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(132) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(132).Connection = Me.Connection
            Me._commandCollection(132).CommandText = "SELECT [Top6 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(132).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(132).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(133) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(133).Connection = Me.Connection
            Me._commandCollection(133).CommandText = "SELECT [Top6 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(133).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(133).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(134) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(134).Connection = Me.Connection
            Me._commandCollection(134).CommandText = "SELECT [Top6 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(134).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(134).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(135) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(135).Connection = Me.Connection
            Me._commandCollection(135).CommandText = "SELECT [Top6 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(135).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(135).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(136) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(136).Connection = Me.Connection
            Me._commandCollection(136).CommandText = "SELECT [Top7 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(136).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(136).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(137) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(137).Connection = Me.Connection
            Me._commandCollection(137).CommandText = "SELECT [Top7 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(137).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(137).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(138) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(138).Connection = Me.Connection
            Me._commandCollection(138).CommandText = "SELECT [Top7 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(138).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(138).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(139) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(139).Connection = Me.Connection
            Me._commandCollection(139).CommandText = "SELECT [Top7 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(139).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(139).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(140) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(140).Connection = Me.Connection
            Me._commandCollection(140).CommandText = "SELECT [Top7 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(140).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(140).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(141) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(141).Connection = Me.Connection
            Me._commandCollection(141).CommandText = "SELECT [Top8 Chart] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(141).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(141).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(142) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(142).Connection = Me.Connection
            Me._commandCollection(142).CommandText = "SELECT [Top8 Number] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(142).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(142).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(143) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(143).Connection = Me.Connection
            Me._commandCollection(143).CommandText = "SELECT [Top8 Random1] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(143).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(143).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(144) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(144).Connection = Me.Connection
            Me._commandCollection(144).CommandText = "SELECT [Top8 Random2] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(144).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(144).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(145) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(145).Connection = Me.Connection
            Me._commandCollection(145).CommandText = "SELECT [Top8 Type] FROM [Tumbler Kit] where [Tumbler Kit] = ?"
            Me._commandCollection(145).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(145).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Tumbler_Kit", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Tumbler Kit", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NCLRecipeDataSet.Tumbler_KitDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As NCLRecipeDataSet.Tumbler_KitDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As NCLRecipeDataSet.Tumbler_KitDataTable = New NCLRecipeDataSet.Tumbler_KitDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NCLRecipeDataSet.Tumbler_KitDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NCLRecipeDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Tumbler Kit")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_Tumbler_Kit As String,  _
                    ByVal Original_Spring1_Type As String,  _
                    ByVal Original_Spring1_Random1 As String,  _
                    ByVal Original_Spring1_Random2 As String,  _
                    ByVal Original_Spring1_Number As String,  _
                    ByVal Original_Spring1_Chart As String,  _
                    ByVal Original_Spring2_Type As String,  _
                    ByVal Original_Spring2_Random1 As String,  _
                    ByVal Original_Spring2_Random2 As String,  _
                    ByVal Original_Spring2_Number As String,  _
                    ByVal Original_Spring2_Chart As String,  _
                    ByVal Original_Spring3_Type As String,  _
                    ByVal Original_Spring3_Random1 As String,  _
                    ByVal Original_Spring3_Random2 As String,  _
                    ByVal Original_Spring3_Number As String,  _
                    ByVal Original_Spring3_Chart As String,  _
                    ByVal Original_Spring4_Type As String,  _
                    ByVal Original_Spring4_Random1 As String,  _
                    ByVal Original_Spring4_Random2 As String,  _
                    ByVal Original_Spring4_Number As String,  _
                    ByVal Original_Spring4_Chart As String,  _
                    ByVal Original_Spring5_Type As String,  _
                    ByVal Original_Spring5_Random1 As String,  _
                    ByVal Original_Spring5_Random2 As String,  _
                    ByVal Original_Spring5_Number As String,  _
                    ByVal Original_Spring5_Chart As String,  _
                    ByVal Original_Spring6_Type As String,  _
                    ByVal Original_Spring6_Random1 As String,  _
                    ByVal Original_Spring6_Random2 As String,  _
                    ByVal Original_Spring6_Number As String,  _
                    ByVal Original_Spring6_Chart As String,  _
                    ByVal Original_Spring7_Type As String,  _
                    ByVal Original_Spring7_Random1 As String,  _
                    ByVal Original_Spring7_Random2 As String,  _
                    ByVal Original_Spring7_Number As String,  _
                    ByVal Original_Spring7_Chart As String,  _
                    ByVal Original_Top1_Type As String,  _
                    ByVal Original_Top1_Random1 As String,  _
                    ByVal Original_Top1_Random2 As String,  _
                    ByVal Original_Top1_Number As String,  _
                    ByVal Original_Top1_Chart As String,  _
                    ByVal Original_Top2_Type As String,  _
                    ByVal Original_Top2_Random1 As String,  _
                    ByVal Original_Top2_Random2 As String,  _
                    ByVal Original_Top2_Number As String,  _
                    ByVal Original_Top2_Chart As String,  _
                    ByVal Original_Top3_Type As String,  _
                    ByVal Original_Top3_Random1 As String,  _
                    ByVal Original_Top3_Random2 As String,  _
                    ByVal Original_Top3_Number As String,  _
                    ByVal Original_Top3_Chart As String,  _
                    ByVal Original_Top4_Type As String,  _
                    ByVal Original_Top4_Random1 As String,  _
                    ByVal Original_Top4_Random2 As String,  _
                    ByVal Original_Top4_Number As String,  _
                    ByVal Original_Top4_Chart As String,  _
                    ByVal Original_Top5_Type As String,  _
                    ByVal Original_Top5_Random1 As String,  _
                    ByVal Original_Top5_Random2 As String,  _
                    ByVal Original_Top5_Number As String,  _
                    ByVal Original_Top5_Chart As String,  _
                    ByVal Original_Top6_Type As String,  _
                    ByVal Original_Top6_Random1 As String,  _
                    ByVal Original_Top6_Random2 As String,  _
                    ByVal Original_Top6_Number As String,  _
                    ByVal Original_Top6_Chart As String,  _
                    ByVal Original_Top7_Type As String,  _
                    ByVal Original_Top7_Random1 As String,  _
                    ByVal Original_Top7_Random2 As String,  _
                    ByVal Original_Top7_Number As String,  _
                    ByVal Original_Top7_Chart As String,  _
                    ByVal Original_Top8_Type As String,  _
                    ByVal Original_Top8_Random1 As String,  _
                    ByVal Original_Top8_Random2 As String,  _
                    ByVal Original_Top8_Number As String,  _
                    ByVal Original_Top8_Chart As String,  _
                    ByVal Original_Mid1_Type As String,  _
                    ByVal Original_Mid1_Random1 As String,  _
                    ByVal Original_Mid1_Random2 As String,  _
                    ByVal Original_Mid1_Number As String,  _
                    ByVal Original_Mid1_Chart As String,  _
                    ByVal Original_Mid2_Type As String,  _
                    ByVal Original_Mid2_Random1 As String,  _
                    ByVal Original_Mid2_Random2 As String,  _
                    ByVal Original_Mid2_Number As String,  _
                    ByVal Original_Mid2_Chart As String,  _
                    ByVal Original_Mid3_Type As String,  _
                    ByVal Original_Mid3_Random1 As String,  _
                    ByVal Original_Mid3_Random2 As String,  _
                    ByVal Original_Mid3_Number As String,  _
                    ByVal Original_Mid3_Chart As String,  _
                    ByVal Original_Mid4_Type As String,  _
                    ByVal Original_Mid4_Random1 As String,  _
                    ByVal Original_Mid4_Random2 As String,  _
                    ByVal Original_Mid4_Number As String,  _
                    ByVal Original_Mid4_Chart As String,  _
                    ByVal Original_Mid5_Type As String,  _
                    ByVal Original_Mid5_Random1 As String,  _
                    ByVal Original_Mid5_Random2 As String,  _
                    ByVal Original_Mid5_Number As String,  _
                    ByVal Original_Mid5_Chart As String,  _
                    ByVal Original_Mid6_Type As String,  _
                    ByVal Original_Mid6_Random1 As String,  _
                    ByVal Original_Mid6_Random2 As String,  _
                    ByVal Original_Mid6_Number As String,  _
                    ByVal Original_Mid6_Chart As String,  _
                    ByVal Original_Mid7_Type As String,  _
                    ByVal Original_Mid7_Random1 As String,  _
                    ByVal Original_Mid7_Random2 As String,  _
                    ByVal Original_Mid7_Number As String,  _
                    ByVal Original_Mid7_Chart As String,  _
                    ByVal Original_Bot1_Type As String,  _
                    ByVal Original_Bot1_Random1 As String,  _
                    ByVal Original_Bot1_Random2 As String,  _
                    ByVal Original_Bot1_Number As String,  _
                    ByVal Original_Bot1_Chart As String,  _
                    ByVal Original_Bot2_Type As String,  _
                    ByVal Original_Bot2_Random1 As String,  _
                    ByVal Original_Bot2_Random2 As String,  _
                    ByVal Original_Bot2_Number As String,  _
                    ByVal Original_Bot2_Chart As String,  _
                    ByVal Original_Bot3_Type As String,  _
                    ByVal Original_Bot3_Random1 As String,  _
                    ByVal Original_Bot3_Random2 As String,  _
                    ByVal Original_Bot3_Number As String,  _
                    ByVal Original_Bot3_Chart As String,  _
                    ByVal Original_Bot4_Type As String,  _
                    ByVal Original_Bot4_Random1 As String,  _
                    ByVal Original_Bot4_Random2 As String,  _
                    ByVal Original_Bot4_Number As String,  _
                    ByVal Original_Bot4_Chart As String,  _
                    ByVal Original_Bot5_Type As String,  _
                    ByVal Original_Bot5_Random1 As String,  _
                    ByVal Original_Bot5_Random2 As String,  _
                    ByVal Original_Bot5_Number As String,  _
                    ByVal Original_Bot5_Chart As String,  _
                    ByVal Original_Bot6_Type As String,  _
                    ByVal Original_Bot6_Random1 As String,  _
                    ByVal Original_Bot6_Random2 As String,  _
                    ByVal Original_Bot6_Number As String,  _
                    ByVal Original_Bot6_Chart As String,  _
                    ByVal Original_Bot7_Type As String,  _
                    ByVal Original_Bot7_Random1 As String,  _
                    ByVal Original_Bot7_Random2 As String,  _
                    ByVal Original_Bot7_Number As String,  _
                    ByVal Original_Bot7_Chart As String,  _
                    ByVal Original_Use_Mid_Tum As Global.System.Nullable(Of Single)) As Integer
            If (Original_Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tumbler_Kit")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Tumbler_Kit,String)
            End If
            If (Original_Spring1_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Spring1_Type,String)
            End If
            If (Original_Spring1_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Spring1_Random1,String)
            End If
            If (Original_Spring1_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Spring1_Random2,String)
            End If
            If (Original_Spring1_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Spring1_Number,String)
            End If
            If (Original_Spring1_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Spring1_Chart,String)
            End If
            If (Original_Spring2_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Spring2_Type,String)
            End If
            If (Original_Spring2_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Spring2_Random1,String)
            End If
            If (Original_Spring2_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Spring2_Random2,String)
            End If
            If (Original_Spring2_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_Spring2_Number,String)
            End If
            If (Original_Spring2_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Spring2_Chart,String)
            End If
            If (Original_Spring3_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_Spring3_Type,String)
            End If
            If (Original_Spring3_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_Spring3_Random1,String)
            End If
            If (Original_Spring3_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_Spring3_Random2,String)
            End If
            If (Original_Spring3_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_Spring3_Number,String)
            End If
            If (Original_Spring3_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_Spring3_Chart,String)
            End If
            If (Original_Spring4_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_Spring4_Type,String)
            End If
            If (Original_Spring4_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_Spring4_Random1,String)
            End If
            If (Original_Spring4_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_Spring4_Random2,String)
            End If
            If (Original_Spring4_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_Spring4_Number,String)
            End If
            If (Original_Spring4_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_Spring4_Chart,String)
            End If
            If (Original_Spring5_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_Spring5_Type,String)
            End If
            If (Original_Spring5_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_Spring5_Random1,String)
            End If
            If (Original_Spring5_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_Spring5_Random2,String)
            End If
            If (Original_Spring5_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_Spring5_Number,String)
            End If
            If (Original_Spring5_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_Spring5_Chart,String)
            End If
            If (Original_Spring6_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_Spring6_Type,String)
            End If
            If (Original_Spring6_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_Spring6_Random1,String)
            End If
            If (Original_Spring6_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_Spring6_Random2,String)
            End If
            If (Original_Spring6_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_Spring6_Number,String)
            End If
            If (Original_Spring6_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_Spring6_Chart,String)
            End If
            If (Original_Spring7_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_Spring7_Type,String)
            End If
            If (Original_Spring7_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_Spring7_Random1,String)
            End If
            If (Original_Spring7_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_Spring7_Random2,String)
            End If
            If (Original_Spring7_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_Spring7_Number,String)
            End If
            If (Original_Spring7_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_Spring7_Chart,String)
            End If
            If (Original_Top1_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_Top1_Type,String)
            End If
            If (Original_Top1_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_Top1_Random1,String)
            End If
            If (Original_Top1_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_Top1_Random2,String)
            End If
            If (Original_Top1_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_Top1_Number,String)
            End If
            If (Original_Top1_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_Top1_Chart,String)
            End If
            If (Original_Top2_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_Top2_Type,String)
            End If
            If (Original_Top2_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_Top2_Random1,String)
            End If
            If (Original_Top2_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_Top2_Random2,String)
            End If
            If (Original_Top2_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_Top2_Number,String)
            End If
            If (Original_Top2_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_Top2_Chart,String)
            End If
            If (Original_Top3_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_Top3_Type,String)
            End If
            If (Original_Top3_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(Original_Top3_Random1,String)
            End If
            If (Original_Top3_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(Original_Top3_Random2,String)
            End If
            If (Original_Top3_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(Original_Top3_Number,String)
            End If
            If (Original_Top3_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(Original_Top3_Chart,String)
            End If
            If (Original_Top4_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(Original_Top4_Type,String)
            End If
            If (Original_Top4_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(Original_Top4_Random1,String)
            End If
            If (Original_Top4_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(Original_Top4_Random2,String)
            End If
            If (Original_Top4_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(Original_Top4_Number,String)
            End If
            If (Original_Top4_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(Original_Top4_Chart,String)
            End If
            If (Original_Top5_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(Original_Top5_Type,String)
            End If
            If (Original_Top5_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(Original_Top5_Random1,String)
            End If
            If (Original_Top5_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(Original_Top5_Random2,String)
            End If
            If (Original_Top5_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(Original_Top5_Number,String)
            End If
            If (Original_Top5_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(Original_Top5_Chart,String)
            End If
            If (Original_Top6_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(Original_Top6_Type,String)
            End If
            If (Original_Top6_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(Original_Top6_Random1,String)
            End If
            If (Original_Top6_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(Original_Top6_Random2,String)
            End If
            If (Original_Top6_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(Original_Top6_Number,String)
            End If
            If (Original_Top6_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(Original_Top6_Chart,String)
            End If
            If (Original_Top7_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = CType(Original_Top7_Type,String)
            End If
            If (Original_Top7_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(Original_Top7_Random1,String)
            End If
            If (Original_Top7_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = CType(Original_Top7_Random2,String)
            End If
            If (Original_Top7_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = CType(Original_Top7_Number,String)
            End If
            If (Original_Top7_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = CType(Original_Top7_Chart,String)
            End If
            If (Original_Top8_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = CType(Original_Top8_Type,String)
            End If
            If (Original_Top8_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = CType(Original_Top8_Random1,String)
            End If
            If (Original_Top8_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = CType(Original_Top8_Random2,String)
            End If
            If (Original_Top8_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = CType(Original_Top8_Number,String)
            End If
            If (Original_Top8_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = CType(Original_Top8_Chart,String)
            End If
            If (Original_Mid1_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = CType(Original_Mid1_Type,String)
            End If
            If (Original_Mid1_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(154).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(154).Value = CType(Original_Mid1_Random1,String)
            End If
            If (Original_Mid1_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(155).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(156).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(155).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(156).Value = CType(Original_Mid1_Random2,String)
            End If
            If (Original_Mid1_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(157).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(158).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(157).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(158).Value = CType(Original_Mid1_Number,String)
            End If
            If (Original_Mid1_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(159).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(160).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(159).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(160).Value = CType(Original_Mid1_Chart,String)
            End If
            If (Original_Mid2_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(161).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(162).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(161).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(162).Value = CType(Original_Mid2_Type,String)
            End If
            If (Original_Mid2_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(163).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(164).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(163).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(164).Value = CType(Original_Mid2_Random1,String)
            End If
            If (Original_Mid2_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(165).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(166).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(165).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(166).Value = CType(Original_Mid2_Random2,String)
            End If
            If (Original_Mid2_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(167).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(168).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(167).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(168).Value = CType(Original_Mid2_Number,String)
            End If
            If (Original_Mid2_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(169).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(170).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(169).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(170).Value = CType(Original_Mid2_Chart,String)
            End If
            If (Original_Mid3_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(171).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(172).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(171).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(172).Value = CType(Original_Mid3_Type,String)
            End If
            If (Original_Mid3_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(173).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(174).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(173).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(174).Value = CType(Original_Mid3_Random1,String)
            End If
            If (Original_Mid3_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(175).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(176).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(175).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(176).Value = CType(Original_Mid3_Random2,String)
            End If
            If (Original_Mid3_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(177).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(178).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(177).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(178).Value = CType(Original_Mid3_Number,String)
            End If
            If (Original_Mid3_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(179).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(180).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(179).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(180).Value = CType(Original_Mid3_Chart,String)
            End If
            If (Original_Mid4_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(181).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(182).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(181).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(182).Value = CType(Original_Mid4_Type,String)
            End If
            If (Original_Mid4_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(183).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(184).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(183).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(184).Value = CType(Original_Mid4_Random1,String)
            End If
            If (Original_Mid4_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(185).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(186).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(185).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(186).Value = CType(Original_Mid4_Random2,String)
            End If
            If (Original_Mid4_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(187).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(188).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(187).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(188).Value = CType(Original_Mid4_Number,String)
            End If
            If (Original_Mid4_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(189).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(190).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(189).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(190).Value = CType(Original_Mid4_Chart,String)
            End If
            If (Original_Mid5_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(191).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(192).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(191).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(192).Value = CType(Original_Mid5_Type,String)
            End If
            If (Original_Mid5_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(193).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(194).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(193).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(194).Value = CType(Original_Mid5_Random1,String)
            End If
            If (Original_Mid5_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(195).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(196).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(195).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(196).Value = CType(Original_Mid5_Random2,String)
            End If
            If (Original_Mid5_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(197).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(198).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(197).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(198).Value = CType(Original_Mid5_Number,String)
            End If
            If (Original_Mid5_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(199).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(200).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(199).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(200).Value = CType(Original_Mid5_Chart,String)
            End If
            If (Original_Mid6_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(201).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(202).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(201).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(202).Value = CType(Original_Mid6_Type,String)
            End If
            If (Original_Mid6_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(203).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(204).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(203).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(204).Value = CType(Original_Mid6_Random1,String)
            End If
            If (Original_Mid6_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(205).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(206).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(205).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(206).Value = CType(Original_Mid6_Random2,String)
            End If
            If (Original_Mid6_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(207).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(208).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(207).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(208).Value = CType(Original_Mid6_Number,String)
            End If
            If (Original_Mid6_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(209).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(210).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(209).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(210).Value = CType(Original_Mid6_Chart,String)
            End If
            If (Original_Mid7_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(211).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(212).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(211).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(212).Value = CType(Original_Mid7_Type,String)
            End If
            If (Original_Mid7_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(213).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(214).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(213).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(214).Value = CType(Original_Mid7_Random1,String)
            End If
            If (Original_Mid7_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(215).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(216).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(215).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(216).Value = CType(Original_Mid7_Random2,String)
            End If
            If (Original_Mid7_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(217).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(218).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(217).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(218).Value = CType(Original_Mid7_Number,String)
            End If
            If (Original_Mid7_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(219).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(220).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(219).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(220).Value = CType(Original_Mid7_Chart,String)
            End If
            If (Original_Bot1_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(221).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(222).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(221).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(222).Value = CType(Original_Bot1_Type,String)
            End If
            If (Original_Bot1_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(223).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(224).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(223).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(224).Value = CType(Original_Bot1_Random1,String)
            End If
            If (Original_Bot1_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(225).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(226).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(225).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(226).Value = CType(Original_Bot1_Random2,String)
            End If
            If (Original_Bot1_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(227).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(228).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(227).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(228).Value = CType(Original_Bot1_Number,String)
            End If
            If (Original_Bot1_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(229).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(230).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(229).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(230).Value = CType(Original_Bot1_Chart,String)
            End If
            If (Original_Bot2_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(231).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(232).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(231).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(232).Value = CType(Original_Bot2_Type,String)
            End If
            If (Original_Bot2_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(233).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(234).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(233).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(234).Value = CType(Original_Bot2_Random1,String)
            End If
            If (Original_Bot2_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(235).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(236).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(235).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(236).Value = CType(Original_Bot2_Random2,String)
            End If
            If (Original_Bot2_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(237).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(238).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(237).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(238).Value = CType(Original_Bot2_Number,String)
            End If
            If (Original_Bot2_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(239).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(240).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(239).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(240).Value = CType(Original_Bot2_Chart,String)
            End If
            If (Original_Bot3_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(241).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(242).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(241).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(242).Value = CType(Original_Bot3_Type,String)
            End If
            If (Original_Bot3_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(243).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(244).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(243).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(244).Value = CType(Original_Bot3_Random1,String)
            End If
            If (Original_Bot3_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(245).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(246).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(245).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(246).Value = CType(Original_Bot3_Random2,String)
            End If
            If (Original_Bot3_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(247).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(248).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(247).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(248).Value = CType(Original_Bot3_Number,String)
            End If
            If (Original_Bot3_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(249).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(250).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(249).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(250).Value = CType(Original_Bot3_Chart,String)
            End If
            If (Original_Bot4_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(251).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(252).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(251).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(252).Value = CType(Original_Bot4_Type,String)
            End If
            If (Original_Bot4_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(253).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(254).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(253).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(254).Value = CType(Original_Bot4_Random1,String)
            End If
            If (Original_Bot4_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(255).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(256).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(255).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(256).Value = CType(Original_Bot4_Random2,String)
            End If
            If (Original_Bot4_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(257).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(258).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(257).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(258).Value = CType(Original_Bot4_Number,String)
            End If
            If (Original_Bot4_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(259).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(260).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(259).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(260).Value = CType(Original_Bot4_Chart,String)
            End If
            If (Original_Bot5_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(261).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(262).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(261).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(262).Value = CType(Original_Bot5_Type,String)
            End If
            If (Original_Bot5_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(263).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(264).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(263).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(264).Value = CType(Original_Bot5_Random1,String)
            End If
            If (Original_Bot5_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(265).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(266).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(265).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(266).Value = CType(Original_Bot5_Random2,String)
            End If
            If (Original_Bot5_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(267).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(268).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(267).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(268).Value = CType(Original_Bot5_Number,String)
            End If
            If (Original_Bot5_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(269).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(270).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(269).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(270).Value = CType(Original_Bot5_Chart,String)
            End If
            If (Original_Bot6_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(271).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(272).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(271).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(272).Value = CType(Original_Bot6_Type,String)
            End If
            If (Original_Bot6_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(273).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(274).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(273).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(274).Value = CType(Original_Bot6_Random1,String)
            End If
            If (Original_Bot6_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(275).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(276).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(275).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(276).Value = CType(Original_Bot6_Random2,String)
            End If
            If (Original_Bot6_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(277).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(278).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(277).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(278).Value = CType(Original_Bot6_Number,String)
            End If
            If (Original_Bot6_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(279).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(280).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(279).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(280).Value = CType(Original_Bot6_Chart,String)
            End If
            If (Original_Bot7_Type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(281).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(282).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(281).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(282).Value = CType(Original_Bot7_Type,String)
            End If
            If (Original_Bot7_Random1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(283).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(284).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(283).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(284).Value = CType(Original_Bot7_Random1,String)
            End If
            If (Original_Bot7_Random2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(285).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(286).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(285).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(286).Value = CType(Original_Bot7_Random2,String)
            End If
            If (Original_Bot7_Number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(287).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(288).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(287).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(288).Value = CType(Original_Bot7_Number,String)
            End If
            If (Original_Bot7_Chart Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(289).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(290).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(289).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(290).Value = CType(Original_Bot7_Chart,String)
            End If
            If (Original_Use_Mid_Tum.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(291).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(292).Value = CType(Original_Use_Mid_Tum.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(291).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(292).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Tumbler_Kit As String,  _
                    ByVal Spring1_Type As String,  _
                    ByVal Spring1_Random1 As String,  _
                    ByVal Spring1_Random2 As String,  _
                    ByVal Spring1_Number As String,  _
                    ByVal Spring1_Chart As String,  _
                    ByVal Spring2_Type As String,  _
                    ByVal Spring2_Random1 As String,  _
                    ByVal Spring2_Random2 As String,  _
                    ByVal Spring2_Number As String,  _
                    ByVal Spring2_Chart As String,  _
                    ByVal Spring3_Type As String,  _
                    ByVal Spring3_Random1 As String,  _
                    ByVal Spring3_Random2 As String,  _
                    ByVal Spring3_Number As String,  _
                    ByVal Spring3_Chart As String,  _
                    ByVal Spring4_Type As String,  _
                    ByVal Spring4_Random1 As String,  _
                    ByVal Spring4_Random2 As String,  _
                    ByVal Spring4_Number As String,  _
                    ByVal Spring4_Chart As String,  _
                    ByVal Spring5_Type As String,  _
                    ByVal Spring5_Random1 As String,  _
                    ByVal Spring5_Random2 As String,  _
                    ByVal Spring5_Number As String,  _
                    ByVal Spring5_Chart As String,  _
                    ByVal Spring6_Type As String,  _
                    ByVal Spring6_Random1 As String,  _
                    ByVal Spring6_Random2 As String,  _
                    ByVal Spring6_Number As String,  _
                    ByVal Spring6_Chart As String,  _
                    ByVal Spring7_Type As String,  _
                    ByVal Spring7_Random1 As String,  _
                    ByVal Spring7_Random2 As String,  _
                    ByVal Spring7_Number As String,  _
                    ByVal Spring7_Chart As String,  _
                    ByVal Top1_Type As String,  _
                    ByVal Top1_Random1 As String,  _
                    ByVal Top1_Random2 As String,  _
                    ByVal Top1_Number As String,  _
                    ByVal Top1_Chart As String,  _
                    ByVal Top2_Type As String,  _
                    ByVal Top2_Random1 As String,  _
                    ByVal Top2_Random2 As String,  _
                    ByVal Top2_Number As String,  _
                    ByVal Top2_Chart As String,  _
                    ByVal Top3_Type As String,  _
                    ByVal Top3_Random1 As String,  _
                    ByVal Top3_Random2 As String,  _
                    ByVal Top3_Number As String,  _
                    ByVal Top3_Chart As String,  _
                    ByVal Top4_Type As String,  _
                    ByVal Top4_Random1 As String,  _
                    ByVal Top4_Random2 As String,  _
                    ByVal Top4_Number As String,  _
                    ByVal Top4_Chart As String,  _
                    ByVal Top5_Type As String,  _
                    ByVal Top5_Random1 As String,  _
                    ByVal Top5_Random2 As String,  _
                    ByVal Top5_Number As String,  _
                    ByVal Top5_Chart As String,  _
                    ByVal Top6_Type As String,  _
                    ByVal Top6_Random1 As String,  _
                    ByVal Top6_Random2 As String,  _
                    ByVal Top6_Number As String,  _
                    ByVal Top6_Chart As String,  _
                    ByVal Top7_Type As String,  _
                    ByVal Top7_Random1 As String,  _
                    ByVal Top7_Random2 As String,  _
                    ByVal Top7_Number As String,  _
                    ByVal Top7_Chart As String,  _
                    ByVal Top8_Type As String,  _
                    ByVal Top8_Random1 As String,  _
                    ByVal Top8_Random2 As String,  _
                    ByVal Top8_Number As String,  _
                    ByVal Top8_Chart As String,  _
                    ByVal Mid1_Type As String,  _
                    ByVal Mid1_Random1 As String,  _
                    ByVal Mid1_Random2 As String,  _
                    ByVal Mid1_Number As String,  _
                    ByVal Mid1_Chart As String,  _
                    ByVal Mid2_Type As String,  _
                    ByVal Mid2_Random1 As String,  _
                    ByVal Mid2_Random2 As String,  _
                    ByVal Mid2_Number As String,  _
                    ByVal Mid2_Chart As String,  _
                    ByVal Mid3_Type As String,  _
                    ByVal Mid3_Random1 As String,  _
                    ByVal Mid3_Random2 As String,  _
                    ByVal Mid3_Number As String,  _
                    ByVal Mid3_Chart As String,  _
                    ByVal Mid4_Type As String,  _
                    ByVal Mid4_Random1 As String,  _
                    ByVal Mid4_Random2 As String,  _
                    ByVal Mid4_Number As String,  _
                    ByVal Mid4_Chart As String,  _
                    ByVal Mid5_Type As String,  _
                    ByVal Mid5_Random1 As String,  _
                    ByVal Mid5_Random2 As String,  _
                    ByVal Mid5_Number As String,  _
                    ByVal Mid5_Chart As String,  _
                    ByVal Mid6_Type As String,  _
                    ByVal Mid6_Random1 As String,  _
                    ByVal Mid6_Random2 As String,  _
                    ByVal Mid6_Number As String,  _
                    ByVal Mid6_Chart As String,  _
                    ByVal Mid7_Type As String,  _
                    ByVal Mid7_Random1 As String,  _
                    ByVal Mid7_Random2 As String,  _
                    ByVal Mid7_Number As String,  _
                    ByVal Mid7_Chart As String,  _
                    ByVal Bot1_Type As String,  _
                    ByVal Bot1_Random1 As String,  _
                    ByVal Bot1_Random2 As String,  _
                    ByVal Bot1_Number As String,  _
                    ByVal Bot1_Chart As String,  _
                    ByVal Bot2_Type As String,  _
                    ByVal Bot2_Random1 As String,  _
                    ByVal Bot2_Random2 As String,  _
                    ByVal Bot2_Number As String,  _
                    ByVal Bot2_Chart As String,  _
                    ByVal Bot3_Type As String,  _
                    ByVal Bot3_Random1 As String,  _
                    ByVal Bot3_Random2 As String,  _
                    ByVal Bot3_Number As String,  _
                    ByVal Bot3_Chart As String,  _
                    ByVal Bot4_Type As String,  _
                    ByVal Bot4_Random1 As String,  _
                    ByVal Bot4_Random2 As String,  _
                    ByVal Bot4_Number As String,  _
                    ByVal Bot4_Chart As String,  _
                    ByVal Bot5_Type As String,  _
                    ByVal Bot5_Random1 As String,  _
                    ByVal Bot5_Random2 As String,  _
                    ByVal Bot5_Number As String,  _
                    ByVal Bot5_Chart As String,  _
                    ByVal Bot6_Type As String,  _
                    ByVal Bot6_Random1 As String,  _
                    ByVal Bot6_Random2 As String,  _
                    ByVal Bot6_Number As String,  _
                    ByVal Bot6_Chart As String,  _
                    ByVal Bot7_Type As String,  _
                    ByVal Bot7_Random1 As String,  _
                    ByVal Bot7_Random2 As String,  _
                    ByVal Bot7_Number As String,  _
                    ByVal Bot7_Chart As String,  _
                    ByVal Use_Mid_Tum As Global.System.Nullable(Of Single)) As Integer
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            If (Spring1_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Spring1_Type,String)
            End If
            If (Spring1_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Spring1_Random1,String)
            End If
            If (Spring1_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Spring1_Random2,String)
            End If
            If (Spring1_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Spring1_Number,String)
            End If
            If (Spring1_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Spring1_Chart,String)
            End If
            If (Spring2_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Spring2_Type,String)
            End If
            If (Spring2_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Spring2_Random1,String)
            End If
            If (Spring2_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Spring2_Random2,String)
            End If
            If (Spring2_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Spring2_Number,String)
            End If
            If (Spring2_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Spring2_Chart,String)
            End If
            If (Spring3_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Spring3_Type,String)
            End If
            If (Spring3_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Spring3_Random1,String)
            End If
            If (Spring3_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Spring3_Random2,String)
            End If
            If (Spring3_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Spring3_Number,String)
            End If
            If (Spring3_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Spring3_Chart,String)
            End If
            If (Spring4_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Spring4_Type,String)
            End If
            If (Spring4_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Spring4_Random1,String)
            End If
            If (Spring4_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Spring4_Random2,String)
            End If
            If (Spring4_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Spring4_Number,String)
            End If
            If (Spring4_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Spring4_Chart,String)
            End If
            If (Spring5_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Spring5_Type,String)
            End If
            If (Spring5_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Spring5_Random1,String)
            End If
            If (Spring5_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Spring5_Random2,String)
            End If
            If (Spring5_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Spring5_Number,String)
            End If
            If (Spring5_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Spring5_Chart,String)
            End If
            If (Spring6_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Spring6_Type,String)
            End If
            If (Spring6_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Spring6_Random1,String)
            End If
            If (Spring6_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Spring6_Random2,String)
            End If
            If (Spring6_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Spring6_Number,String)
            End If
            If (Spring6_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Spring6_Chart,String)
            End If
            If (Spring7_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Spring7_Type,String)
            End If
            If (Spring7_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Spring7_Random1,String)
            End If
            If (Spring7_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Spring7_Random2,String)
            End If
            If (Spring7_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Spring7_Number,String)
            End If
            If (Spring7_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(Spring7_Chart,String)
            End If
            If (Top1_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Top1_Type,String)
            End If
            If (Top1_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(Top1_Random1,String)
            End If
            If (Top1_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(Top1_Random2,String)
            End If
            If (Top1_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(Top1_Number,String)
            End If
            If (Top1_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(Top1_Chart,String)
            End If
            If (Top2_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(Top2_Type,String)
            End If
            If (Top2_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(Top2_Random1,String)
            End If
            If (Top2_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(Top2_Random2,String)
            End If
            If (Top2_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(Top2_Number,String)
            End If
            If (Top2_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(Top2_Chart,String)
            End If
            If (Top3_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(Top3_Type,String)
            End If
            If (Top3_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(Top3_Random1,String)
            End If
            If (Top3_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(Top3_Random2,String)
            End If
            If (Top3_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(Top3_Number,String)
            End If
            If (Top3_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(Top3_Chart,String)
            End If
            If (Top4_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(Top4_Type,String)
            End If
            If (Top4_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(Top4_Random1,String)
            End If
            If (Top4_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(Top4_Random2,String)
            End If
            If (Top4_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(Top4_Number,String)
            End If
            If (Top4_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(Top4_Chart,String)
            End If
            If (Top5_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(Top5_Type,String)
            End If
            If (Top5_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(Top5_Random1,String)
            End If
            If (Top5_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(Top5_Random2,String)
            End If
            If (Top5_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(Top5_Number,String)
            End If
            If (Top5_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(Top5_Chart,String)
            End If
            If (Top6_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(Top6_Type,String)
            End If
            If (Top6_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(Top6_Random1,String)
            End If
            If (Top6_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(Top6_Random2,String)
            End If
            If (Top6_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(Top6_Number,String)
            End If
            If (Top6_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(Top6_Chart,String)
            End If
            If (Top7_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(Top7_Type,String)
            End If
            If (Top7_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(Top7_Random1,String)
            End If
            If (Top7_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(Top7_Random2,String)
            End If
            If (Top7_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(Top7_Number,String)
            End If
            If (Top7_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(Top7_Chart,String)
            End If
            If (Top8_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(Top8_Type,String)
            End If
            If (Top8_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(Top8_Random1,String)
            End If
            If (Top8_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(Top8_Random2,String)
            End If
            If (Top8_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(Top8_Number,String)
            End If
            If (Top8_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(Top8_Chart,String)
            End If
            If (Mid1_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(Mid1_Type,String)
            End If
            If (Mid1_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(Mid1_Random1,String)
            End If
            If (Mid1_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(Mid1_Random2,String)
            End If
            If (Mid1_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(Mid1_Number,String)
            End If
            If (Mid1_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(Mid1_Chart,String)
            End If
            If (Mid2_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(Mid2_Type,String)
            End If
            If (Mid2_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(Mid2_Random1,String)
            End If
            If (Mid2_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(Mid2_Random2,String)
            End If
            If (Mid2_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(Mid2_Number,String)
            End If
            If (Mid2_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(Mid2_Chart,String)
            End If
            If (Mid3_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(Mid3_Type,String)
            End If
            If (Mid3_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(Mid3_Random1,String)
            End If
            If (Mid3_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(Mid3_Random2,String)
            End If
            If (Mid3_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(Mid3_Number,String)
            End If
            If (Mid3_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(Mid3_Chart,String)
            End If
            If (Mid4_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(Mid4_Type,String)
            End If
            If (Mid4_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(92).Value = CType(Mid4_Random1,String)
            End If
            If (Mid4_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(93).Value = CType(Mid4_Random2,String)
            End If
            If (Mid4_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(94).Value = CType(Mid4_Number,String)
            End If
            If (Mid4_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(95).Value = CType(Mid4_Chart,String)
            End If
            If (Mid5_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(96).Value = CType(Mid5_Type,String)
            End If
            If (Mid5_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(97).Value = CType(Mid5_Random1,String)
            End If
            If (Mid5_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(98).Value = CType(Mid5_Random2,String)
            End If
            If (Mid5_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(99).Value = CType(Mid5_Number,String)
            End If
            If (Mid5_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(100).Value = CType(Mid5_Chart,String)
            End If
            If (Mid6_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(101).Value = CType(Mid6_Type,String)
            End If
            If (Mid6_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(102).Value = CType(Mid6_Random1,String)
            End If
            If (Mid6_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(103).Value = CType(Mid6_Random2,String)
            End If
            If (Mid6_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(104).Value = CType(Mid6_Number,String)
            End If
            If (Mid6_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(105).Value = CType(Mid6_Chart,String)
            End If
            If (Mid7_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(106).Value = CType(Mid7_Type,String)
            End If
            If (Mid7_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(107).Value = CType(Mid7_Random1,String)
            End If
            If (Mid7_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(108).Value = CType(Mid7_Random2,String)
            End If
            If (Mid7_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(109).Value = CType(Mid7_Number,String)
            End If
            If (Mid7_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(110).Value = CType(Mid7_Chart,String)
            End If
            If (Bot1_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(111).Value = CType(Bot1_Type,String)
            End If
            If (Bot1_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(112).Value = CType(Bot1_Random1,String)
            End If
            If (Bot1_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(113).Value = CType(Bot1_Random2,String)
            End If
            If (Bot1_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(114).Value = CType(Bot1_Number,String)
            End If
            If (Bot1_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(115).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(115).Value = CType(Bot1_Chart,String)
            End If
            If (Bot2_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(116).Value = CType(Bot2_Type,String)
            End If
            If (Bot2_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(117).Value = CType(Bot2_Random1,String)
            End If
            If (Bot2_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(118).Value = CType(Bot2_Random2,String)
            End If
            If (Bot2_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(119).Value = CType(Bot2_Number,String)
            End If
            If (Bot2_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(120).Value = CType(Bot2_Chart,String)
            End If
            If (Bot3_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(121).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(121).Value = CType(Bot3_Type,String)
            End If
            If (Bot3_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(122).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(122).Value = CType(Bot3_Random1,String)
            End If
            If (Bot3_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(123).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(123).Value = CType(Bot3_Random2,String)
            End If
            If (Bot3_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(124).Value = CType(Bot3_Number,String)
            End If
            If (Bot3_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(125).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(125).Value = CType(Bot3_Chart,String)
            End If
            If (Bot4_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(126).Value = CType(Bot4_Type,String)
            End If
            If (Bot4_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(127).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(127).Value = CType(Bot4_Random1,String)
            End If
            If (Bot4_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(128).Value = CType(Bot4_Random2,String)
            End If
            If (Bot4_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(129).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(129).Value = CType(Bot4_Number,String)
            End If
            If (Bot4_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(130).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(130).Value = CType(Bot4_Chart,String)
            End If
            If (Bot5_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(131).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(131).Value = CType(Bot5_Type,String)
            End If
            If (Bot5_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(132).Value = CType(Bot5_Random1,String)
            End If
            If (Bot5_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(133).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(133).Value = CType(Bot5_Random2,String)
            End If
            If (Bot5_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(134).Value = CType(Bot5_Number,String)
            End If
            If (Bot5_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(135).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(135).Value = CType(Bot5_Chart,String)
            End If
            If (Bot6_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(136).Value = CType(Bot6_Type,String)
            End If
            If (Bot6_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(137).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(137).Value = CType(Bot6_Random1,String)
            End If
            If (Bot6_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(138).Value = CType(Bot6_Random2,String)
            End If
            If (Bot6_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(139).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(139).Value = CType(Bot6_Number,String)
            End If
            If (Bot6_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(140).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(140).Value = CType(Bot6_Chart,String)
            End If
            If (Bot7_Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(141).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(141).Value = CType(Bot7_Type,String)
            End If
            If (Bot7_Random1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(142).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(142).Value = CType(Bot7_Random1,String)
            End If
            If (Bot7_Random2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(143).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(143).Value = CType(Bot7_Random2,String)
            End If
            If (Bot7_Number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(144).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(144).Value = CType(Bot7_Number,String)
            End If
            If (Bot7_Chart Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(145).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(145).Value = CType(Bot7_Chart,String)
            End If
            If (Use_Mid_Tum.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(146).Value = CType(Use_Mid_Tum.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(146).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Tumbler_Kit As String,  _
                    ByVal Spring1_Type As String,  _
                    ByVal Spring1_Random1 As String,  _
                    ByVal Spring1_Random2 As String,  _
                    ByVal Spring1_Number As String,  _
                    ByVal Spring1_Chart As String,  _
                    ByVal Spring2_Type As String,  _
                    ByVal Spring2_Random1 As String,  _
                    ByVal Spring2_Random2 As String,  _
                    ByVal Spring2_Number As String,  _
                    ByVal Spring2_Chart As String,  _
                    ByVal Spring3_Type As String,  _
                    ByVal Spring3_Random1 As String,  _
                    ByVal Spring3_Random2 As String,  _
                    ByVal Spring3_Number As String,  _
                    ByVal Spring3_Chart As String,  _
                    ByVal Spring4_Type As String,  _
                    ByVal Spring4_Random1 As String,  _
                    ByVal Spring4_Random2 As String,  _
                    ByVal Spring4_Number As String,  _
                    ByVal Spring4_Chart As String,  _
                    ByVal Spring5_Type As String,  _
                    ByVal Spring5_Random1 As String,  _
                    ByVal Spring5_Random2 As String,  _
                    ByVal Spring5_Number As String,  _
                    ByVal Spring5_Chart As String,  _
                    ByVal Spring6_Type As String,  _
                    ByVal Spring6_Random1 As String,  _
                    ByVal Spring6_Random2 As String,  _
                    ByVal Spring6_Number As String,  _
                    ByVal Spring6_Chart As String,  _
                    ByVal Spring7_Type As String,  _
                    ByVal Spring7_Random1 As String,  _
                    ByVal Spring7_Random2 As String,  _
                    ByVal Spring7_Number As String,  _
                    ByVal Spring7_Chart As String,  _
                    ByVal Top1_Type As String,  _
                    ByVal Top1_Random1 As String,  _
                    ByVal Top1_Random2 As String,  _
                    ByVal Top1_Number As String,  _
                    ByVal Top1_Chart As String,  _
                    ByVal Top2_Type As String,  _
                    ByVal Top2_Random1 As String,  _
                    ByVal Top2_Random2 As String,  _
                    ByVal Top2_Number As String,  _
                    ByVal Top2_Chart As String,  _
                    ByVal Top3_Type As String,  _
                    ByVal Top3_Random1 As String,  _
                    ByVal Top3_Random2 As String,  _
                    ByVal Top3_Number As String,  _
                    ByVal Top3_Chart As String,  _
                    ByVal Top4_Type As String,  _
                    ByVal Top4_Random1 As String,  _
                    ByVal Top4_Random2 As String,  _
                    ByVal Top4_Number As String,  _
                    ByVal Top4_Chart As String,  _
                    ByVal Top5_Type As String,  _
                    ByVal Top5_Random1 As String,  _
                    ByVal Top5_Random2 As String,  _
                    ByVal Top5_Number As String,  _
                    ByVal Top5_Chart As String,  _
                    ByVal Top6_Type As String,  _
                    ByVal Top6_Random1 As String,  _
                    ByVal Top6_Random2 As String,  _
                    ByVal Top6_Number As String,  _
                    ByVal Top6_Chart As String,  _
                    ByVal Top7_Type As String,  _
                    ByVal Top7_Random1 As String,  _
                    ByVal Top7_Random2 As String,  _
                    ByVal Top7_Number As String,  _
                    ByVal Top7_Chart As String,  _
                    ByVal Top8_Type As String,  _
                    ByVal Top8_Random1 As String,  _
                    ByVal Top8_Random2 As String,  _
                    ByVal Top8_Number As String,  _
                    ByVal Top8_Chart As String,  _
                    ByVal Mid1_Type As String,  _
                    ByVal Mid1_Random1 As String,  _
                    ByVal Mid1_Random2 As String,  _
                    ByVal Mid1_Number As String,  _
                    ByVal Mid1_Chart As String,  _
                    ByVal Mid2_Type As String,  _
                    ByVal Mid2_Random1 As String,  _
                    ByVal Mid2_Random2 As String,  _
                    ByVal Mid2_Number As String,  _
                    ByVal Mid2_Chart As String,  _
                    ByVal Mid3_Type As String,  _
                    ByVal Mid3_Random1 As String,  _
                    ByVal Mid3_Random2 As String,  _
                    ByVal Mid3_Number As String,  _
                    ByVal Mid3_Chart As String,  _
                    ByVal Mid4_Type As String,  _
                    ByVal Mid4_Random1 As String,  _
                    ByVal Mid4_Random2 As String,  _
                    ByVal Mid4_Number As String,  _
                    ByVal Mid4_Chart As String,  _
                    ByVal Mid5_Type As String,  _
                    ByVal Mid5_Random1 As String,  _
                    ByVal Mid5_Random2 As String,  _
                    ByVal Mid5_Number As String,  _
                    ByVal Mid5_Chart As String,  _
                    ByVal Mid6_Type As String,  _
                    ByVal Mid6_Random1 As String,  _
                    ByVal Mid6_Random2 As String,  _
                    ByVal Mid6_Number As String,  _
                    ByVal Mid6_Chart As String,  _
                    ByVal Mid7_Type As String,  _
                    ByVal Mid7_Random1 As String,  _
                    ByVal Mid7_Random2 As String,  _
                    ByVal Mid7_Number As String,  _
                    ByVal Mid7_Chart As String,  _
                    ByVal Bot1_Type As String,  _
                    ByVal Bot1_Random1 As String,  _
                    ByVal Bot1_Random2 As String,  _
                    ByVal Bot1_Number As String,  _
                    ByVal Bot1_Chart As String,  _
                    ByVal Bot2_Type As String,  _
                    ByVal Bot2_Random1 As String,  _
                    ByVal Bot2_Random2 As String,  _
                    ByVal Bot2_Number As String,  _
                    ByVal Bot2_Chart As String,  _
                    ByVal Bot3_Type As String,  _
                    ByVal Bot3_Random1 As String,  _
                    ByVal Bot3_Random2 As String,  _
                    ByVal Bot3_Number As String,  _
                    ByVal Bot3_Chart As String,  _
                    ByVal Bot4_Type As String,  _
                    ByVal Bot4_Random1 As String,  _
                    ByVal Bot4_Random2 As String,  _
                    ByVal Bot4_Number As String,  _
                    ByVal Bot4_Chart As String,  _
                    ByVal Bot5_Type As String,  _
                    ByVal Bot5_Random1 As String,  _
                    ByVal Bot5_Random2 As String,  _
                    ByVal Bot5_Number As String,  _
                    ByVal Bot5_Chart As String,  _
                    ByVal Bot6_Type As String,  _
                    ByVal Bot6_Random1 As String,  _
                    ByVal Bot6_Random2 As String,  _
                    ByVal Bot6_Number As String,  _
                    ByVal Bot6_Chart As String,  _
                    ByVal Bot7_Type As String,  _
                    ByVal Bot7_Random1 As String,  _
                    ByVal Bot7_Random2 As String,  _
                    ByVal Bot7_Number As String,  _
                    ByVal Bot7_Chart As String,  _
                    ByVal Use_Mid_Tum As Global.System.Nullable(Of Single),  _
                    ByVal Original_Tumbler_Kit As String,  _
                    ByVal Original_Spring1_Type As String,  _
                    ByVal Original_Spring1_Random1 As String,  _
                    ByVal Original_Spring1_Random2 As String,  _
                    ByVal Original_Spring1_Number As String,  _
                    ByVal Original_Spring1_Chart As String,  _
                    ByVal Original_Spring2_Type As String,  _
                    ByVal Original_Spring2_Random1 As String,  _
                    ByVal Original_Spring2_Random2 As String,  _
                    ByVal Original_Spring2_Number As String,  _
                    ByVal Original_Spring2_Chart As String,  _
                    ByVal Original_Spring3_Type As String,  _
                    ByVal Original_Spring3_Random1 As String,  _
                    ByVal Original_Spring3_Random2 As String,  _
                    ByVal Original_Spring3_Number As String,  _
                    ByVal Original_Spring3_Chart As String,  _
                    ByVal Original_Spring4_Type As String,  _
                    ByVal Original_Spring4_Random1 As String,  _
                    ByVal Original_Spring4_Random2 As String,  _
                    ByVal Original_Spring4_Number As String,  _
                    ByVal Original_Spring4_Chart As String,  _
                    ByVal Original_Spring5_Type As String,  _
                    ByVal Original_Spring5_Random1 As String,  _
                    ByVal Original_Spring5_Random2 As String,  _
                    ByVal Original_Spring5_Number As String,  _
                    ByVal Original_Spring5_Chart As String,  _
                    ByVal Original_Spring6_Type As String,  _
                    ByVal Original_Spring6_Random1 As String,  _
                    ByVal Original_Spring6_Random2 As String,  _
                    ByVal Original_Spring6_Number As String,  _
                    ByVal Original_Spring6_Chart As String,  _
                    ByVal Original_Spring7_Type As String,  _
                    ByVal Original_Spring7_Random1 As String,  _
                    ByVal Original_Spring7_Random2 As String,  _
                    ByVal Original_Spring7_Number As String,  _
                    ByVal Original_Spring7_Chart As String,  _
                    ByVal Original_Top1_Type As String,  _
                    ByVal Original_Top1_Random1 As String,  _
                    ByVal Original_Top1_Random2 As String,  _
                    ByVal Original_Top1_Number As String,  _
                    ByVal Original_Top1_Chart As String,  _
                    ByVal Original_Top2_Type As String,  _
                    ByVal Original_Top2_Random1 As String,  _
                    ByVal Original_Top2_Random2 As String,  _
                    ByVal Original_Top2_Number As String,  _
                    ByVal Original_Top2_Chart As String,  _
                    ByVal Original_Top3_Type As String,  _
                    ByVal Original_Top3_Random1 As String,  _
                    ByVal Original_Top3_Random2 As String,  _
                    ByVal Original_Top3_Number As String,  _
                    ByVal Original_Top3_Chart As String,  _
                    ByVal Original_Top4_Type As String,  _
                    ByVal Original_Top4_Random1 As String,  _
                    ByVal Original_Top4_Random2 As String,  _
                    ByVal Original_Top4_Number As String,  _
                    ByVal Original_Top4_Chart As String,  _
                    ByVal Original_Top5_Type As String,  _
                    ByVal Original_Top5_Random1 As String,  _
                    ByVal Original_Top5_Random2 As String,  _
                    ByVal Original_Top5_Number As String,  _
                    ByVal Original_Top5_Chart As String,  _
                    ByVal Original_Top6_Type As String,  _
                    ByVal Original_Top6_Random1 As String,  _
                    ByVal Original_Top6_Random2 As String,  _
                    ByVal Original_Top6_Number As String,  _
                    ByVal Original_Top6_Chart As String,  _
                    ByVal Original_Top7_Type As String,  _
                    ByVal Original_Top7_Random1 As String,  _
                    ByVal Original_Top7_Random2 As String,  _
                    ByVal Original_Top7_Number As String,  _
                    ByVal Original_Top7_Chart As String,  _
                    ByVal Original_Top8_Type As String,  _
                    ByVal Original_Top8_Random1 As String,  _
                    ByVal Original_Top8_Random2 As String,  _
                    ByVal Original_Top8_Number As String,  _
                    ByVal Original_Top8_Chart As String,  _
                    ByVal Original_Mid1_Type As String,  _
                    ByVal Original_Mid1_Random1 As String,  _
                    ByVal Original_Mid1_Random2 As String,  _
                    ByVal Original_Mid1_Number As String,  _
                    ByVal Original_Mid1_Chart As String,  _
                    ByVal Original_Mid2_Type As String,  _
                    ByVal Original_Mid2_Random1 As String,  _
                    ByVal Original_Mid2_Random2 As String,  _
                    ByVal Original_Mid2_Number As String,  _
                    ByVal Original_Mid2_Chart As String,  _
                    ByVal Original_Mid3_Type As String,  _
                    ByVal Original_Mid3_Random1 As String,  _
                    ByVal Original_Mid3_Random2 As String,  _
                    ByVal Original_Mid3_Number As String,  _
                    ByVal Original_Mid3_Chart As String,  _
                    ByVal Original_Mid4_Type As String,  _
                    ByVal Original_Mid4_Random1 As String,  _
                    ByVal Original_Mid4_Random2 As String,  _
                    ByVal Original_Mid4_Number As String,  _
                    ByVal Original_Mid4_Chart As String,  _
                    ByVal Original_Mid5_Type As String,  _
                    ByVal Original_Mid5_Random1 As String,  _
                    ByVal Original_Mid5_Random2 As String,  _
                    ByVal Original_Mid5_Number As String,  _
                    ByVal Original_Mid5_Chart As String,  _
                    ByVal Original_Mid6_Type As String,  _
                    ByVal Original_Mid6_Random1 As String,  _
                    ByVal Original_Mid6_Random2 As String,  _
                    ByVal Original_Mid6_Number As String,  _
                    ByVal Original_Mid6_Chart As String,  _
                    ByVal Original_Mid7_Type As String,  _
                    ByVal Original_Mid7_Random1 As String,  _
                    ByVal Original_Mid7_Random2 As String,  _
                    ByVal Original_Mid7_Number As String,  _
                    ByVal Original_Mid7_Chart As String,  _
                    ByVal Original_Bot1_Type As String,  _
                    ByVal Original_Bot1_Random1 As String,  _
                    ByVal Original_Bot1_Random2 As String,  _
                    ByVal Original_Bot1_Number As String,  _
                    ByVal Original_Bot1_Chart As String,  _
                    ByVal Original_Bot2_Type As String,  _
                    ByVal Original_Bot2_Random1 As String,  _
                    ByVal Original_Bot2_Random2 As String,  _
                    ByVal Original_Bot2_Number As String,  _
                    ByVal Original_Bot2_Chart As String,  _
                    ByVal Original_Bot3_Type As String,  _
                    ByVal Original_Bot3_Random1 As String,  _
                    ByVal Original_Bot3_Random2 As String,  _
                    ByVal Original_Bot3_Number As String,  _
                    ByVal Original_Bot3_Chart As String,  _
                    ByVal Original_Bot4_Type As String,  _
                    ByVal Original_Bot4_Random1 As String,  _
                    ByVal Original_Bot4_Random2 As String,  _
                    ByVal Original_Bot4_Number As String,  _
                    ByVal Original_Bot4_Chart As String,  _
                    ByVal Original_Bot5_Type As String,  _
                    ByVal Original_Bot5_Random1 As String,  _
                    ByVal Original_Bot5_Random2 As String,  _
                    ByVal Original_Bot5_Number As String,  _
                    ByVal Original_Bot5_Chart As String,  _
                    ByVal Original_Bot6_Type As String,  _
                    ByVal Original_Bot6_Random1 As String,  _
                    ByVal Original_Bot6_Random2 As String,  _
                    ByVal Original_Bot6_Number As String,  _
                    ByVal Original_Bot6_Chart As String,  _
                    ByVal Original_Bot7_Type As String,  _
                    ByVal Original_Bot7_Random1 As String,  _
                    ByVal Original_Bot7_Random2 As String,  _
                    ByVal Original_Bot7_Number As String,  _
                    ByVal Original_Bot7_Chart As String,  _
                    ByVal Original_Use_Mid_Tum As Global.System.Nullable(Of Single)) As Integer
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            If (Spring1_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Spring1_Type,String)
            End If
            If (Spring1_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Spring1_Random1,String)
            End If
            If (Spring1_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Spring1_Random2,String)
            End If
            If (Spring1_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Spring1_Number,String)
            End If
            If (Spring1_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Spring1_Chart,String)
            End If
            If (Spring2_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Spring2_Type,String)
            End If
            If (Spring2_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Spring2_Random1,String)
            End If
            If (Spring2_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Spring2_Random2,String)
            End If
            If (Spring2_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Spring2_Number,String)
            End If
            If (Spring2_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Spring2_Chart,String)
            End If
            If (Spring3_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Spring3_Type,String)
            End If
            If (Spring3_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Spring3_Random1,String)
            End If
            If (Spring3_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Spring3_Random2,String)
            End If
            If (Spring3_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Spring3_Number,String)
            End If
            If (Spring3_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Spring3_Chart,String)
            End If
            If (Spring4_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Spring4_Type,String)
            End If
            If (Spring4_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Spring4_Random1,String)
            End If
            If (Spring4_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Spring4_Random2,String)
            End If
            If (Spring4_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Spring4_Number,String)
            End If
            If (Spring4_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Spring4_Chart,String)
            End If
            If (Spring5_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Spring5_Type,String)
            End If
            If (Spring5_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Spring5_Random1,String)
            End If
            If (Spring5_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Spring5_Random2,String)
            End If
            If (Spring5_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Spring5_Number,String)
            End If
            If (Spring5_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Spring5_Chart,String)
            End If
            If (Spring6_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Spring6_Type,String)
            End If
            If (Spring6_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Spring6_Random1,String)
            End If
            If (Spring6_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Spring6_Random2,String)
            End If
            If (Spring6_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Spring6_Number,String)
            End If
            If (Spring6_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Spring6_Chart,String)
            End If
            If (Spring7_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Spring7_Type,String)
            End If
            If (Spring7_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Spring7_Random1,String)
            End If
            If (Spring7_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Spring7_Random2,String)
            End If
            If (Spring7_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Spring7_Number,String)
            End If
            If (Spring7_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Spring7_Chart,String)
            End If
            If (Top1_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Top1_Type,String)
            End If
            If (Top1_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Top1_Random1,String)
            End If
            If (Top1_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Top1_Random2,String)
            End If
            If (Top1_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Top1_Number,String)
            End If
            If (Top1_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Top1_Chart,String)
            End If
            If (Top2_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Top2_Type,String)
            End If
            If (Top2_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Top2_Random1,String)
            End If
            If (Top2_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Top2_Random2,String)
            End If
            If (Top2_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Top2_Number,String)
            End If
            If (Top2_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Top2_Chart,String)
            End If
            If (Top3_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Top3_Type,String)
            End If
            If (Top3_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Top3_Random1,String)
            End If
            If (Top3_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Top3_Random2,String)
            End If
            If (Top3_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Top3_Number,String)
            End If
            If (Top3_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Top3_Chart,String)
            End If
            If (Top4_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Top4_Type,String)
            End If
            If (Top4_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Top4_Random1,String)
            End If
            If (Top4_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Top4_Random2,String)
            End If
            If (Top4_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Top4_Number,String)
            End If
            If (Top4_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Top4_Chart,String)
            End If
            If (Top5_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Top5_Type,String)
            End If
            If (Top5_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Top5_Random1,String)
            End If
            If (Top5_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Top5_Random2,String)
            End If
            If (Top5_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Top5_Number,String)
            End If
            If (Top5_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Top5_Chart,String)
            End If
            If (Top6_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Top6_Type,String)
            End If
            If (Top6_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Top6_Random1,String)
            End If
            If (Top6_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Top6_Random2,String)
            End If
            If (Top6_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Top6_Number,String)
            End If
            If (Top6_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Top6_Chart,String)
            End If
            If (Top7_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Top7_Type,String)
            End If
            If (Top7_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Top7_Random1,String)
            End If
            If (Top7_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Top7_Random2,String)
            End If
            If (Top7_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Top7_Number,String)
            End If
            If (Top7_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Top7_Chart,String)
            End If
            If (Top8_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Top8_Type,String)
            End If
            If (Top8_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Top8_Random1,String)
            End If
            If (Top8_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Top8_Random2,String)
            End If
            If (Top8_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Top8_Number,String)
            End If
            If (Top8_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Top8_Chart,String)
            End If
            If (Mid1_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Mid1_Type,String)
            End If
            If (Mid1_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Mid1_Random1,String)
            End If
            If (Mid1_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Mid1_Random2,String)
            End If
            If (Mid1_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Mid1_Number,String)
            End If
            If (Mid1_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Mid1_Chart,String)
            End If
            If (Mid2_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Mid2_Type,String)
            End If
            If (Mid2_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Mid2_Random1,String)
            End If
            If (Mid2_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Mid2_Random2,String)
            End If
            If (Mid2_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Mid2_Number,String)
            End If
            If (Mid2_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Mid2_Chart,String)
            End If
            If (Mid3_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Mid3_Type,String)
            End If
            If (Mid3_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Mid3_Random1,String)
            End If
            If (Mid3_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Mid3_Random2,String)
            End If
            If (Mid3_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Mid3_Number,String)
            End If
            If (Mid3_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Mid3_Chart,String)
            End If
            If (Mid4_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Mid4_Type,String)
            End If
            If (Mid4_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Mid4_Random1,String)
            End If
            If (Mid4_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Mid4_Random2,String)
            End If
            If (Mid4_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Mid4_Number,String)
            End If
            If (Mid4_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Mid4_Chart,String)
            End If
            If (Mid5_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Mid5_Type,String)
            End If
            If (Mid5_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Mid5_Random1,String)
            End If
            If (Mid5_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Mid5_Random2,String)
            End If
            If (Mid5_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Mid5_Number,String)
            End If
            If (Mid5_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Mid5_Chart,String)
            End If
            If (Mid6_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Mid6_Type,String)
            End If
            If (Mid6_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Mid6_Random1,String)
            End If
            If (Mid6_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Mid6_Random2,String)
            End If
            If (Mid6_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Mid6_Number,String)
            End If
            If (Mid6_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Mid6_Chart,String)
            End If
            If (Mid7_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Mid7_Type,String)
            End If
            If (Mid7_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Mid7_Random1,String)
            End If
            If (Mid7_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Mid7_Random2,String)
            End If
            If (Mid7_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Mid7_Number,String)
            End If
            If (Mid7_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Mid7_Chart,String)
            End If
            If (Bot1_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Bot1_Type,String)
            End If
            If (Bot1_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Bot1_Random1,String)
            End If
            If (Bot1_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Bot1_Random2,String)
            End If
            If (Bot1_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Bot1_Number,String)
            End If
            If (Bot1_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Bot1_Chart,String)
            End If
            If (Bot2_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Bot2_Type,String)
            End If
            If (Bot2_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Bot2_Random1,String)
            End If
            If (Bot2_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Bot2_Random2,String)
            End If
            If (Bot2_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Bot2_Number,String)
            End If
            If (Bot2_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Bot2_Chart,String)
            End If
            If (Bot3_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Bot3_Type,String)
            End If
            If (Bot3_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Bot3_Random1,String)
            End If
            If (Bot3_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Bot3_Random2,String)
            End If
            If (Bot3_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Bot3_Number,String)
            End If
            If (Bot3_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(Bot3_Chart,String)
            End If
            If (Bot4_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Bot4_Type,String)
            End If
            If (Bot4_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(Bot4_Random1,String)
            End If
            If (Bot4_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Bot4_Random2,String)
            End If
            If (Bot4_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(Bot4_Number,String)
            End If
            If (Bot4_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(Bot4_Chart,String)
            End If
            If (Bot5_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(Bot5_Type,String)
            End If
            If (Bot5_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(Bot5_Random1,String)
            End If
            If (Bot5_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(133).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(Bot5_Random2,String)
            End If
            If (Bot5_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Bot5_Number,String)
            End If
            If (Bot5_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(Bot5_Chart,String)
            End If
            If (Bot6_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Bot6_Type,String)
            End If
            If (Bot6_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(Bot6_Random1,String)
            End If
            If (Bot6_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Bot6_Random2,String)
            End If
            If (Bot6_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(139).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(Bot6_Number,String)
            End If
            If (Bot6_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(140).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(Bot6_Chart,String)
            End If
            If (Bot7_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(141).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(Bot7_Type,String)
            End If
            If (Bot7_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(142).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(Bot7_Random1,String)
            End If
            If (Bot7_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(143).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(Bot7_Random2,String)
            End If
            If (Bot7_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(144).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(Bot7_Number,String)
            End If
            If (Bot7_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(145).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(Bot7_Chart,String)
            End If
            If (Use_Mid_Tum.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(Use_Mid_Tum.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(146).Value = Global.System.DBNull.Value
            End If
            If (Original_Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Tumbler_Kit")
            Else
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(Original_Tumbler_Kit,String)
            End If
            If (Original_Spring1_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(Original_Spring1_Type,String)
            End If
            If (Original_Spring1_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(Original_Spring1_Random1,String)
            End If
            If (Original_Spring1_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(Original_Spring1_Random2,String)
            End If
            If (Original_Spring1_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(Original_Spring1_Number,String)
            End If
            If (Original_Spring1_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(Original_Spring1_Chart,String)
            End If
            If (Original_Spring2_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(Original_Spring2_Type,String)
            End If
            If (Original_Spring2_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(Original_Spring2_Random1,String)
            End If
            If (Original_Spring2_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(Original_Spring2_Random2,String)
            End If
            If (Original_Spring2_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(Original_Spring2_Number,String)
            End If
            If (Original_Spring2_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(Original_Spring2_Chart,String)
            End If
            If (Original_Spring3_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(169).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(Original_Spring3_Type,String)
            End If
            If (Original_Spring3_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(171).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(Original_Spring3_Random1,String)
            End If
            If (Original_Spring3_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(173).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(Original_Spring3_Random2,String)
            End If
            If (Original_Spring3_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(175).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(Original_Spring3_Number,String)
            End If
            If (Original_Spring3_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(177).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(Original_Spring3_Chart,String)
            End If
            If (Original_Spring4_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(179).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(Original_Spring4_Type,String)
            End If
            If (Original_Spring4_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(181).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(Original_Spring4_Random1,String)
            End If
            If (Original_Spring4_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(183).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(Original_Spring4_Random2,String)
            End If
            If (Original_Spring4_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(185).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(Original_Spring4_Number,String)
            End If
            If (Original_Spring4_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(187).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(Original_Spring4_Chart,String)
            End If
            If (Original_Spring5_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(189).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(Original_Spring5_Type,String)
            End If
            If (Original_Spring5_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(191).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(Original_Spring5_Random1,String)
            End If
            If (Original_Spring5_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(193).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(Original_Spring5_Random2,String)
            End If
            If (Original_Spring5_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(195).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(Original_Spring5_Number,String)
            End If
            If (Original_Spring5_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(197).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(Original_Spring5_Chart,String)
            End If
            If (Original_Spring6_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(199).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(Original_Spring6_Type,String)
            End If
            If (Original_Spring6_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(201).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(Original_Spring6_Random1,String)
            End If
            If (Original_Spring6_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(203).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(Original_Spring6_Random2,String)
            End If
            If (Original_Spring6_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(205).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(Original_Spring6_Number,String)
            End If
            If (Original_Spring6_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(207).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(Original_Spring6_Chart,String)
            End If
            If (Original_Spring7_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(209).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(Original_Spring7_Type,String)
            End If
            If (Original_Spring7_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(211).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(Original_Spring7_Random1,String)
            End If
            If (Original_Spring7_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(213).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(Original_Spring7_Random2,String)
            End If
            If (Original_Spring7_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(215).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(Original_Spring7_Number,String)
            End If
            If (Original_Spring7_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(217).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(Original_Spring7_Chart,String)
            End If
            If (Original_Top1_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(219).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(Original_Top1_Type,String)
            End If
            If (Original_Top1_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(220).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(221).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(220).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(221).Value = CType(Original_Top1_Random1,String)
            End If
            If (Original_Top1_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(223).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(Original_Top1_Random2,String)
            End If
            If (Original_Top1_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(224).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(225).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(224).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(Original_Top1_Number,String)
            End If
            If (Original_Top1_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(226).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(227).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(226).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(Original_Top1_Chart,String)
            End If
            If (Original_Top2_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(228).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(229).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(228).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(Original_Top2_Type,String)
            End If
            If (Original_Top2_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(230).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(231).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(230).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(231).Value = CType(Original_Top2_Random1,String)
            End If
            If (Original_Top2_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(232).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(233).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(232).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(233).Value = CType(Original_Top2_Random2,String)
            End If
            If (Original_Top2_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(234).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(235).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(234).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(235).Value = CType(Original_Top2_Number,String)
            End If
            If (Original_Top2_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(236).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(237).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(236).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(237).Value = CType(Original_Top2_Chart,String)
            End If
            If (Original_Top3_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(238).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(239).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(238).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(239).Value = CType(Original_Top3_Type,String)
            End If
            If (Original_Top3_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(240).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(241).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(240).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(241).Value = CType(Original_Top3_Random1,String)
            End If
            If (Original_Top3_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(242).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(243).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(242).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(243).Value = CType(Original_Top3_Random2,String)
            End If
            If (Original_Top3_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(244).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(245).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(244).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(245).Value = CType(Original_Top3_Number,String)
            End If
            If (Original_Top3_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(246).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(247).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(246).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(247).Value = CType(Original_Top3_Chart,String)
            End If
            If (Original_Top4_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(248).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(249).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(248).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(249).Value = CType(Original_Top4_Type,String)
            End If
            If (Original_Top4_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(250).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(251).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(250).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(251).Value = CType(Original_Top4_Random1,String)
            End If
            If (Original_Top4_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(252).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(253).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(252).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(253).Value = CType(Original_Top4_Random2,String)
            End If
            If (Original_Top4_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(254).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(255).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(254).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(255).Value = CType(Original_Top4_Number,String)
            End If
            If (Original_Top4_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(256).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(257).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(256).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(257).Value = CType(Original_Top4_Chart,String)
            End If
            If (Original_Top5_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(258).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(259).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(258).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(259).Value = CType(Original_Top5_Type,String)
            End If
            If (Original_Top5_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(260).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(261).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(260).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(261).Value = CType(Original_Top5_Random1,String)
            End If
            If (Original_Top5_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(262).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(263).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(262).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(263).Value = CType(Original_Top5_Random2,String)
            End If
            If (Original_Top5_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(264).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(265).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(264).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(265).Value = CType(Original_Top5_Number,String)
            End If
            If (Original_Top5_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(266).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(267).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(266).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(267).Value = CType(Original_Top5_Chart,String)
            End If
            If (Original_Top6_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(268).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(269).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(268).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(269).Value = CType(Original_Top6_Type,String)
            End If
            If (Original_Top6_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(270).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(271).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(270).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(271).Value = CType(Original_Top6_Random1,String)
            End If
            If (Original_Top6_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(272).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(273).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(272).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(273).Value = CType(Original_Top6_Random2,String)
            End If
            If (Original_Top6_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(274).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(275).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(274).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(275).Value = CType(Original_Top6_Number,String)
            End If
            If (Original_Top6_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(276).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(277).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(276).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(277).Value = CType(Original_Top6_Chart,String)
            End If
            If (Original_Top7_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(278).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(279).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(278).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(279).Value = CType(Original_Top7_Type,String)
            End If
            If (Original_Top7_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(280).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(281).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(280).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(281).Value = CType(Original_Top7_Random1,String)
            End If
            If (Original_Top7_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(282).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(283).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(282).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(283).Value = CType(Original_Top7_Random2,String)
            End If
            If (Original_Top7_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(284).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(285).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(284).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(285).Value = CType(Original_Top7_Number,String)
            End If
            If (Original_Top7_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(286).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(287).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(286).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(287).Value = CType(Original_Top7_Chart,String)
            End If
            If (Original_Top8_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(288).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(289).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(288).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(289).Value = CType(Original_Top8_Type,String)
            End If
            If (Original_Top8_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(290).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(291).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(290).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(291).Value = CType(Original_Top8_Random1,String)
            End If
            If (Original_Top8_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(292).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(293).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(292).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(293).Value = CType(Original_Top8_Random2,String)
            End If
            If (Original_Top8_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(294).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(295).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(294).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(295).Value = CType(Original_Top8_Number,String)
            End If
            If (Original_Top8_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(296).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(297).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(296).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(297).Value = CType(Original_Top8_Chart,String)
            End If
            If (Original_Mid1_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(298).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(299).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(298).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(299).Value = CType(Original_Mid1_Type,String)
            End If
            If (Original_Mid1_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(300).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(301).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(300).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(301).Value = CType(Original_Mid1_Random1,String)
            End If
            If (Original_Mid1_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(302).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(303).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(302).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(303).Value = CType(Original_Mid1_Random2,String)
            End If
            If (Original_Mid1_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(304).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(305).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(304).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(305).Value = CType(Original_Mid1_Number,String)
            End If
            If (Original_Mid1_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(306).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(307).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(306).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(307).Value = CType(Original_Mid1_Chart,String)
            End If
            If (Original_Mid2_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(308).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(309).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(308).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(309).Value = CType(Original_Mid2_Type,String)
            End If
            If (Original_Mid2_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(310).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(311).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(310).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(311).Value = CType(Original_Mid2_Random1,String)
            End If
            If (Original_Mid2_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(312).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(313).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(312).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(313).Value = CType(Original_Mid2_Random2,String)
            End If
            If (Original_Mid2_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(314).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(315).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(314).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(315).Value = CType(Original_Mid2_Number,String)
            End If
            If (Original_Mid2_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(316).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(317).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(316).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(317).Value = CType(Original_Mid2_Chart,String)
            End If
            If (Original_Mid3_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(318).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(319).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(318).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(319).Value = CType(Original_Mid3_Type,String)
            End If
            If (Original_Mid3_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(320).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(321).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(320).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(321).Value = CType(Original_Mid3_Random1,String)
            End If
            If (Original_Mid3_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(322).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(323).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(322).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(323).Value = CType(Original_Mid3_Random2,String)
            End If
            If (Original_Mid3_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(324).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(325).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(324).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(325).Value = CType(Original_Mid3_Number,String)
            End If
            If (Original_Mid3_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(326).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(327).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(326).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(327).Value = CType(Original_Mid3_Chart,String)
            End If
            If (Original_Mid4_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(328).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(329).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(328).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(329).Value = CType(Original_Mid4_Type,String)
            End If
            If (Original_Mid4_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(330).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(331).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(330).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(331).Value = CType(Original_Mid4_Random1,String)
            End If
            If (Original_Mid4_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(332).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(333).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(332).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(333).Value = CType(Original_Mid4_Random2,String)
            End If
            If (Original_Mid4_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(334).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(335).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(334).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(335).Value = CType(Original_Mid4_Number,String)
            End If
            If (Original_Mid4_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(336).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(337).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(336).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(337).Value = CType(Original_Mid4_Chart,String)
            End If
            If (Original_Mid5_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(338).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(339).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(338).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(339).Value = CType(Original_Mid5_Type,String)
            End If
            If (Original_Mid5_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(340).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(341).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(340).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(341).Value = CType(Original_Mid5_Random1,String)
            End If
            If (Original_Mid5_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(342).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(343).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(342).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(343).Value = CType(Original_Mid5_Random2,String)
            End If
            If (Original_Mid5_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(344).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(345).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(344).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(345).Value = CType(Original_Mid5_Number,String)
            End If
            If (Original_Mid5_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(346).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(347).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(346).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(347).Value = CType(Original_Mid5_Chart,String)
            End If
            If (Original_Mid6_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(348).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(349).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(348).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(349).Value = CType(Original_Mid6_Type,String)
            End If
            If (Original_Mid6_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(350).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(351).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(350).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(351).Value = CType(Original_Mid6_Random1,String)
            End If
            If (Original_Mid6_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(352).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(353).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(352).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(353).Value = CType(Original_Mid6_Random2,String)
            End If
            If (Original_Mid6_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(354).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(355).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(354).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(355).Value = CType(Original_Mid6_Number,String)
            End If
            If (Original_Mid6_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(356).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(357).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(356).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(357).Value = CType(Original_Mid6_Chart,String)
            End If
            If (Original_Mid7_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(358).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(359).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(358).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(359).Value = CType(Original_Mid7_Type,String)
            End If
            If (Original_Mid7_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(360).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(361).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(360).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(361).Value = CType(Original_Mid7_Random1,String)
            End If
            If (Original_Mid7_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(362).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(363).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(362).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(363).Value = CType(Original_Mid7_Random2,String)
            End If
            If (Original_Mid7_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(364).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(365).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(364).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(365).Value = CType(Original_Mid7_Number,String)
            End If
            If (Original_Mid7_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(366).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(367).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(366).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(367).Value = CType(Original_Mid7_Chart,String)
            End If
            If (Original_Bot1_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(368).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(369).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(368).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(369).Value = CType(Original_Bot1_Type,String)
            End If
            If (Original_Bot1_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(370).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(371).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(370).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(371).Value = CType(Original_Bot1_Random1,String)
            End If
            If (Original_Bot1_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(372).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(373).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(372).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(373).Value = CType(Original_Bot1_Random2,String)
            End If
            If (Original_Bot1_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(374).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(375).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(374).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(375).Value = CType(Original_Bot1_Number,String)
            End If
            If (Original_Bot1_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(376).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(377).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(376).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(377).Value = CType(Original_Bot1_Chart,String)
            End If
            If (Original_Bot2_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(378).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(379).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(378).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(379).Value = CType(Original_Bot2_Type,String)
            End If
            If (Original_Bot2_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(380).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(381).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(380).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(381).Value = CType(Original_Bot2_Random1,String)
            End If
            If (Original_Bot2_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(382).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(383).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(382).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(383).Value = CType(Original_Bot2_Random2,String)
            End If
            If (Original_Bot2_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(384).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(385).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(384).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(385).Value = CType(Original_Bot2_Number,String)
            End If
            If (Original_Bot2_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(386).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(387).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(386).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(387).Value = CType(Original_Bot2_Chart,String)
            End If
            If (Original_Bot3_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(388).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(389).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(388).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(389).Value = CType(Original_Bot3_Type,String)
            End If
            If (Original_Bot3_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(390).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(391).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(390).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(391).Value = CType(Original_Bot3_Random1,String)
            End If
            If (Original_Bot3_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(392).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(393).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(392).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(393).Value = CType(Original_Bot3_Random2,String)
            End If
            If (Original_Bot3_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(394).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(395).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(394).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(395).Value = CType(Original_Bot3_Number,String)
            End If
            If (Original_Bot3_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(396).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(397).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(396).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(397).Value = CType(Original_Bot3_Chart,String)
            End If
            If (Original_Bot4_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(398).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(399).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(398).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(399).Value = CType(Original_Bot4_Type,String)
            End If
            If (Original_Bot4_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(400).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(401).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(400).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(401).Value = CType(Original_Bot4_Random1,String)
            End If
            If (Original_Bot4_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(402).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(403).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(402).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(403).Value = CType(Original_Bot4_Random2,String)
            End If
            If (Original_Bot4_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(404).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(405).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(404).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(405).Value = CType(Original_Bot4_Number,String)
            End If
            If (Original_Bot4_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(406).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(407).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(406).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(407).Value = CType(Original_Bot4_Chart,String)
            End If
            If (Original_Bot5_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(408).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(409).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(408).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(409).Value = CType(Original_Bot5_Type,String)
            End If
            If (Original_Bot5_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(410).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(411).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(410).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(411).Value = CType(Original_Bot5_Random1,String)
            End If
            If (Original_Bot5_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(412).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(413).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(412).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(413).Value = CType(Original_Bot5_Random2,String)
            End If
            If (Original_Bot5_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(414).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(415).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(414).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(415).Value = CType(Original_Bot5_Number,String)
            End If
            If (Original_Bot5_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(416).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(417).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(416).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(417).Value = CType(Original_Bot5_Chart,String)
            End If
            If (Original_Bot6_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(418).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(419).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(418).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(419).Value = CType(Original_Bot6_Type,String)
            End If
            If (Original_Bot6_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(420).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(421).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(420).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(421).Value = CType(Original_Bot6_Random1,String)
            End If
            If (Original_Bot6_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(422).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(423).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(422).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(423).Value = CType(Original_Bot6_Random2,String)
            End If
            If (Original_Bot6_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(424).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(425).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(424).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(425).Value = CType(Original_Bot6_Number,String)
            End If
            If (Original_Bot6_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(426).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(427).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(426).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(427).Value = CType(Original_Bot6_Chart,String)
            End If
            If (Original_Bot7_Type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(428).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(429).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(428).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(429).Value = CType(Original_Bot7_Type,String)
            End If
            If (Original_Bot7_Random1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(430).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(431).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(430).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(431).Value = CType(Original_Bot7_Random1,String)
            End If
            If (Original_Bot7_Random2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(432).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(433).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(432).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(433).Value = CType(Original_Bot7_Random2,String)
            End If
            If (Original_Bot7_Number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(434).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(435).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(434).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(435).Value = CType(Original_Bot7_Number,String)
            End If
            If (Original_Bot7_Chart Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(436).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(437).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(436).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(437).Value = CType(Original_Bot7_Chart,String)
            End If
            If (Original_Use_Mid_Tum.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(438).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(439).Value = CType(Original_Use_Mid_Tum.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(438).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(439).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Spring1_Type As String,  _
                    ByVal Spring1_Random1 As String,  _
                    ByVal Spring1_Random2 As String,  _
                    ByVal Spring1_Number As String,  _
                    ByVal Spring1_Chart As String,  _
                    ByVal Spring2_Type As String,  _
                    ByVal Spring2_Random1 As String,  _
                    ByVal Spring2_Random2 As String,  _
                    ByVal Spring2_Number As String,  _
                    ByVal Spring2_Chart As String,  _
                    ByVal Spring3_Type As String,  _
                    ByVal Spring3_Random1 As String,  _
                    ByVal Spring3_Random2 As String,  _
                    ByVal Spring3_Number As String,  _
                    ByVal Spring3_Chart As String,  _
                    ByVal Spring4_Type As String,  _
                    ByVal Spring4_Random1 As String,  _
                    ByVal Spring4_Random2 As String,  _
                    ByVal Spring4_Number As String,  _
                    ByVal Spring4_Chart As String,  _
                    ByVal Spring5_Type As String,  _
                    ByVal Spring5_Random1 As String,  _
                    ByVal Spring5_Random2 As String,  _
                    ByVal Spring5_Number As String,  _
                    ByVal Spring5_Chart As String,  _
                    ByVal Spring6_Type As String,  _
                    ByVal Spring6_Random1 As String,  _
                    ByVal Spring6_Random2 As String,  _
                    ByVal Spring6_Number As String,  _
                    ByVal Spring6_Chart As String,  _
                    ByVal Spring7_Type As String,  _
                    ByVal Spring7_Random1 As String,  _
                    ByVal Spring7_Random2 As String,  _
                    ByVal Spring7_Number As String,  _
                    ByVal Spring7_Chart As String,  _
                    ByVal Top1_Type As String,  _
                    ByVal Top1_Random1 As String,  _
                    ByVal Top1_Random2 As String,  _
                    ByVal Top1_Number As String,  _
                    ByVal Top1_Chart As String,  _
                    ByVal Top2_Type As String,  _
                    ByVal Top2_Random1 As String,  _
                    ByVal Top2_Random2 As String,  _
                    ByVal Top2_Number As String,  _
                    ByVal Top2_Chart As String,  _
                    ByVal Top3_Type As String,  _
                    ByVal Top3_Random1 As String,  _
                    ByVal Top3_Random2 As String,  _
                    ByVal Top3_Number As String,  _
                    ByVal Top3_Chart As String,  _
                    ByVal Top4_Type As String,  _
                    ByVal Top4_Random1 As String,  _
                    ByVal Top4_Random2 As String,  _
                    ByVal Top4_Number As String,  _
                    ByVal Top4_Chart As String,  _
                    ByVal Top5_Type As String,  _
                    ByVal Top5_Random1 As String,  _
                    ByVal Top5_Random2 As String,  _
                    ByVal Top5_Number As String,  _
                    ByVal Top5_Chart As String,  _
                    ByVal Top6_Type As String,  _
                    ByVal Top6_Random1 As String,  _
                    ByVal Top6_Random2 As String,  _
                    ByVal Top6_Number As String,  _
                    ByVal Top6_Chart As String,  _
                    ByVal Top7_Type As String,  _
                    ByVal Top7_Random1 As String,  _
                    ByVal Top7_Random2 As String,  _
                    ByVal Top7_Number As String,  _
                    ByVal Top7_Chart As String,  _
                    ByVal Top8_Type As String,  _
                    ByVal Top8_Random1 As String,  _
                    ByVal Top8_Random2 As String,  _
                    ByVal Top8_Number As String,  _
                    ByVal Top8_Chart As String,  _
                    ByVal Mid1_Type As String,  _
                    ByVal Mid1_Random1 As String,  _
                    ByVal Mid1_Random2 As String,  _
                    ByVal Mid1_Number As String,  _
                    ByVal Mid1_Chart As String,  _
                    ByVal Mid2_Type As String,  _
                    ByVal Mid2_Random1 As String,  _
                    ByVal Mid2_Random2 As String,  _
                    ByVal Mid2_Number As String,  _
                    ByVal Mid2_Chart As String,  _
                    ByVal Mid3_Type As String,  _
                    ByVal Mid3_Random1 As String,  _
                    ByVal Mid3_Random2 As String,  _
                    ByVal Mid3_Number As String,  _
                    ByVal Mid3_Chart As String,  _
                    ByVal Mid4_Type As String,  _
                    ByVal Mid4_Random1 As String,  _
                    ByVal Mid4_Random2 As String,  _
                    ByVal Mid4_Number As String,  _
                    ByVal Mid4_Chart As String,  _
                    ByVal Mid5_Type As String,  _
                    ByVal Mid5_Random1 As String,  _
                    ByVal Mid5_Random2 As String,  _
                    ByVal Mid5_Number As String,  _
                    ByVal Mid5_Chart As String,  _
                    ByVal Mid6_Type As String,  _
                    ByVal Mid6_Random1 As String,  _
                    ByVal Mid6_Random2 As String,  _
                    ByVal Mid6_Number As String,  _
                    ByVal Mid6_Chart As String,  _
                    ByVal Mid7_Type As String,  _
                    ByVal Mid7_Random1 As String,  _
                    ByVal Mid7_Random2 As String,  _
                    ByVal Mid7_Number As String,  _
                    ByVal Mid7_Chart As String,  _
                    ByVal Bot1_Type As String,  _
                    ByVal Bot1_Random1 As String,  _
                    ByVal Bot1_Random2 As String,  _
                    ByVal Bot1_Number As String,  _
                    ByVal Bot1_Chart As String,  _
                    ByVal Bot2_Type As String,  _
                    ByVal Bot2_Random1 As String,  _
                    ByVal Bot2_Random2 As String,  _
                    ByVal Bot2_Number As String,  _
                    ByVal Bot2_Chart As String,  _
                    ByVal Bot3_Type As String,  _
                    ByVal Bot3_Random1 As String,  _
                    ByVal Bot3_Random2 As String,  _
                    ByVal Bot3_Number As String,  _
                    ByVal Bot3_Chart As String,  _
                    ByVal Bot4_Type As String,  _
                    ByVal Bot4_Random1 As String,  _
                    ByVal Bot4_Random2 As String,  _
                    ByVal Bot4_Number As String,  _
                    ByVal Bot4_Chart As String,  _
                    ByVal Bot5_Type As String,  _
                    ByVal Bot5_Random1 As String,  _
                    ByVal Bot5_Random2 As String,  _
                    ByVal Bot5_Number As String,  _
                    ByVal Bot5_Chart As String,  _
                    ByVal Bot6_Type As String,  _
                    ByVal Bot6_Random1 As String,  _
                    ByVal Bot6_Random2 As String,  _
                    ByVal Bot6_Number As String,  _
                    ByVal Bot6_Chart As String,  _
                    ByVal Bot7_Type As String,  _
                    ByVal Bot7_Random1 As String,  _
                    ByVal Bot7_Random2 As String,  _
                    ByVal Bot7_Number As String,  _
                    ByVal Bot7_Chart As String,  _
                    ByVal Use_Mid_Tum As Global.System.Nullable(Of Single),  _
                    ByVal Original_Tumbler_Kit As String,  _
                    ByVal Original_Spring1_Type As String,  _
                    ByVal Original_Spring1_Random1 As String,  _
                    ByVal Original_Spring1_Random2 As String,  _
                    ByVal Original_Spring1_Number As String,  _
                    ByVal Original_Spring1_Chart As String,  _
                    ByVal Original_Spring2_Type As String,  _
                    ByVal Original_Spring2_Random1 As String,  _
                    ByVal Original_Spring2_Random2 As String,  _
                    ByVal Original_Spring2_Number As String,  _
                    ByVal Original_Spring2_Chart As String,  _
                    ByVal Original_Spring3_Type As String,  _
                    ByVal Original_Spring3_Random1 As String,  _
                    ByVal Original_Spring3_Random2 As String,  _
                    ByVal Original_Spring3_Number As String,  _
                    ByVal Original_Spring3_Chart As String,  _
                    ByVal Original_Spring4_Type As String,  _
                    ByVal Original_Spring4_Random1 As String,  _
                    ByVal Original_Spring4_Random2 As String,  _
                    ByVal Original_Spring4_Number As String,  _
                    ByVal Original_Spring4_Chart As String,  _
                    ByVal Original_Spring5_Type As String,  _
                    ByVal Original_Spring5_Random1 As String,  _
                    ByVal Original_Spring5_Random2 As String,  _
                    ByVal Original_Spring5_Number As String,  _
                    ByVal Original_Spring5_Chart As String,  _
                    ByVal Original_Spring6_Type As String,  _
                    ByVal Original_Spring6_Random1 As String,  _
                    ByVal Original_Spring6_Random2 As String,  _
                    ByVal Original_Spring6_Number As String,  _
                    ByVal Original_Spring6_Chart As String,  _
                    ByVal Original_Spring7_Type As String,  _
                    ByVal Original_Spring7_Random1 As String,  _
                    ByVal Original_Spring7_Random2 As String,  _
                    ByVal Original_Spring7_Number As String,  _
                    ByVal Original_Spring7_Chart As String,  _
                    ByVal Original_Top1_Type As String,  _
                    ByVal Original_Top1_Random1 As String,  _
                    ByVal Original_Top1_Random2 As String,  _
                    ByVal Original_Top1_Number As String,  _
                    ByVal Original_Top1_Chart As String,  _
                    ByVal Original_Top2_Type As String,  _
                    ByVal Original_Top2_Random1 As String,  _
                    ByVal Original_Top2_Random2 As String,  _
                    ByVal Original_Top2_Number As String,  _
                    ByVal Original_Top2_Chart As String,  _
                    ByVal Original_Top3_Type As String,  _
                    ByVal Original_Top3_Random1 As String,  _
                    ByVal Original_Top3_Random2 As String,  _
                    ByVal Original_Top3_Number As String,  _
                    ByVal Original_Top3_Chart As String,  _
                    ByVal Original_Top4_Type As String,  _
                    ByVal Original_Top4_Random1 As String,  _
                    ByVal Original_Top4_Random2 As String,  _
                    ByVal Original_Top4_Number As String,  _
                    ByVal Original_Top4_Chart As String,  _
                    ByVal Original_Top5_Type As String,  _
                    ByVal Original_Top5_Random1 As String,  _
                    ByVal Original_Top5_Random2 As String,  _
                    ByVal Original_Top5_Number As String,  _
                    ByVal Original_Top5_Chart As String,  _
                    ByVal Original_Top6_Type As String,  _
                    ByVal Original_Top6_Random1 As String,  _
                    ByVal Original_Top6_Random2 As String,  _
                    ByVal Original_Top6_Number As String,  _
                    ByVal Original_Top6_Chart As String,  _
                    ByVal Original_Top7_Type As String,  _
                    ByVal Original_Top7_Random1 As String,  _
                    ByVal Original_Top7_Random2 As String,  _
                    ByVal Original_Top7_Number As String,  _
                    ByVal Original_Top7_Chart As String,  _
                    ByVal Original_Top8_Type As String,  _
                    ByVal Original_Top8_Random1 As String,  _
                    ByVal Original_Top8_Random2 As String,  _
                    ByVal Original_Top8_Number As String,  _
                    ByVal Original_Top8_Chart As String,  _
                    ByVal Original_Mid1_Type As String,  _
                    ByVal Original_Mid1_Random1 As String,  _
                    ByVal Original_Mid1_Random2 As String,  _
                    ByVal Original_Mid1_Number As String,  _
                    ByVal Original_Mid1_Chart As String,  _
                    ByVal Original_Mid2_Type As String,  _
                    ByVal Original_Mid2_Random1 As String,  _
                    ByVal Original_Mid2_Random2 As String,  _
                    ByVal Original_Mid2_Number As String,  _
                    ByVal Original_Mid2_Chart As String,  _
                    ByVal Original_Mid3_Type As String,  _
                    ByVal Original_Mid3_Random1 As String,  _
                    ByVal Original_Mid3_Random2 As String,  _
                    ByVal Original_Mid3_Number As String,  _
                    ByVal Original_Mid3_Chart As String,  _
                    ByVal Original_Mid4_Type As String,  _
                    ByVal Original_Mid4_Random1 As String,  _
                    ByVal Original_Mid4_Random2 As String,  _
                    ByVal Original_Mid4_Number As String,  _
                    ByVal Original_Mid4_Chart As String,  _
                    ByVal Original_Mid5_Type As String,  _
                    ByVal Original_Mid5_Random1 As String,  _
                    ByVal Original_Mid5_Random2 As String,  _
                    ByVal Original_Mid5_Number As String,  _
                    ByVal Original_Mid5_Chart As String,  _
                    ByVal Original_Mid6_Type As String,  _
                    ByVal Original_Mid6_Random1 As String,  _
                    ByVal Original_Mid6_Random2 As String,  _
                    ByVal Original_Mid6_Number As String,  _
                    ByVal Original_Mid6_Chart As String,  _
                    ByVal Original_Mid7_Type As String,  _
                    ByVal Original_Mid7_Random1 As String,  _
                    ByVal Original_Mid7_Random2 As String,  _
                    ByVal Original_Mid7_Number As String,  _
                    ByVal Original_Mid7_Chart As String,  _
                    ByVal Original_Bot1_Type As String,  _
                    ByVal Original_Bot1_Random1 As String,  _
                    ByVal Original_Bot1_Random2 As String,  _
                    ByVal Original_Bot1_Number As String,  _
                    ByVal Original_Bot1_Chart As String,  _
                    ByVal Original_Bot2_Type As String,  _
                    ByVal Original_Bot2_Random1 As String,  _
                    ByVal Original_Bot2_Random2 As String,  _
                    ByVal Original_Bot2_Number As String,  _
                    ByVal Original_Bot2_Chart As String,  _
                    ByVal Original_Bot3_Type As String,  _
                    ByVal Original_Bot3_Random1 As String,  _
                    ByVal Original_Bot3_Random2 As String,  _
                    ByVal Original_Bot3_Number As String,  _
                    ByVal Original_Bot3_Chart As String,  _
                    ByVal Original_Bot4_Type As String,  _
                    ByVal Original_Bot4_Random1 As String,  _
                    ByVal Original_Bot4_Random2 As String,  _
                    ByVal Original_Bot4_Number As String,  _
                    ByVal Original_Bot4_Chart As String,  _
                    ByVal Original_Bot5_Type As String,  _
                    ByVal Original_Bot5_Random1 As String,  _
                    ByVal Original_Bot5_Random2 As String,  _
                    ByVal Original_Bot5_Number As String,  _
                    ByVal Original_Bot5_Chart As String,  _
                    ByVal Original_Bot6_Type As String,  _
                    ByVal Original_Bot6_Random1 As String,  _
                    ByVal Original_Bot6_Random2 As String,  _
                    ByVal Original_Bot6_Number As String,  _
                    ByVal Original_Bot6_Chart As String,  _
                    ByVal Original_Bot7_Type As String,  _
                    ByVal Original_Bot7_Random1 As String,  _
                    ByVal Original_Bot7_Random2 As String,  _
                    ByVal Original_Bot7_Number As String,  _
                    ByVal Original_Bot7_Chart As String,  _
                    ByVal Original_Use_Mid_Tum As Global.System.Nullable(Of Single)) As Integer
            Return Me.Update(Original_Tumbler_Kit, Spring1_Type, Spring1_Random1, Spring1_Random2, Spring1_Number, Spring1_Chart, Spring2_Type, Spring2_Random1, Spring2_Random2, Spring2_Number, Spring2_Chart, Spring3_Type, Spring3_Random1, Spring3_Random2, Spring3_Number, Spring3_Chart, Spring4_Type, Spring4_Random1, Spring4_Random2, Spring4_Number, Spring4_Chart, Spring5_Type, Spring5_Random1, Spring5_Random2, Spring5_Number, Spring5_Chart, Spring6_Type, Spring6_Random1, Spring6_Random2, Spring6_Number, Spring6_Chart, Spring7_Type, Spring7_Random1, Spring7_Random2, Spring7_Number, Spring7_Chart, Top1_Type, Top1_Random1, Top1_Random2, Top1_Number, Top1_Chart, Top2_Type, Top2_Random1, Top2_Random2, Top2_Number, Top2_Chart, Top3_Type, Top3_Random1, Top3_Random2, Top3_Number, Top3_Chart, Top4_Type, Top4_Random1, Top4_Random2, Top4_Number, Top4_Chart, Top5_Type, Top5_Random1, Top5_Random2, Top5_Number, Top5_Chart, Top6_Type, Top6_Random1, Top6_Random2, Top6_Number, Top6_Chart, Top7_Type, Top7_Random1, Top7_Random2, Top7_Number, Top7_Chart, Top8_Type, Top8_Random1, Top8_Random2, Top8_Number, Top8_Chart, Mid1_Type, Mid1_Random1, Mid1_Random2, Mid1_Number, Mid1_Chart, Mid2_Type, Mid2_Random1, Mid2_Random2, Mid2_Number, Mid2_Chart, Mid3_Type, Mid3_Random1, Mid3_Random2, Mid3_Number, Mid3_Chart, Mid4_Type, Mid4_Random1, Mid4_Random2, Mid4_Number, Mid4_Chart, Mid5_Type, Mid5_Random1, Mid5_Random2, Mid5_Number, Mid5_Chart, Mid6_Type, Mid6_Random1, Mid6_Random2, Mid6_Number, Mid6_Chart, Mid7_Type, Mid7_Random1, Mid7_Random2, Mid7_Number, Mid7_Chart, Bot1_Type, Bot1_Random1, Bot1_Random2, Bot1_Number, Bot1_Chart, Bot2_Type, Bot2_Random1, Bot2_Random2, Bot2_Number, Bot2_Chart, Bot3_Type, Bot3_Random1, Bot3_Random2, Bot3_Number, Bot3_Chart, Bot4_Type, Bot4_Random1, Bot4_Random2, Bot4_Number, Bot4_Chart, Bot5_Type, Bot5_Random1, Bot5_Random2, Bot5_Number, Bot5_Chart, Bot6_Type, Bot6_Random1, Bot6_Random2, Bot6_Number, Bot6_Chart, Bot7_Type, Bot7_Random1, Bot7_Random2, Bot7_Number, Bot7_Chart, Use_Mid_Tum, Original_Tumbler_Kit, Original_Spring1_Type, Original_Spring1_Random1, Original_Spring1_Random2, Original_Spring1_Number, Original_Spring1_Chart, Original_Spring2_Type, Original_Spring2_Random1, Original_Spring2_Random2, Original_Spring2_Number, Original_Spring2_Chart, Original_Spring3_Type, Original_Spring3_Random1, Original_Spring3_Random2, Original_Spring3_Number, Original_Spring3_Chart, Original_Spring4_Type, Original_Spring4_Random1, Original_Spring4_Random2, Original_Spring4_Number, Original_Spring4_Chart, Original_Spring5_Type, Original_Spring5_Random1, Original_Spring5_Random2, Original_Spring5_Number, Original_Spring5_Chart, Original_Spring6_Type, Original_Spring6_Random1, Original_Spring6_Random2, Original_Spring6_Number, Original_Spring6_Chart, Original_Spring7_Type, Original_Spring7_Random1, Original_Spring7_Random2, Original_Spring7_Number, Original_Spring7_Chart, Original_Top1_Type, Original_Top1_Random1, Original_Top1_Random2, Original_Top1_Number, Original_Top1_Chart, Original_Top2_Type, Original_Top2_Random1, Original_Top2_Random2, Original_Top2_Number, Original_Top2_Chart, Original_Top3_Type, Original_Top3_Random1, Original_Top3_Random2, Original_Top3_Number, Original_Top3_Chart, Original_Top4_Type, Original_Top4_Random1, Original_Top4_Random2, Original_Top4_Number, Original_Top4_Chart, Original_Top5_Type, Original_Top5_Random1, Original_Top5_Random2, Original_Top5_Number, Original_Top5_Chart, Original_Top6_Type, Original_Top6_Random1, Original_Top6_Random2, Original_Top6_Number, Original_Top6_Chart, Original_Top7_Type, Original_Top7_Random1, Original_Top7_Random2, Original_Top7_Number, Original_Top7_Chart, Original_Top8_Type, Original_Top8_Random1, Original_Top8_Random2, Original_Top8_Number, Original_Top8_Chart, Original_Mid1_Type, Original_Mid1_Random1, Original_Mid1_Random2, Original_Mid1_Number, Original_Mid1_Chart, Original_Mid2_Type, Original_Mid2_Random1, Original_Mid2_Random2, Original_Mid2_Number, Original_Mid2_Chart, Original_Mid3_Type, Original_Mid3_Random1, Original_Mid3_Random2, Original_Mid3_Number, Original_Mid3_Chart, Original_Mid4_Type, Original_Mid4_Random1, Original_Mid4_Random2, Original_Mid4_Number, Original_Mid4_Chart, Original_Mid5_Type, Original_Mid5_Random1, Original_Mid5_Random2, Original_Mid5_Number, Original_Mid5_Chart, Original_Mid6_Type, Original_Mid6_Random1, Original_Mid6_Random2, Original_Mid6_Number, Original_Mid6_Chart, Original_Mid7_Type, Original_Mid7_Random1, Original_Mid7_Random2, Original_Mid7_Number, Original_Mid7_Chart, Original_Bot1_Type, Original_Bot1_Random1, Original_Bot1_Random2, Original_Bot1_Number, Original_Bot1_Chart, Original_Bot2_Type, Original_Bot2_Random1, Original_Bot2_Random2, Original_Bot2_Number, Original_Bot2_Chart, Original_Bot3_Type, Original_Bot3_Random1, Original_Bot3_Random2, Original_Bot3_Number, Original_Bot3_Chart, Original_Bot4_Type, Original_Bot4_Random1, Original_Bot4_Random2, Original_Bot4_Number, Original_Bot4_Chart, Original_Bot5_Type, Original_Bot5_Random1, Original_Bot5_Random2, Original_Bot5_Number, Original_Bot5_Chart, Original_Bot6_Type, Original_Bot6_Random1, Original_Bot6_Random2, Original_Bot6_Number, Original_Bot6_Chart, Original_Bot7_Type, Original_Bot7_Random1, Original_Bot7_Random2, Original_Bot7_Number, Original_Bot7_Chart, Original_Use_Mid_Tum)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot1Chart(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(1)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot1Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(2)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot1Random1(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(3)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot1Random2(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(4)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot1Type(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(5)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot2Chart(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(6)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot2Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(7)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot2Random1(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(8)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot2Random2(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(9)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot2Type(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(10)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot3Chart(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(11)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot3Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(12)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot3Random1(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(13)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot3Random2(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(14)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot3Type(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(15)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot4Chart(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(16)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot4Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(17)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot4Random1(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(18)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot4Random2(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(19)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot4Type(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(20)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot5Chart(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(21)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot5Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(22)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot5Random1(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(23)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot5Random2(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(24)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot5Type(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(25)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot6Chart(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(26)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot6Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(27)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot6Random1(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(28)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot6Random2(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(29)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot6Type(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(30)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot7Chart(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(31)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot7Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(32)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot7Random1(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(33)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot7Random2(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(34)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetBot7Type(ByVal Tumbler_Kit As String) As String
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(35)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid1Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(36)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid1Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(37)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid1Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(38)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid1Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(39)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid1Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(40)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid2Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(41)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid2Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(42)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid2Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(43)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid2Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(44)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid2Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(45)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid3Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(46)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid3Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(47)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid3Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(48)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid3Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(49)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid3Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(50)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid4Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(51)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid4Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(52)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid4Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(53)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid4Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(54)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid4Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(55)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid5Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(56)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid5Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(57)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid5Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(58)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid5Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(59)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid5Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(60)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid6Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(61)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid6Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(62)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid6Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(63)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid6Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(64)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid6Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(65)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid7Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(66)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid7Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(67)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid7Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(68)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid7Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(69)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMid7Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(70)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring1Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(71)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring1Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(72)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring1Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(73)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring1Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(74)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring1Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(75)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring2Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(76)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring2Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(77)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring2Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(78)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring2Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(79)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring2Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(80)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring3Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(81)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring3Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(82)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring3Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(83)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring3Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(84)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring3Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(85)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring4Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(86)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring4Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(87)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring4Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(88)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring4Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(89)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring4Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(90)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring5Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(91)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring5Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(92)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring5Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(93)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring5Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(94)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring5Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(95)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring6Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(96)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring6Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(97)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring6Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(98)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring6Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(99)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring6Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(100)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring7Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(101)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring7Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(102)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring7Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(103)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring7Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(104)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSpring7Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(105)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop1Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(106)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop1Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(107)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop1Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(108)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop1Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(109)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop1Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(110)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop2Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(111)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop2Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(112)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop2Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(113)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop2Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(114)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop2Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(115)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop3Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(116)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop3Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(117)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop3Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(118)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop3Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(119)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop3Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(120)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop4Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(121)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop4Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(122)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop4Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(123)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop4Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(124)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop4Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(125)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop5Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(126)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop5Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(127)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop5Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(128)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop5Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(129)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop5Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(130)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop6Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(131)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop6Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(132)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop6Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(133)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop6Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(134)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop6Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(135)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop7Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(136)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop7Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(137)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop7Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(138)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop7Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(139)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop7Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(140)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop8Chart(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(141)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop8Number(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(142)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop8Random1(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(143)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop8Random2(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(144)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTop8Type(ByVal Tumbler_Kit As String) As Object
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(145)
            If (Tumbler_Kit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Tumbler_Kit")
            Else
                command.Parameters(0).Value = CType(Tumbler_Kit,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _barrelTableAdapter As BarrelTableAdapter
        
        Private _bottom_TumblerTableAdapter As Bottom_TumblerTableAdapter
        
        Private _bushingTableAdapter As BushingTableAdapter
        
        Private _chartsTableAdapter As ChartsTableAdapter
        
        Private _drill_PinTableAdapter As Drill_PinTableAdapter
        
        Private _knurl_PinTableAdapter As Knurl_PinTableAdapter
        
        Private _mid_TumblerTableAdapter As Mid_TumblerTableAdapter
        
        Private _recipeTableAdapter As RecipeTableAdapter
        
        Private _springsTableAdapter As SpringsTableAdapter
        
        Private _station_13_ToolingTableAdapter As Station_13_ToolingTableAdapter
        
        Private _station_14_ToolingTableAdapter As Station_14_ToolingTableAdapter
        
        Private _station_15_ToolingTableAdapter As Station_15_ToolingTableAdapter
        
        Private _station_16_ToolingTableAdapter As Station_16_ToolingTableAdapter
        
        Private _station_2_ToolingTableAdapter As Station_2_ToolingTableAdapter
        
        Private _station_3_ToolingTableAdapter As Station_3_ToolingTableAdapter
        
        Private _station_9_ToolingTableAdapter As Station_9_ToolingTableAdapter
        
        Private _top_SleeveTableAdapter As Top_SleeveTableAdapter
        
        Private _top_TumblerTableAdapter As Top_TumblerTableAdapter
        
        Private _tumbler_KitTableAdapter As Tumbler_KitTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property BarrelTableAdapter() As BarrelTableAdapter
            Get
                Return Me._barrelTableAdapter
            End Get
            Set
                Me._barrelTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Bottom_TumblerTableAdapter() As Bottom_TumblerTableAdapter
            Get
                Return Me._bottom_TumblerTableAdapter
            End Get
            Set
                Me._bottom_TumblerTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property BushingTableAdapter() As BushingTableAdapter
            Get
                Return Me._bushingTableAdapter
            End Get
            Set
                Me._bushingTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ChartsTableAdapter() As ChartsTableAdapter
            Get
                Return Me._chartsTableAdapter
            End Get
            Set
                Me._chartsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Drill_PinTableAdapter() As Drill_PinTableAdapter
            Get
                Return Me._drill_PinTableAdapter
            End Get
            Set
                Me._drill_PinTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Knurl_PinTableAdapter() As Knurl_PinTableAdapter
            Get
                Return Me._knurl_PinTableAdapter
            End Get
            Set
                Me._knurl_PinTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Mid_TumblerTableAdapter() As Mid_TumblerTableAdapter
            Get
                Return Me._mid_TumblerTableAdapter
            End Get
            Set
                Me._mid_TumblerTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property RecipeTableAdapter() As RecipeTableAdapter
            Get
                Return Me._recipeTableAdapter
            End Get
            Set
                Me._recipeTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property SpringsTableAdapter() As SpringsTableAdapter
            Get
                Return Me._springsTableAdapter
            End Get
            Set
                Me._springsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Station_13_ToolingTableAdapter() As Station_13_ToolingTableAdapter
            Get
                Return Me._station_13_ToolingTableAdapter
            End Get
            Set
                Me._station_13_ToolingTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Station_14_ToolingTableAdapter() As Station_14_ToolingTableAdapter
            Get
                Return Me._station_14_ToolingTableAdapter
            End Get
            Set
                Me._station_14_ToolingTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Station_15_ToolingTableAdapter() As Station_15_ToolingTableAdapter
            Get
                Return Me._station_15_ToolingTableAdapter
            End Get
            Set
                Me._station_15_ToolingTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Station_16_ToolingTableAdapter() As Station_16_ToolingTableAdapter
            Get
                Return Me._station_16_ToolingTableAdapter
            End Get
            Set
                Me._station_16_ToolingTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Station_2_ToolingTableAdapter() As Station_2_ToolingTableAdapter
            Get
                Return Me._station_2_ToolingTableAdapter
            End Get
            Set
                Me._station_2_ToolingTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Station_3_ToolingTableAdapter() As Station_3_ToolingTableAdapter
            Get
                Return Me._station_3_ToolingTableAdapter
            End Get
            Set
                Me._station_3_ToolingTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Station_9_ToolingTableAdapter() As Station_9_ToolingTableAdapter
            Get
                Return Me._station_9_ToolingTableAdapter
            End Get
            Set
                Me._station_9_ToolingTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Top_SleeveTableAdapter() As Top_SleeveTableAdapter
            Get
                Return Me._top_SleeveTableAdapter
            End Get
            Set
                Me._top_SleeveTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Top_TumblerTableAdapter() As Top_TumblerTableAdapter
            Get
                Return Me._top_TumblerTableAdapter
            End Get
            Set
                Me._top_TumblerTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Tumbler_KitTableAdapter() As Tumbler_KitTableAdapter
            Get
                Return Me._tumbler_KitTableAdapter
            End Get
            Set
                Me._tumbler_KitTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._barrelTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._barrelTableAdapter.Connection) Is Nothing)) Then
                    Return Me._barrelTableAdapter.Connection
                End If
                If ((Not (Me._bottom_TumblerTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._bottom_TumblerTableAdapter.Connection) Is Nothing)) Then
                    Return Me._bottom_TumblerTableAdapter.Connection
                End If
                If ((Not (Me._bushingTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._bushingTableAdapter.Connection) Is Nothing)) Then
                    Return Me._bushingTableAdapter.Connection
                End If
                If ((Not (Me._chartsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._chartsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._chartsTableAdapter.Connection
                End If
                If ((Not (Me._drill_PinTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._drill_PinTableAdapter.Connection) Is Nothing)) Then
                    Return Me._drill_PinTableAdapter.Connection
                End If
                If ((Not (Me._knurl_PinTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._knurl_PinTableAdapter.Connection) Is Nothing)) Then
                    Return Me._knurl_PinTableAdapter.Connection
                End If
                If ((Not (Me._mid_TumblerTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mid_TumblerTableAdapter.Connection) Is Nothing)) Then
                    Return Me._mid_TumblerTableAdapter.Connection
                End If
                If ((Not (Me._recipeTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._recipeTableAdapter.Connection) Is Nothing)) Then
                    Return Me._recipeTableAdapter.Connection
                End If
                If ((Not (Me._springsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._springsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._springsTableAdapter.Connection
                End If
                If ((Not (Me._station_13_ToolingTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._station_13_ToolingTableAdapter.Connection) Is Nothing)) Then
                    Return Me._station_13_ToolingTableAdapter.Connection
                End If
                If ((Not (Me._station_14_ToolingTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._station_14_ToolingTableAdapter.Connection) Is Nothing)) Then
                    Return Me._station_14_ToolingTableAdapter.Connection
                End If
                If ((Not (Me._station_15_ToolingTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._station_15_ToolingTableAdapter.Connection) Is Nothing)) Then
                    Return Me._station_15_ToolingTableAdapter.Connection
                End If
                If ((Not (Me._station_16_ToolingTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._station_16_ToolingTableAdapter.Connection) Is Nothing)) Then
                    Return Me._station_16_ToolingTableAdapter.Connection
                End If
                If ((Not (Me._station_2_ToolingTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._station_2_ToolingTableAdapter.Connection) Is Nothing)) Then
                    Return Me._station_2_ToolingTableAdapter.Connection
                End If
                If ((Not (Me._station_3_ToolingTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._station_3_ToolingTableAdapter.Connection) Is Nothing)) Then
                    Return Me._station_3_ToolingTableAdapter.Connection
                End If
                If ((Not (Me._station_9_ToolingTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._station_9_ToolingTableAdapter.Connection) Is Nothing)) Then
                    Return Me._station_9_ToolingTableAdapter.Connection
                End If
                If ((Not (Me._top_SleeveTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._top_SleeveTableAdapter.Connection) Is Nothing)) Then
                    Return Me._top_SleeveTableAdapter.Connection
                End If
                If ((Not (Me._top_TumblerTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._top_TumblerTableAdapter.Connection) Is Nothing)) Then
                    Return Me._top_TumblerTableAdapter.Connection
                End If
                If ((Not (Me._tumbler_KitTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tumbler_KitTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tumbler_KitTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._barrelTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._bottom_TumblerTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._bushingTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._chartsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._drill_PinTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._knurl_PinTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mid_TumblerTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._recipeTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._springsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._station_13_ToolingTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._station_14_ToolingTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._station_15_ToolingTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._station_16_ToolingTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._station_2_ToolingTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._station_3_ToolingTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._station_9_ToolingTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._top_SleeveTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._top_TumblerTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tumbler_KitTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As NCLRecipeDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._barrelTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Barrel.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._barrelTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._top_SleeveTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Top_Sleeve.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._top_SleeveTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._station_9_ToolingTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Station_9_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._station_9_ToolingTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._station_3_ToolingTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Station_3_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._station_3_ToolingTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._station_2_ToolingTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Station_2_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._station_2_ToolingTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._station_16_ToolingTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Station_16_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._station_16_ToolingTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._station_15_ToolingTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Station_15_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._station_15_ToolingTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._station_14_ToolingTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Station_14_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._station_14_ToolingTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._top_TumblerTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Top_Tumbler.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._top_TumblerTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._station_13_ToolingTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Station_13_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._station_13_ToolingTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._recipeTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Recipe.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._recipeTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._mid_TumblerTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Mid_Tumbler.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mid_TumblerTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._knurl_PinTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Knurl_Pin.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._knurl_PinTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._drill_PinTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Drill_Pin.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._drill_PinTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._chartsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Charts.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._chartsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._bushingTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Bushing.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._bushingTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._bottom_TumblerTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Bottom_Tumbler.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._bottom_TumblerTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._springsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Springs.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._springsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tumbler_KitTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Tumbler_Kit.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tumbler_KitTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As NCLRecipeDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._barrelTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Barrel.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._barrelTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._top_SleeveTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Top_Sleeve.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._top_SleeveTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._station_9_ToolingTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Station_9_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._station_9_ToolingTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._station_3_ToolingTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Station_3_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._station_3_ToolingTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._station_2_ToolingTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Station_2_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._station_2_ToolingTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._station_16_ToolingTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Station_16_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._station_16_ToolingTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._station_15_ToolingTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Station_15_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._station_15_ToolingTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._station_14_ToolingTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Station_14_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._station_14_ToolingTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._top_TumblerTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Top_Tumbler.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._top_TumblerTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._station_13_ToolingTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Station_13_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._station_13_ToolingTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._recipeTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Recipe.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._recipeTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._mid_TumblerTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Mid_Tumbler.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mid_TumblerTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._knurl_PinTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Knurl_Pin.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._knurl_PinTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._drill_PinTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Drill_Pin.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._drill_PinTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._chartsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Charts.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._chartsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._bushingTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Bushing.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._bushingTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._bottom_TumblerTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Bottom_Tumbler.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._bottom_TumblerTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._springsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Springs.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._springsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tumbler_KitTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Tumbler_Kit.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tumbler_KitTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As NCLRecipeDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tumbler_KitTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Tumbler_Kit.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tumbler_KitTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._springsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Springs.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._springsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._bottom_TumblerTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Bottom_Tumbler.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._bottom_TumblerTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._bushingTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Bushing.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._bushingTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._chartsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Charts.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._chartsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._drill_PinTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Drill_Pin.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._drill_PinTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._knurl_PinTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Knurl_Pin.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._knurl_PinTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._mid_TumblerTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Mid_Tumbler.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mid_TumblerTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._recipeTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Recipe.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._recipeTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._station_13_ToolingTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Station_13_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._station_13_ToolingTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._top_TumblerTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Top_Tumbler.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._top_TumblerTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._station_14_ToolingTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Station_14_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._station_14_ToolingTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._station_15_ToolingTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Station_15_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._station_15_ToolingTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._station_16_ToolingTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Station_16_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._station_16_ToolingTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._station_2_ToolingTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Station_2_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._station_2_ToolingTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._station_3_ToolingTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Station_3_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._station_3_ToolingTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._station_9_ToolingTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Station_9_Tooling.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._station_9_ToolingTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._top_SleeveTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Top_Sleeve.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._top_SleeveTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._barrelTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Barrel.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._barrelTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As NCLRecipeDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._barrelTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._barrelTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._bottom_TumblerTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._bottom_TumblerTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._bushingTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._bushingTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._chartsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._chartsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._drill_PinTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._drill_PinTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._knurl_PinTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._knurl_PinTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._mid_TumblerTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mid_TumblerTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._recipeTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._recipeTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._springsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._springsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._station_13_ToolingTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._station_13_ToolingTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._station_14_ToolingTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._station_14_ToolingTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._station_15_ToolingTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._station_15_ToolingTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._station_16_ToolingTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._station_16_ToolingTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._station_2_ToolingTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._station_2_ToolingTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._station_3_ToolingTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._station_3_ToolingTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._station_9_ToolingTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._station_9_ToolingTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._top_SleeveTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._top_SleeveTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._top_TumblerTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._top_TumblerTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tumbler_KitTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tumbler_KitTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._barrelTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._barrelTableAdapter, Me._barrelTableAdapter.Connection)
                    Me._barrelTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._barrelTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._barrelTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._barrelTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._barrelTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._bottom_TumblerTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._bottom_TumblerTableAdapter, Me._bottom_TumblerTableAdapter.Connection)
                    Me._bottom_TumblerTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._bottom_TumblerTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._bottom_TumblerTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._bottom_TumblerTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._bottom_TumblerTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._bushingTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._bushingTableAdapter, Me._bushingTableAdapter.Connection)
                    Me._bushingTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._bushingTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._bushingTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._bushingTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._bushingTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._chartsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._chartsTableAdapter, Me._chartsTableAdapter.Connection)
                    Me._chartsTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._chartsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._chartsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._chartsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._chartsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._drill_PinTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._drill_PinTableAdapter, Me._drill_PinTableAdapter.Connection)
                    Me._drill_PinTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._drill_PinTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._drill_PinTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._drill_PinTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._drill_PinTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._knurl_PinTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._knurl_PinTableAdapter, Me._knurl_PinTableAdapter.Connection)
                    Me._knurl_PinTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._knurl_PinTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._knurl_PinTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._knurl_PinTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._knurl_PinTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mid_TumblerTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mid_TumblerTableAdapter, Me._mid_TumblerTableAdapter.Connection)
                    Me._mid_TumblerTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._mid_TumblerTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._mid_TumblerTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mid_TumblerTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mid_TumblerTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._recipeTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._recipeTableAdapter, Me._recipeTableAdapter.Connection)
                    Me._recipeTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._recipeTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._recipeTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._recipeTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._recipeTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._springsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._springsTableAdapter, Me._springsTableAdapter.Connection)
                    Me._springsTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._springsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._springsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._springsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._springsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._station_13_ToolingTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._station_13_ToolingTableAdapter, Me._station_13_ToolingTableAdapter.Connection)
                    Me._station_13_ToolingTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._station_13_ToolingTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._station_13_ToolingTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._station_13_ToolingTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._station_13_ToolingTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._station_14_ToolingTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._station_14_ToolingTableAdapter, Me._station_14_ToolingTableAdapter.Connection)
                    Me._station_14_ToolingTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._station_14_ToolingTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._station_14_ToolingTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._station_14_ToolingTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._station_14_ToolingTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._station_15_ToolingTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._station_15_ToolingTableAdapter, Me._station_15_ToolingTableAdapter.Connection)
                    Me._station_15_ToolingTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._station_15_ToolingTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._station_15_ToolingTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._station_15_ToolingTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._station_15_ToolingTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._station_16_ToolingTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._station_16_ToolingTableAdapter, Me._station_16_ToolingTableAdapter.Connection)
                    Me._station_16_ToolingTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._station_16_ToolingTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._station_16_ToolingTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._station_16_ToolingTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._station_16_ToolingTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._station_2_ToolingTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._station_2_ToolingTableAdapter, Me._station_2_ToolingTableAdapter.Connection)
                    Me._station_2_ToolingTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._station_2_ToolingTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._station_2_ToolingTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._station_2_ToolingTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._station_2_ToolingTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._station_3_ToolingTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._station_3_ToolingTableAdapter, Me._station_3_ToolingTableAdapter.Connection)
                    Me._station_3_ToolingTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._station_3_ToolingTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._station_3_ToolingTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._station_3_ToolingTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._station_3_ToolingTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._station_9_ToolingTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._station_9_ToolingTableAdapter, Me._station_9_ToolingTableAdapter.Connection)
                    Me._station_9_ToolingTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._station_9_ToolingTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._station_9_ToolingTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._station_9_ToolingTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._station_9_ToolingTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._top_SleeveTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._top_SleeveTableAdapter, Me._top_SleeveTableAdapter.Connection)
                    Me._top_SleeveTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._top_SleeveTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._top_SleeveTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._top_SleeveTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._top_SleeveTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._top_TumblerTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._top_TumblerTableAdapter, Me._top_TumblerTableAdapter.Connection)
                    Me._top_TumblerTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._top_TumblerTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._top_TumblerTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._top_TumblerTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._top_TumblerTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tumbler_KitTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tumbler_KitTableAdapter, Me._tumbler_KitTableAdapter.Connection)
                    Me._tumbler_KitTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._tumbler_KitTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._tumbler_KitTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tumbler_KitTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tumbler_KitTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._barrelTableAdapter) Is Nothing) Then
                    Me._barrelTableAdapter.Connection = CType(revertConnections(Me._barrelTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._barrelTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._bottom_TumblerTableAdapter) Is Nothing) Then
                    Me._bottom_TumblerTableAdapter.Connection = CType(revertConnections(Me._bottom_TumblerTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._bottom_TumblerTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._bushingTableAdapter) Is Nothing) Then
                    Me._bushingTableAdapter.Connection = CType(revertConnections(Me._bushingTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._bushingTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._chartsTableAdapter) Is Nothing) Then
                    Me._chartsTableAdapter.Connection = CType(revertConnections(Me._chartsTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._chartsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._drill_PinTableAdapter) Is Nothing) Then
                    Me._drill_PinTableAdapter.Connection = CType(revertConnections(Me._drill_PinTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._drill_PinTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._knurl_PinTableAdapter) Is Nothing) Then
                    Me._knurl_PinTableAdapter.Connection = CType(revertConnections(Me._knurl_PinTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._knurl_PinTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mid_TumblerTableAdapter) Is Nothing) Then
                    Me._mid_TumblerTableAdapter.Connection = CType(revertConnections(Me._mid_TumblerTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._mid_TumblerTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._recipeTableAdapter) Is Nothing) Then
                    Me._recipeTableAdapter.Connection = CType(revertConnections(Me._recipeTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._recipeTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._springsTableAdapter) Is Nothing) Then
                    Me._springsTableAdapter.Connection = CType(revertConnections(Me._springsTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._springsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._station_13_ToolingTableAdapter) Is Nothing) Then
                    Me._station_13_ToolingTableAdapter.Connection = CType(revertConnections(Me._station_13_ToolingTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._station_13_ToolingTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._station_14_ToolingTableAdapter) Is Nothing) Then
                    Me._station_14_ToolingTableAdapter.Connection = CType(revertConnections(Me._station_14_ToolingTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._station_14_ToolingTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._station_15_ToolingTableAdapter) Is Nothing) Then
                    Me._station_15_ToolingTableAdapter.Connection = CType(revertConnections(Me._station_15_ToolingTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._station_15_ToolingTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._station_16_ToolingTableAdapter) Is Nothing) Then
                    Me._station_16_ToolingTableAdapter.Connection = CType(revertConnections(Me._station_16_ToolingTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._station_16_ToolingTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._station_2_ToolingTableAdapter) Is Nothing) Then
                    Me._station_2_ToolingTableAdapter.Connection = CType(revertConnections(Me._station_2_ToolingTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._station_2_ToolingTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._station_3_ToolingTableAdapter) Is Nothing) Then
                    Me._station_3_ToolingTableAdapter.Connection = CType(revertConnections(Me._station_3_ToolingTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._station_3_ToolingTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._station_9_ToolingTableAdapter) Is Nothing) Then
                    Me._station_9_ToolingTableAdapter.Connection = CType(revertConnections(Me._station_9_ToolingTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._station_9_ToolingTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._top_SleeveTableAdapter) Is Nothing) Then
                    Me._top_SleeveTableAdapter.Connection = CType(revertConnections(Me._top_SleeveTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._top_SleeveTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._top_TumblerTableAdapter) Is Nothing) Then
                    Me._top_TumblerTableAdapter.Connection = CType(revertConnections(Me._top_TumblerTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._top_TumblerTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tumbler_KitTableAdapter) Is Nothing) Then
                    Me._tumbler_KitTableAdapter.Connection = CType(revertConnections(Me._tumbler_KitTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._tumbler_KitTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
